%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Microsoft Word - FBT-flowchart.doc)
%%Version: 1 4
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 20:02:40 01/14/16
%%For: (Dung.Ho)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%ADO_ContainsXMP: MainFirst
%%BoundingBox: 90 574 521 718
%%HiResBoundingBox: 90.0 574.0 521.0 718.0
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%+ procset (Adobe Acrobat - general image support) 1.2 0
%%+ procset (Adobe Acrobat - monochrome image support) 1.2 0
%%+ procset (Adobe Acrobat - color image support) 1.2 0
%%+ procset (Adobe Acrobat - indexed color image support) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W1 vm op crd OS scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt  0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
%%BeginResource: file Pscript_CFF PSVER
userdict /ct_CffDict 6 dict put     
ct_CffDict begin                    
/F0Subr     
{
    systemdict /internaldict known 
   {
      1183615869 systemdict /internaldict get exec 
       /FlxProc known {save true} {false} ifelse
    } 
   {
      userdict /internaldict known not 
        { 
          userdict /internaldict 
          {
               count 0 eq 
             {/internaldict errordict /invalidaccess get exec} if 
             dup type /integertype ne 
             {/internaldict errordict /invalidaccess get exec} if 
             dup 1183615869 eq
             {pop 0} 
             {/internaldict errordict /invalidaccess get exec} 
             ifelse 
          } 
          dup 14 get 1 25 dict put 
          bind executeonly put 
       } if 
       1183615869 userdict /internaldict get exec 
       /FlxProc known {save true} {false} ifelse
    } ifelse
    [ 
       systemdict /internaldict known not 
       { 100 dict /begin cvx /mtx matrix /def cvx } if 
       systemdict /currentpacking known {currentpacking true setpacking} if 
       { 
          systemdict /internaldict known { 
          1183615869 systemdict /internaldict get exec 
          dup /$FlxDict known not { 
          dup dup length exch maxlength eq 
          { pop userdict dup /$FlxDict known not
          { 100 dict begin /mtx matrix def 
          dup /$FlxDict currentdict put end } if } 
          { 100 dict begin /mtx matrix def 
          dup /$FlxDict currentdict put end } 
          ifelse 
          } if /$FlxDict get begin } if 
          grestore 
          /exdef {exch def} def 
          /dmin exch abs 100 div def 
          /epX exdef /epY exdef 
          /c4y2 exdef /c4x2 exdef /c4y1 exdef /c4x1 exdef /c4y0 exdef /c4x0 exdef 
          /c3y2 exdef /c3x2 exdef /c3y1 exdef /c3x1 exdef /c3y0 exdef /c3x0 exdef 
          /c1y2 exdef /c1x2 exdef /c2x2 c4x2 def /c2y2 c4y2 def 
          /yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def 
          /PickCoords {  
          {c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2} 
          {c3x0 c3y0 c3x1 c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2} 
          ifelse 
          /y5 exdef /x5 exdef /y4 exdef /x4 exdef /y3 exdef /x3 exdef 
          /y2 exdef /x2 exdef /y1 exdef /x1 exdef /y0 exdef /x0 exdef 
          } def 
          mtx currentmatrix pop  
          mtx 0 get abs .00001 lt mtx 3 get abs .00001 lt or 
          {/flipXY -1 def} 
          {mtx 1 get abs .00001 lt mtx 2 get abs .00001 lt or 
          {/flipXY 1 def} 
          {/flipXY 0 def} 
          ifelse } 
          ifelse 
          /erosion 1 def 
          systemdict /internaldict known { 
           1183615869 systemdict /internaldict get exec dup  
          /erosion known 
          {/erosion get /erosion exch def} 
          {pop} 
          ifelse 
          } if 
          yflag 
          {
              flipXY 0 eq c3y2 c4y2 eq or 
             {false PickCoords}
             {
                  /shrink c3y2 c4y2 eq 
                {0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs} ifelse def 
                /yshrink {c4y2 sub shrink mul c4y2 add} def 
                /c1y0 c3y0 yshrink def /c1y1 c3y1 yshrink def 
                /c2y0 c4y0 yshrink def /c2y1 c4y1 yshrink def 
                /c1x0 c3x0 def /c1x1 c3x1 def /c2x0 c4x0 def /c2x1 c4x1 def 
                /dY 0 c3y2 c1y2 sub round 
                dtransform flipXY 1 eq {exch} if pop abs def 
                dY dmin lt PickCoords 
                y2 c1y2 sub abs 0.001 gt {
                   c1x2 c1y2 transform flipXY 1 eq {exch} if  
                   /cx exch def /cy exch def 
                   /dY 0 y2 c1y2 sub round dtransform flipXY 1 eq {exch} 
                   if pop def 
                   dY round dup 0 ne 
                   {/dY exdef } 
                   {pop dY 0 lt {-1}{1} ifelse /dY exdef} 
                   ifelse 
                   /erode PaintType 2 ne erosion 0.5 ge and def  
                   erode {/cy cy 0.5 sub def} if 
                   /ey cy dY add def   
                   /ey ey ceiling ey sub ey floor add def   
                   erode {/ey ey 0.5 add def} if   
                   ey cx flipXY 1 eq {exch} if itransform exch pop  
                   y2 sub /eShift exch def  
                   /y1 y1 eShift add def /y2 y2 eShift add def /y3 y3  
                   eShift add def  
                } if  
             } ifelse  
          } 
          {
              flipXY 0 eq c3x2 c4x2 eq or  
             {false PickCoords }  
             { /shrink c3x2 c4x2 eq  
                {0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs} ifelse def  
                /xshrink {c4x2 sub shrink mul c4x2 add} def  
                /c1x0 c3x0 xshrink def /c1x1 c3x1 xshrink def  
                /c2x0 c4x0 xshrink def /c2x1 c4x1 xshrink def  
                /c1y0 c3y0 def /c1y1 c3y1 def /c2y0 c4y0 def /c2y1 c4y1 def  
                /dX c3x2 c1x2 sub round 0 dtransform  
                flipXY -1 eq {exch} if pop abs def 
                dX dmin lt PickCoords  
                x2 c1x2 sub abs 0.001 gt {  
                   c1x2 c1y2 transform flipXY -1 eq {exch} if  
                   /cy exch def /cx exch def   
                   /dX x2 c1x2 sub round 0 dtransform flipXY -1 eq {exch} if pop def  
                   dX round dup 0 ne  
                   {/dX exdef}  
                   {pop dX 0 lt {-1}{1} ifelse /dX exdef}  
                   ifelse  
                   /erode PaintType 2 ne erosion .5 ge and def 
                   erode {/cx cx .5 sub def} if  
                   /ex cx dX add def  
                   /ex ex ceiling ex sub ex floor add def  
                   erode {/ex ex .5 add def} if  
                   ex cy flipXY -1 eq {exch} if itransform pop  
                   x2 sub /eShift exch def  
                   /x1 x1 eShift add def /x2 x2 eShift add def /x3 x3 eShift add def  
                } if  
             } ifelse  
          } ifelse 
          x2 x5 eq y2 y5 eq or  
          {x5 y5 lineto }  
          {x0 y0 x1 y1 x2 y2 curveto  
          x3 y3 x4 y4 x5 y5 curveto}  
          ifelse  
          epY epX   
       }  
       systemdict /currentpacking known {exch setpacking} if   
       /exec cvx /end cvx 
    ] cvx  
    executeonly 
    exch  
    {pop true exch restore}   
    {   
       systemdict /internaldict known not  
       {1183615869 userdict /internaldict get exec  
       exch /FlxProc exch put true}  
       {1183615869 systemdict /internaldict get exec  
       dup length exch maxlength eq  
       {false}   
       {1183615869 systemdict /internaldict get exec 
       exch /FlxProc exch put true}  
       ifelse}  
       ifelse
    } ifelse  
    {
       systemdict /internaldict known  
       {1183615869 systemdict /internaldict get exec /FlxProc get exec}  
       {1183615869 userdict /internaldict get exec /FlxProc get exec}  
       ifelse   
    } if  
} executeonly def
/F1Subr
{gsave currentpoint newpath moveto} bind def 
/F2Subr
{currentpoint grestore gsave currentpoint newpath moveto} bind  def
/HSSubr 
{
   systemdict /internaldict known not
   {pop 3}
   {1183615869 systemdict /internaldict get exec
    dup /startlock known
    {/startlock get exec}
    {dup /strtlck known
    {/strtlck get exec}
    {pop 3}
    ifelse}
    ifelse}
    ifelse
} bind def
end                                 
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 3777 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-701">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:CreateDate>2016-01-14T20:02:40-05:00</xap:CreateDate>
         <xap:ModifyDate>2016-01-14T20:02:40-05:00</xap:ModifyDate>
         <xap:MetadataDate>2016-01-14T20:02:40-05:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:3A20476709BBE51181DCB7CA0E52C5A2</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:3A20476709BBE51181DCB7CA0E52C5A2</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:documentName>a24f5dba-bd7c-11e5-0000-ed9fac47cb4d</stRef:documentName>
            <stRef:instanceID>uuid:ec3bfadb-74ae-4bfd-a060-8f43fa207b9b</stRef:instanceID>
            <stRef:documentID>a24f5dba-bd7c-11e5-0000-ed9fac47cb4d</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Microsoft Word - FBT-flowchart.doc</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>Dung.Ho</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:format>application/eps</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
90.0 574.0 431.0 144.0 rectclip
%%BeginResource: font PUYAAA+Times-Roman
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /PUYAAA+Times-Roman def
/FontInfo 6 dict dup begin
/Notice (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development; Cyrillic glyphs added by Valek Filippov (C) 2001-2002; Numero, infinity and Omega made by Dmitry 40in (C) 2001) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
def
/UniqueID 5020931 def
/FontBBox {0 0 0 0} def
end
systemdict begin
dup /Private
11 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 0 450 470 662 682] def
/StdHW [30] def
/StdVW [85] def
/StemSnapH [30 38] def
/StemSnapV [85 103] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs [{ct_CffDict/F0Subr get exec} {ct_CffDict/F1Subr get exec}
{ct_CffDict/F2Subr get exec} {ct_CffDict/HSSubr get exec}] def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/.notdef <1C60D8A8C9B8707C25> |-
/space <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
end
%%EndResource
[/N10/PUYAAA+Times-Roman 1 TZG
q
90.0 574.0 m
521.0 574.0 l
521.0 718.0 l
90.0 718.0 l
h
W
n
q
0.12 0.0 0.0 0.12 0.0 0.0 cm
q
3599.0 0.0 0.0 1225.0 750.0 4775.0 cm
q
n
0.0 0.0 1.0 1.0 re
[/Indexed [/DeviceRGB] 255
<~!!!$!s8UEkc`O=OmHs:pKnUb/XVY;dF`hg_bl9,ebSXf8&OTJ?L8Q;YZn]Ml*,g`e
[,D`uBI91`$S=@\H^QP"lmo0hg"G&BPERj]28mGO:JXbsA7YE-p7\1Rj5]0jSXiqf
>.M2SR@0IVBP=c[[&9h"p%@uV;c>\:3R#^kMi3MFf@RgR^j:<Qm-O)tiSbf#P;>$Q
'Mr<p`V(sum0bC$/[j[eS\uh=\M5ou.Ab?0C5"1@fcYj>9MS@p5>N"nBM_N%D/F,8
,U>9+2ATM:N/W^VO,mXT?ZC(*'22aA0g-%.8Ji9].&+i2dEt<K6a3f!0/,,s_8.S!
d/X.Hzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzz~>]
cs 
<<
/ImageType 1
/Width 981
/Height 334
/ImageMatrix [981.0 0.0 0.0 -334.0 0.0 334.0] 
/BitsPerComponent 8
/Decode [0.0 255.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup /LZWDecode filter dup 
] >>
pdf_image J,itR3$]7K#D>EP:q1$o*=mro@So+\<\5,H7Uo<*jE<[.O@Wn[3@'nb-^757;Rp>H
>q_R=AlC^cenm@9:1mM9jS"!dTMT<$3[GQ$8#0$s<4ZX!SPQ1`C/m<k<ioH)<bk^H
j`\=EYZP^B4!g3;B=(iZ<kDqOh/Bf.DHAorf'R[GJ:MjUjnAY&^gM+`4=1jRLW!YA
=M,1XnW1b%E`kF'""fk`Aoh+fk'&t\ctIN)4XQLiSc\"2>.nOW>o_#g[Tbnlf58"P
DKf<uk4a;=i,EpF?oS,uYN0_L>eO`O'@5laH<i_4=0:*@G'dN/kBFVsl%-A"cR5((
kHo<C*ku?sh=(,cHsD.kfBr>1;nZN[kP+oS^^c:br4nCF%0NKRg]I_rODGp<4E*\7
$,Ve)?iWL^bV]jCcl=VJ`"<DGJ\b1D9bYJUKKTpdO_e;!`3E!I)8VG??Q7#tb:+:J
OmIJi`mN:i+ioRXGot-@9=H%bZ>?'ZX-,T1.E[a)kpT1;bd=:j;QRPWacbGu1!GL0
]._D@Ur+t4PAK$>9^]D)"g[&o)X.:<F;b;_!)O:5:TnFQ#QcWO+pg$?S(J%mmW^,d
6*jhR8^`j'1H;t=QiIK)!14T0!Ub@24[V%/r:U/a"UaM>Q!;fEJ,k4q8(')N/R-gA
ara;<J7'5Y;cP,6%91Yj;cc"&O=9j('pTe17^]XHC"elDGj0gFql<]%elWOm!j&mJ
5?/i>PAN?'SIbc&P\:^o:Y$p,#M^l<39Pkn!#u1u^fW/Nh0"XM#dY:c*Hcs5:_SE^
\)l"]ZP4u5DGt]_&Q?<kQ)fo)P9$gj?QbFLJ%BeDk>0SM[?LoJfFsm/</uY-7aMid
iBP[3GU*JiTT)0`!!&;a5$@q\Np9bBKu6C81Y)jtgs1nK=b$KX6WDmk"n-Eh:@:!"
ll-@kO1JGjX-hl],lst.^]bDX!gO8MOuaC0WLMPJ:,-274(RTdB^VIUL#pqkj+7;L
Y,=d-24^BFerGK.n*Bie/^),F,H"">)jX2q!MF8nI/tJ#!ChX19;R5G\A^m%fXr5;
`8<Y<'AC"p$`1\d)X_PNiLEsWCq;eWdcg(Cc)&X0SnppA3n'qoP60@o(']??9hEIQ
Sb&K^!MH2>6?W$^"7\0HLN/u+'ipH8?;>nK#@Nm>V8\!JNu@aLSTD1"???3u8)<AL
B-PH_CNX`L,u"Co.^tGMiGl!Y5e/\LqVAX]IB+O556fp6)ft[s90)pW=7Whll9KW6
%MhC\@"o0go32`#"b=Z:!`VNAFWaP.SVE1/(F/?Zm[aj!B@cL:9&<s;OrOH%/I7B3
pjZ,1kICkcg`<[nKlFUU7FR@j):In5$4I+o7na#OqY=*Kjor3?!8A!Ag1BXLLd#AI
"4[1$AO%tH_2$UqgS>j(;%Nl;f*M>8O;)[aL+.[E+O+9RBT#Gg01f:tC7m&+FDJ)b
`Ks(59Xkg5OHIU<o^KU3Z^u=I"aR:O@`]ke)EI/_!(ppE%G0:!@5/6[63oe#@Ck_Z
^bSJQ3A3,L6'%3Wop@(oS9*TkadQ.%Z-9QL!p-f89!_!%:"d0[B!Lf"J4^;GWOEZ*
r99b@??"2(gjH"fl^h&!VU!lP4l0/&Ss/Sk'T)3@-ir"jPP0T);JAAZ%1,([%YIU3
*1S1+$DL&aL/@^u7EG]=5DeL@3]TVZ%t%2rCT[%Ol75=Q74BG1B_XU[nJc(NKK;pV
D,P[[:$KJ&V2)dO7i6o/W>%ppeCpGB>)Y_EC\)XU8W6=iK2YsQcq]atFtJ>!ZIugF
C+bq)!9__DNfs'1eB/r;,rWZ1X6>q1!aNnCff9Om&ThDY@\1/f;<u1NW@P5<4]`QQ
NdG#mC+:*"fG(@=\/&,-i]]Yn'Ec-Q'Q/ls6@buQ04hbKC'QrDWjLu^R0rsuM<X<-
THbYG$CZaV_L5LT?#/^o&O!A?rW&i>$)"VZZHGSP4.(]Gi*r1[9[5AD7@aNUKTL.G
/]8YHcHMZVI>Dd@6H&,+m@m$mSi4IR'C[[W0*U=I=,uiX>KqH^7HqKeY4c2Vh0\UE
n[paHN%/RInn"<MZ;/-F[bDBb(TR4IeOa[3(?nY+'>Z_*J-N2WAGYdqr`0h4daJT3
CMrPX-bpkRiS6SOnHL/T=H(Y"#ND_I!Ln5Tjq:nQr:t,bQ;qq/bt$Gu'l,-&a#-T<
WN72$kn;$Nk%`+9S2HGO"rm^f@jYaASWiW!;9E$;.V2keQ1Dptb?8a9A^E/[/kUPG
-Ws/--5DH/%D\:t79%>AUOf$93H3Cf&2P1o&S:'Z<Yhe9=+$.&aYk+=C/6Nf=KHUR
`VEI@.A>^9%u`->'=CUUkXS--Eh2%1XG_d6.\(tCZ4$*0/E-UM%/lhV5p=TY'%n>M
:Fb%nD:+8i>"3nqDm0"ddX":afbP9m)t4P;^aX_8L6GG5!sX-uj#Ut7.b0l5MEVrN
<:*RDWmcENe;$5c<kAG=hr8jDk>*q4gD($[o)Gc6p&?Vda0E#$LrCrI@Oq@"9UlQ4
1AM[-?+mAToEYHDHY6C,4q)crVZ>[D:M_BCGJWI_$/p8*LN(bt_t\oRi`oEB&=tGB
36)o,gi&5D;@1Cm0-TCT5E^&):!++s.ckBBQLaH*bS^'Xk'ZObn*Y&=aDX%3>g&^6
Hniu/7mZ':Z_FrX9Qq\L?fo$LJ93'Gd3tVaUtkjIFj^HDP1Ng1?#-3Xm`\#0!a4k[
_.N,t@_F&tF^DjTU9JobpU=?&m"nZ?p3ctq;TEQ9lG9.]Vb#+$isUm+i\Igbl*oAW
D6QpeVtIcbhn&Q48fe:N@jqQ;Y(LK?8jXiBQ;Y\2+-l3,A(CW%1m@jsJsNWk$bI]*
=*Fd,;@`C3.'&Hi\S#1?]Xudkmp^VYKI0[ETZjMCj5]$T3)<mOa3<uKnF#ba8\Z9I
Zla"\l$F9D*p);7(Ob;l8([VR_sK?GFHojYNF3+lh*hjHko;6K?htkor#[QiDJ]9I
M#2h?n;X*F8FWbfp23[ondW<F-tED$`rFBcm*Gl+E!SPe?ic/A@h.FEB'B>ojHU$p
GmR<JcW'@oK`\D)!p#%;,J<h)RY=Q;"cdKbD?u_.AHlpQ#0s1O`,u7d]*E;"_XMs;
0RuYIKa=J2rD8NP0Tnp;QO/<e$.,9@n=iDAV[A,n#-b8qY]/RIh[>GT$IHM`&@+ao
[g[ol%+*:onBsbPf+!B4%FEt*nD\LC`t!tA%aaX;Yjt5Ek7<OK"`XI^nH+"*pCN2_
&((l[OV1&Z#8*&3&ah(\,XW2a.0m+/iGgP>&N(5@N>&H0'BD?qO\liJ<>BLU1D%56
N&)0d/AmTS(9q]lnSg8A1]q`+$k<Kqbe=1AHPg3l(.no9UFd:EM&Bbo(s2UV@kIk6
4W0B\,S?Q=?p"OD0c0A\)ko,,l0&+W1':CO)pukRdD2>=#QmFN"7a\XmMQEb!!=H*
1""r$mZe`MO9>YH"#9<fma3(LOVWR/";1_XiX6bUd`^Q*!2'N!+92O0"p6Tf(%MqU
Z4red7K>aZbN,f+J-R.D0-Cl_Sl.]sE_u)m"P",\,r.t9WRiH%>p0hgSPj#GE_.Qo
!@IAW*ti?4E=F;#LF;?$-^'0(nq`d`N@=>A.4MkXEg\-bFO/kK-o.P1d[Zbg`?Na6
'U#bjEjmR)OXb10/2G0nZH1,Xbq/F^+&,TaEnM@o^7%sY/hr\FBp10D%Kq;S"G-s`
^e6<,D(c3X01$'MUFZPb#R'&c"VV%@ZNuri$m;38"JAWr;]HoY))F&iq\(0:o-PTD
.Ks2["bHt8@KZk-=Ydcc0iL.)1=F';`&/_T18"[PJ,fao2)1a*"i(*A+AN(2E!>i>
la&d<dD[]d%ko,6"]GI&1Je5t;_sVV"k/A9'4Sj8Os-$+3WK18;`?O`:*>`l0@R)f
'986^[l1Ra!&H52'>a__`ZSYc!#+*Lmtj+V]00U<4.l[4J6>&lk;=@_4O`gb1R-5W
p`VHl2Y6;jTOIm7M)=h=5k"k?9=[>t&OE'd"[ajr^e$ea=p?*D3RfWIoFid^ZU(5c
"Mb!@63[RW4>O]T1R(Z>oM[>@0Hek^2'>sjZu4ofdYlU482.5<BY-gBN<o0<Mj0Ju
EsG3N?V0m`1)-Ole>Z'Df1DoH9/O$NFL[%3]h@fs9IO%;FNEq#b^af_9e\.klLR`W
h)NpBY8$(nF0S4kAPTW&5n3ojo_RbCeppVZ"185(FSMf-4u2Yn;"Vq..WH@,!'$VP
,F'8?'aArHWW3#-!?bnQ!,!G)0'r6dEo91e?iUBuTK&TW*48:3Pk;B!4]MJq3Zr/A
J,f\Z>ug<T<2RM7d?"Q_C-"Ur#4eltNN6.#^]:#-#2jG]J8n]=rE0f];@5&uJ,rg5
WWsb""Eg\?<NMne,R5Qu#>p[ho_cU,,R6]E;rDk!<RF?;_P#FT<?o%SP!r\34^Mk/
!0p@\j1A@bF'!MVht<48<Ib&aKKHtb=OO`fX1;X"El3EF#/e8\+9>Yh+PPBl<q5EW
_q53H/QObfrK[/LJ4;<Ea??r@!#6G`XT)e,.:$HB;r@[_(1@dj:7YcX#BfAs+F@''
EG$r2B5,h$TR&i2"]n`\_cC;B[M*(mPuuQGBsrq1MB<]9DcgNL@hpq:b?\iCb@C4P
5QH0edG8US_e@K*1;J-#[Td>:e>Tgo9NB(ui-mGs0lC`eDPXZ^Q@;-m5?'Q:DO/p!
!'E!&'leF8EOQfi_P:GF<'s[h#Sm[tJ2Y,C203t%F14;Rlf3!eL&cE`FLOtdpJH&`
_f'$4-h^IT2dpkS4`u@IC,WVCJ:h6=i?4IuGIN!Ej#AHrJTuBqGLdfedXN6%BF!.W
H+0>ipRumlV0[?bHFL#&pT]'(SQ?V@.@(SP2f;!+]m!ia#?S<\pX+CJeU;YpICIa3
^]A[F!I`SaI^e]np[NYHc$87&Gr6r`6ejZ1\g_gD75iEk(=RcBkC<mcJG8/VQlB/e
f72?PJcii>6Cgtu(.M?bGo/Jlamjr!M%hp74''[WK%YaC8itZZ.@0Br6S23g-\M1p
SCg4XGY*XbXb>^`KiiFY=B[.I^&S.^8,!7%@a;lAI>@T61>!\*M7&,*>B&RD**=_K
"0IA'O`EjR<u"qoGaF<kdtZk9LH*44pnTZII>m3aMaE@)^k#oq_FM&$EoP2t=P-:A
a='$mN;1gV37j3K<WEs@.$naBFtkn,d>o.J8so<-YnrOuAWPjpO?"8>_MNf=W!<DV
CZ<O"R3Y?a*[ga[N*.P`q(7\20ITr+Co"%_\<DZ86:]]u-eV.N),;h&;i`q>-l?8`
pYgj/n!7*g7[\!=\Sm?CE\@03NL>)?eMgF+SVZ:MPSo?K\W/&*PDP]n0%l_Qq48t$
\=6LgPPL'(p^N)48!5mZ6WpuQ\\F)+_C&>r@7f:8\VH,(g.$@n9\J*kA0%6#l(0l>
Sml]$l.oIO,Us\6TEJ&_U32rMJ"T-kTU;FG_J`SC5b@_i/6X!d`&XOnF.ucZU4VL$
fU8K9CQh?[A[b&XqELbnh47YfTDE,8g(l8$;2>!I-?ig.C'/o#j=?[/VYUClR*2A\
N'FmI/in33>'_MRBKG@_OK9j!%r-IAh2)3@W4J9\H:0,!8VXgGI$Uu^(p01:U*]WT
DX/KPJ08SQ&ZVX#\:^Vk+D5%*\#\5tV\eBaHMU!Tat<I^L:Yq^[JbU8Wa$h9F=$]]
3p&nXm8hbWBnEscc/pfQDFS2F;4o+iML`uSa/KpOOt;>D$Ksi]3sI/s5QqWp,MJF)
FNc)3O=e++qZhc-c6N27Q?s)fH4Y.0Wf&75`oL((F_tlF]r7ju9!<*=/bhum_C"@'
oW!;bKT`cs!2bD&!a;aLjV40glNJN0[l>,3@Qh326auTD=gfkBV%B/o!/\K6mYC-0
>O#/L@eQHI?!FsA?n)5S#JS*O!oOj^J/2l]O?,EaYBeE"Dt6MiSu+TD9"Urd4&*R?
1=kN8]-I3iA&5Q)aHf6pB<"8,)KV$cW$0pGP$?Qb)H]%4$+ts'\A0"i-15?;+AX<S
B#]F.W$Ga4GK/EW;l6SC90Qeoq.*`2-[V8u.u`7ora7<e!Qp^-mIX`)87@>,!Itk_
_^nZs3q.bQ^Ser9B\$N^:ok,?QDUlI`9(:$d-i:#Xsl8(m9WcR;Q7GTa@L2h#^aGJ
CV%/8G=nC)LkYuD]?BG8Ib`57Y257o*o;7JIk%Y9W7YNa%X$Rjf)&3Fgu;Un87@D'
^o6*NKi1l49%U[@LO<$d44#4b>E\df-[L5::Jba2g4mc0GcQ(&0GnnfEmgm/FXr>h
4;Kt\?n4@3ZjSL.W?U+EE7dUnL;4jN#?8(lTP<^_?\X5NV"M-21-2HsZ\8If-6QJ"
.,$aN\1O@P7oYSlBTGS(eO<uo.suH#(0E-)D4Lg&r%lm!k[]SOf:BJ+Y7'+n3!,"#
Q(>j@7odh37SorPE@"]EWs#]Hk-@*/G$X%6.\^Y<r/M$W`f08:kIA9O:"B'?aeB[(
Gu`FiF-kpffdA)Ua=pqKY55aWKNfXKL*-Nt($K$?Y't1J2JoLHVqJ$_ZYcMY"b4-W
m*WiZ\r3@gjt#4l5f161;kC/DW&482E6+l'Vna"WUSmGDC<Sg4E2A<ZD+ELCB@*,5
>UAgHjj34eU$CcD;i@5irpS9+DX<+=li-Bo7=VU]psUfE@HR7M"/ntK8?rW%`@A^4
j0QDN;rtk4jr&I,6>pfZ-eB>P\D:';L'%8-P`0:4kN:Jt,l+cR<]_5iksD00LPhQK
6d4YYhZ`cVW?e9.nmmKQlWZ9`B0sGZR#%j%cTGdj/1^K:W0+uqhZheYc(nI@RQ;MN
-=$n*5#9I;htTjH_?`]KT9[7s)Nh4'nA!,oL\Lr;#N9=Qd4:_cCa(qe1t8?#=6=l1
!WWo@Jma[B0_bVR!5d]VfQ9;#&W&p8O]\ts0b4Be!-+Cu=9\a-_5*5s1nIPl#(ra-
J:+d70:5GL^tEB@!#UdBk@+IZ!.-L)K`[Ge-qFA.#1>d[TE%q8%gRc>:eGi`#S-o0
W>)@D?DV)2<osK]TE%"oSm(NIfN`6@-`mLsJP*!^QWjZJ^]?\k2uj;;i%REXD'/fd
JV$3H80C6d$+]-%_(5/J('"O@6(ot9dih3-k[:fu`02.<`b4cRaXn,uKYcSSPe8O[
m?.f^.:HmL!!-ur:H0!rD:/\)a$DC!%X.mfWIj@iS;ba34.iV7[kM.TP*Q[_oe67B
GUjs"i)-/XBI?C[a7r@-E)<c;":PJ0Hr>2U']Hh]'F'L@B^?"`,UjXD#D$9HqOo5C
ddIIS?iVgJ!"EsD"u>FX\s0*!e.B'@^utb:#-&?$$D`d!'+d(%@[@nN$bELhXHADL
V?4t69cP^Y$IH1KOttUu/l'h'mt!"LONK6$PF1&H^iGOQ5&R,Bdia]l9\,l:F$Rg`
^jD='+Hc7ppo3I4p^54sHp$)jnsaJC5@@13r?R1dK-SJ*.U(l*bk,)DZ#)jp/\=rE
RjH7X*%=ITcOA&Q!#/?#!)50E0#l9E,iJNqX5l2'^MDg5`mkan'&`rnfEMb8't%sb
=#JNP?<=Q-EX[J+fKg`Ie-[W.-r+UO$DfGIRKTrOW`(nY[U[!3,n\j*&Qn;Q:)h/E
&uNU!?r/2u7qu46^]C*Q,037A>e>,6/l3IbK&CZP+Jo1TD?'bsp'-Dr.5N=u;N16+
Vb0jfb1kAoA@0G$N30C;\PRmE1,MTqSIODZi#,8kCi-?>_W`B`N68/):QRa+9f6#!
(aK8NV)0Y1Uc#r7G(Ti'/h!,CGgZt[4)2^'-KtL4`:@R3K>sYJ-n#s*4g=DnP%iT*
QIkH$,<Z;`D\Z='e]n!lSc\u8Ie@S?QKPhs]<e(HK/">L@qOqIP*tWn76P<0[XFhB
-)ri3$Lrs!]>#P_a8d07(2V8'3P^gpHDXJ24pp.@4m=`XGgA/'!JhcmQquZ?,M2uU
2[q(Fe>!og-/_T:^>]g+SNT93UOAjuCS`9[YM:D%j>ja<;O@21(O*)[bXu3f:JOhn
a<cn^ElJ02Aq0;1X=EgBCDl;^ReA?LEg13T[kei]:G+"a@^L6Dk@mZ-P\I)<W$YHc
<YL\=0l'=D-1DQ@?G\p+WEBZWTHp!=JYu;@!OAa!fLLJE*'(g])$"&m$"5Y<Kb1*r
6F^/+@8I.48IXMX^]`O#j6cn"!1'no*b9e"fHkGe"WQAPB+_2"!pi;XJS9L(@UUpH
L.Ic4\9nI1GR@(D.2p-gi_<)!,]Ua?a?t^]Duo!Q9gE"&`j-$e*a+XOKc2inkaH3d
BK8$PDDEn)B,k3Xs!3Y%!!+2^A,qKcGJHnrS,a=S?7FD[KjY'EPskhOA%Q9,OQmXG
2YBTp$B\^n;ul)Xk0LDm.IQE<!<hnQ!3<b,dXG;fp2(klqsYm"aF]iC`n8L#$oQHr
KH/GS-6MfDG03scWJ(d7jVt-!E@J"]q*QiHoZ_M1W!>4*(fCVO.6lm@!YMX:&3qp-
N>&13&jU76QiRKnLCLu0(j&ADJ/1Z(EKD#hqP&ko'm&Lt_jQf7Amj=T0L[Tl3MMI4
jrqN-aFML$@t>q9#mH9.fF=>NF#rOX+/Al^+.NQ0/Wh<,Ubns6;S#t%ASPV@Dmkj&
DuiUG[5XutjHE=O1'!1+2[<=IS:au"!!/TI/^qts:JsrKPL5IMjZ'0WAfB&l!Y8T)
nA.)*4HpHL=[l@9huM[V"eP"I-HhLM5.@7pCGRG5ck)AfR)fOC!'dD^k)TToN3Oh#
#c/:$_,r`c9B1g:C1J&DfCD'W/1$@_($_A&H8\<l7?OE3fUMpIoNQ'/Of=S\`MPLJ
eBEK%.oQ$i,1d;+;!B`jXZE^1ZM:a=$]K)FGgk&\$!eWm4obT*bZlns=b$K;8@C5Q
fGfZgDJb+icX*04$^=+3Fj@T8AI-sE.qNT5g8"?3c<9@KqlL/N6_kUV-C7j5X_Fgc
[^Ll9ieoRm&\#0VhROjJY"_TD]<4mkSBG;'#SBeh\7!i1QCFp;J,sZ+(e4m*9H$@&
^(\C#3pmS@m;R$gl+C$kMh0eCh*C:T]^j.U'gjPUe:FVj2n`kXg:icGqOG:`jU,@m
&r6O%7)ap6h>j$mjA@bq>ZcHk0D5L%C/,;]=[qCQ]UVCZ^/E,h$Or4<$;`M#bpNL3
jH9`58QPO6AN7"=[F\Q/bbC>H)82]:F-O'%`<aLaU:B7754)G>6ccD*agkZk?9uEC
?s-I#>g3YOBjOcd6piKgm3tQrfaoDZLJ!`VC;:BE,D6NK%^8(C'$S`LTSc&)&4dM"
=POS'l&Gbu/F[iQfp/E^[%u.IFfq60!mJqX&"F%OVWkI4]Quu,B[)OC<c4#P6oR^(
mAT>NJJ84)rf6AD9-+,*A%Skh&MQpPCelL%W_RC&,P/?N5]@&ZGLlNBlGcF0`@ntQ
32M1&'SacpJ3i*q]\j6K(pFtIZFb$m;P4G;.Rqf0gG=QR4=S3,Pr7QkA<^eK*!k^Z
*s'GB#lt@/F-7@b,MIhBBTr]%-]&JcV':PV4SqARE"J%-%(qskqn1,Vod*)VHq6Bl
A>T:>:M2WkBD_kJ[L$dN>eGrFMXP'HZ1aF(4075kp^Hm<Om42fM&u;^GpuO$Z22`M
\qo4M$g/i&PG`(r^]h4RG13`>:UUmb6?B#^14n'i6s2+E7+".`SS'DZJHpEnQF.b7
IKdT@U<lEAU#lG_8HE9c&_#^\,&p#_(W<h=+0UOKN[0q=/ElFoI7XVE3SHK>LuIZ^
%gP?^GRX99+)ik2K7;5Oa#_D"=n_k,!)*XB&DkEc&GKk6+%!g;Vo;1,Mj`uT41SWj
)@+()"7F)\]NGcF>_$(p.l[CVq'uX,ld$OoJ9^!TH.-V.[n*&Oc?+\KJbXR'o/-7E
2Ah+Kk_?JnRD'f2\fh?eCFM(G[D.g]!(2NtE"<!N'J+b?]DL,B)JcF3j"OtV[0t99
djPq+kUC$+//)0R6c=LZpDMqK0&,eHVudHJ%),gD^DasTBTeerjd)&8]Ffq3,>j8D
WWENg)0s+D^qc\l2i4I<&:uEiOaX8YVZ;e^4XtTA"4%7:%ZUMu5OdVo\f&:6c]D=P
^e6eI&_o/>#E)[cNd)$6gG,uq"0U#o_ck8>?imihac:<M_`N\^d,t^Dm\PF;Pk'Ne
9=BjiBFHF[,\0?Ai7!qsoVE-L46f,!N"%1d%A4&`J8bl+;Mp>ceu5U8!*BKBJBC86
X!Xd2]:-_O39L8kP/5kAP.I]M*)R"l#e1ER%QmE"F!%:#a,ne=Pjl:3,"fda72)]<
5CeHtoJF=]boU&DT3r$IiN+u;846o`%l':g.%EXaMo5Sq3C,qn_sg#[Fgr+ON%q^H
6[2+b#t'67#n2!fHoX#-a8iiRJ9V>,TEmF@d>b(2)T27u'.,_L74bN#JJbdYC'GK1
nNt0)#T;S_C$hX!R1QV.[8]j5TWAQ;(H"jXN"g.j"7*p0#,R7o%aja+&."`afLE``
M(/;<+tsT!#>'Sh33*8(8ETt>cGdqlQal+aK,]f>X-75;2+psMT`2>jG`D?SNPfp+
=URdRjHE8<WQ](hqRe6GjT(sP$&GaA0FND_7k[G).[i4NHF9^@+TMKcQ2+^;+Q*;M
>lZ8RbS7n;,f7b^_giRK)iO0n*,@O^S,tfq!6!"'7*<`X,TE*ZJk4f>ZH/0EEWE(S
*6Lhi\-BEm$;(rE2F&Q]fj0.+b>!ZBbcIP!HgcPk'+%?j(jO9!\TsVE7EQ7A#V=g>
).kHlR202E$*d!`R*,j+nO\iu&:kt50\FM6(n/$R/qR8$PjZihn#%<$6_pNW>$XmF
*gG]QR?7hO;,OT<8.fOV&Zjt!)*/5KI[ZBK8%P#0+HV+/O=&W<!.dp$)!)g.G!f`"
Jml:<AHpM(##'-ZWN[_rI0uI.`DDH.OhjQ1>LB64)F4'F:pgn_,mJsKg_SB%Pj+FB
'"CQ0lUR[rd:&gZiQRPejc5Kl%?R\-\Po@l57=7WNq'92!\,XOm#q0@PBpAg-n%qE
-dmP.XGnEsO9s6!Vb^.>PnbSUYg,ZdkJfcT)ITSm"Q><PYpmWj]`O;B%'$Yh?ao98
%AVoIdWC>aFbjkUe($V1fI2>W5#_\KJs!`?QiTtW,./-/:sB:q>eCg\n'!p[!h$Sf
\.A\q%nuJu%*;:4d2bPq/NsNY!U'LbTISG#;q4<9eQ#Vud94_ek<l'"[Oi306t@*b
\K"<.Us`ha(qlPLq9d<>NKfWf:n(4>+-"5qcFiI@72q4a>oBb8<g@CC,k-jOUX(-L
4;cYt\LL4(^_:E1%_0e6l=MAS0p&ZMQXsaO)o@DhWWAiZN_qqTgjtF2W[cMO:eHc]
*%qd@O$aJLRu?+CI7>[(I#6X,NdMfP@`l>Ma-"1YeEF%SN-Zre&@RLX<k?StXVD]B
#`\&8<RERt0di+.B+o+Cee$O_plj8l+UuC7=(2J:Bpg6G3&o\30!/3o]C@kta3pX6
d^5oR"4]`'*$=89XX.9%&cbiV(",3Y=)`s]YQ-FNO:1!YQJ4>S`B$7fNrc<\Ouj:5
5``WMk<AdB5Ws`Jon3VK3C=&__9Is!<=MpuL;<26$OF!gHXoW..bfSD.4pS1W=&]_
WsBmA:&pJXfEdmQZ.VQb;:-l7<LQrS*6s[?PXRDuLm+K?Xr/g]V5iW;;rp!MaNlS9
f'(/G(m5:R?kQV;Od.V%4f:dOoaAIY.C?A\$4pF@_R$N6X,4-Eh#ga*mAAlc,JXd'
%>=cb*/LCU6_eU)?+)+\[g:1`^AK^m*7!<CRpIq7M]M:iR_8a[i'7Z=>9FAW@#$p[
jJ#q$,V`u0q.S/pK1PM?6p6\OH/'FfhHZ!3Sb2kVFI/ek4]X\6$tPjc+I:JFp^Qkg
?5:jAWt+"=LXsV5;!a6K>GFU-aZieX*c7^5eYXSnADa*aX+fA*jf+&h`i!'q2rrH:
E`Y3dA,r]>%o!/!Z(@:CFc"*0\SDhs[HrFn$&FT+hQetE_$%ZNLn(7:/(#=W_C\56
dL!2Id]t2N9SSo;LU;jHi4+S,C.XV3`l*0rM*sfoc86dZ6=6;9=]%6tHqt4Pe(-Q+
SG3H14n@NF+=*ab7/U1jd`):3l%k?.f$[Yk'qu>HIR)a%%@TrG"qt$&n&Bf;:YM+?
jf6k!BOe>;6CXa/P#O_q3Mc94ck:I7rTFe%=4cqs!<_1D2)U5@oEqB1S4EpV#c^<6
f)Ut+W:=t#.O>(>_r^KAWEpp-^03;N'>qg=N-&^YCkMeGIS`AD[-e_e<`m(R-+'IN
WL^f9]q=HiL#(YeS=Oo&=t?AHe2+Bh$Hq"W0FQ=MTaO%<&0*A6Hm9#)[F_`"MEsiB
b95VUkhio&k#<EJ(og(&UC9]2U`P5h%V?7p!X\foWPQO9[X%&02%GY(.;TP_)iHmk
'PBLBB+nie<g9ifFQgL?:]$"u)rm55\S!4AjfjsXL-?7_AiKes(P*K`!6jR>"TY2"
`,NA!Ts6+1VFY0XBX%V%p6Q)QS,o3_Bf5X!7]SB&Q*cR;lLP<p8-$.mM;.PF_^t<f
*!=@2K8M"Phk14tMHl39[ucP8U4oeSJV1hm;5-knU+i(M_=q.sL[,e?/)VH1G-1&l
:[C_ECBI"@(<EZ0ZKG,G2WJ=\d/h4c\Pp;P5X)*FL+^/j2daXj3"b"4fTqZhYF_`;
[JAB,k(/rdgZ=9ClTWJt,K_o>`sAP\mGeUkRk!d-iN@(BCsJG,U62`q,KP_P=9u@N
3SmZZdKq]jNEjtmLs5;FfoAJ'^VX+_;&J0r#j8q$OX*1up;FC/d"qH219TSR6O<*1
-Z2-EXN'?%$itpVa>3N4$TJ,,GsIXb_46l&9J3FY:7[rNVQ5Z$%f1eaS@9SJQYVEq
'4EFWk44Iiq$Io1&L;jEDQ?<I[K1mY!I0A#GSL72PAd>sCq`6GLA^S)a7%pdWUSgG
56*H8*\?$?S;XC[p?HU;5B)/j=e+VP@$;j4bpsrMD8-N)"fQ>`[L[VW!3L1NEgahY
X6E.o(^D7@a;+aU'o664J,g?6T,@+1%<8.Vn[CHY(E@r2%mV%RJWLlAp</$0(li]^
EZT+=2N;[3PYgS-%*LLTn@;@((Qat4h\Rh-(Cpj.ZQ.+WmD?WHbRA6pOpc4G!DjJd
B,9s&(i&@_&9*e$/"UB;qlm7ak6Aa5C9V]u63sds!$0M9O'^1O"_fDNnf\'"3>Mod
cZQJBR_q!'jEbpn9p[#)1PkpDj.b"IR-H>!X8]-`F5qELMubm<!AFNF:_SXm'EMSS
JOgE)E/"CKFFbhVJVbWCEp">Q8fA>ESkbD-T3*dc=^JNHXH,GSO:db\ch7$c^lS[!
a:[cQJp&"4^c[geYmpDA5fG#CM]C[<]X@O^Ch)eHMKLN<Op1DP&J@75l'fI5/TNCp
Y5!7&!Cp";#T&%f;tU\9JM7i12fes0Fb+KJ!G?E:^HSlZ/0pVj&b=WnVBu!-lM(Ok
GS8)B-K$FfLl`@ZSo]++DX2>a`4(*-VVE&8p"'W8Z]*skBHOTU0c;oK+0AK#&Cf1"
i!GL^$Knm7M+<eJL<VmdL?K_..9hOW":>VM'6@N##[eDK=&\pn'mD%E(AE-V^o[kZ
mu6dmb=\-igdM]iqMY2JfWt^,HKBAS@s)bbV*NRAc9I71\YS1c7G^,ZZsjQ,eZYX5
r7Oc(E:F:2A5EQXX*R(s'Nh`O>^E_iqS<0gXDp>lM"JO.2gqE#$s-M,f:.V/I7-P]
4=hLEEu`F[*CB";hSQ>k!V%Y1Da<"@MO!L!!WbglFWcBh5QCg5(&u=GF$H(D:Ni$`
":+u-HjPBj@*j-d-5?oC6UEIlTLoP$!(5\;aHRks'EnP(5QCd:#RcNA6(eMI,U"Rj
b@T,tE;Dg#RS@DCH,Sif4.]5[Z3c2o,SUQ:61R:N,V9T5Jms9:+B/=NV$*U!8PM6B
&!-pGeZ,DX.:J)95p7*LL.ND^KW2?J85?&r!)d4Tb(L<P)3rgLes]Dh)$C5!!Hd(X
<eCdJ![lXuL.<PRb%5UEJ-J(e3rsj3o)O#?027-'6!?l;02ZoulZLq6<khoG$gHW4
n8MP_7]_2b]!tQV!#WuNEWM7%gi8876YhgUD_uGV%.U6)DudIa.$/Y"U<j1a?2t[r
`>r[N+pHBfHXRL'/>%(lTu(Vb:nU\oEh`M\chl@_!"VI'as[f&^k..+Jl]K+b<eUV
-&WDEO>h+I'#R"#!s])STXY!.6)[C0Jq?Z7%_P3Qip+B+-n;$rW,4o_s08dZE?*"r
__B>*%-p+\85^@2O0$\1K]5L?5WfO,!XNQc-n]nCKnf]=!!:8M$a:AX?iWe59N)jG
(578==Y5.W;?n\ra?/=37^4cB#qI-o:ld5BTHj`Bo6f?p9iN)C!$u^_7K=lYWXepO
bG.iC+NU>uP6%=i-icJ)7#nUl0[1J)V2I[W]7::4knZ+66PVU*WoP@U6kq6Sbg:LG
EA^7ke:BkdcpWir8N"[B%gW.8BdhU%[6J5WTqDAqK@8PdRfoE`cCP03"g]5oQ<`6*
X&#6Y8"pKGE.S*_P!B5](B^Eu=HUi8s.sR9<l3?:V.iIu&uGN@`#rk^:"coEbl"ml
U7d^t&D^0rTU3;s:;0@g]^F7VXF5BSf_Zt#a#38CP,85`)W&09*^If"!LNj)AAGDb
X&To5THIE]TE-\mTleWsK`R!7'7_5[:)JZc=B$*]<rPf:>YC9-L09_Rd(,gbZD?]!
/nO.1\C[e;6_MOI(M7$YU9^k.&>G@"<=7jt:=GI0(Dq^gND55Z=KCI`J/)mW)sgfo
&=VZWq`V.Qem;LtVi8Ck+69Bq.n\F0O8p/O'GsQ9VVs4,mY+guA(%.RICjD\I!a[h
!n]YKX1oRuf(ra%Jm5JM9V0?!dE4<8PsqW64G5=e.]#[fNC6NnH"\Zl\tH[J7YJVY
!fDY"9@j,rE%$42JA&TSJ+VB`>RQ^=T6u@6rCOd_O9[^r5F#%GqEZE(DR>l8&692G
]E3V@%B)JnR(.uM6n(AQkIY<Noa@0T,pjrB',"pTb_s;#V$s)_FBVm@Bn\tZ8?e8_
W.N34>!f$<VNiO?=s7Pd!K(U]3!`&XhC9k-"=Xcoeg0dN>6dWrJA[N11l[d-*/Vch
p)ll]#%F:MISi4r!V/LF<VR@2NbLG)P!B62_RP.O<0oki\9C2@o296r%(h+M8]^rH
G;5bB]BIC4@.EWEKS80f6b3Fq5Rp^8!!tg:4B7Y,-W2'@Q,nT)%>s?Z?S1*L5ktV!
gqa@BO)\.(0EDbfYpCs^O`mCQd2qCXQAR&a.E@9U6K5Xh3<q!P0(f9:!;rs5m_2iJ
)20-.nMH<4c*sd[.3#,r"I4$DBG9'*Fet&AQr;KjUu6-rPQ>f7Bt5aE"047Ue7Y6!
SbPlMM_X=Xa]H8A85=aG1Zp%V-IYZK9j-Qr-H'"XX!2F.io$I1W'OT<mX$'Jbs(?$
-(Rs1G"7DES(,YRTp*oXcWTaWB@RHB;t_atn,Nu!r45F749,E)&OoO'$_u4b2phA)
6tq?45SR[n9aWdjkj:9Je:NdF#%^IJj.</*.UZ3?Pq&H^oqn!,W"SrH;<;XV1=Z#r
XpT^q+/f0goQgE9#<u3;D+UccS=!5(=]=WTD3$D0Z:u7=AST2%:"=,4):/?o-u<>m
&X'YoC0b,H,gNBqP."IrZW-9":Te;-]%Eq?E9L!)3HN7_&c`/HC_^Qf<YDf1]+\iB
<K+8FcGu>7,A@[2G`8Q#D9e!U3:/_lY]d=kfQj6*mDUcdf%&[3P9ju2l-6Wbq'R_]
X:8(C*Ol;kgY?"+DPi-#\l<"G>l,Ob@Zue_kmlamJ-a@3%)JbJ9'mL#UNc+ue=BtK
p/[*$H<V-$1,fj@P2!lF6/+,]5kWFR46U4Y?2;)<%XVJt%5@54"1U<KC0g0AHS=2[
,QR+4\]VmDN1L3iF.Uau>SW%S`Uh!*cMJIenVIN8'oN'OqaZPB?nj['_q;8&iY\qV
n\c<`f[X59P95\PkR#5U@`q2Dr!;ioOiI241h3JVO"u@#a8%Su@0uOYZDe;SnRC,Q
BJXJq`\t0VG6VH4SU<4]o#gcn*TSDmOYQ92M=^`.54EBS)")>jGs=4$r1t(4VL`:2
^HWse[7<"7L;gT!\:NteqsQZud3Rm?B]gD/i9#aB9.r\IF4$M7mW?Jeg5rWJL?$Pj
1B<l"o]CQdO0<[;c'lp\C)p]%FWilsfX"OGJ-8CC1QSKE$XJsU1ThOKS:5d2AkTf6
Z?"7>_B@2ID4S)Cp?(2cgOF0[*Q>P_-KX%;D.l0""'977-3mD/C(mAl%_"XphV6q8
Dk6R8pVu[H<Zls3c3;#X(f1Rp'81=q[Cc.@nOHdTc7tn:`;$5FinRn"ELo&-puD=]
V]YtBFlAMYG*q=&T9OAf<Qb,M/`V@rK_"PBbk\.ok1k$4nl-"8$.&eU*<2[R*ehu;
-Um7T+/F"MQ.#MA6iaf%^jo@IaHca8k=")+!'[gAqWD/Mh1)YP*lZe/-Y;Z#T<rd5
e_"l;j9'h6\9B"Uf=;--mbQd-m]N^QH09P>q;Qq%q8/H0pP&+n*dd3[&_6dIMqL-_
A1RU/j1M:TedbX%G[DEPFA3t0Bt7mZ5,%.&-`+8cA(,Dc2sPF!P]FmXA,=M_m-6g6
p6poiqg9Er&uZ![!"7V1+,(d7\&6B1kMohB[B,F$1\j7"k[.[3oPT0"qNa&cTS'.%
^;&M$fuN@UqZHN+'fhoN5lc%GbPM6IOnc]"`r8cm4[AKVTEi*Ns$-2U^^oo6MK8\l
rg1qn4fV=k:^$k1b5]g$UJ2O*Mh(K<f_.!@!fs#UE%74$!s8h!pOej70(f<c6M=5/
"A#d":eH-coWNjuq9VtBcV4P(?@>XG#"K7%-o:o1HNp]tnrR>dLCj`PIUibln0/SF
:k]2d)#Q(NA+5*WKlZYa)PF)@$1OtKOF7JTEs^4!9hIgLJenA?\I;0T$P:<NE467o
F9Dr(+`Je<0]'Xmb74sqk:l&8b.JlK1t`H-%uWFX;#3/ud1?D=`X;D^n66HD&uq&n
&OS2Pd2I5uDR1GcZZ.-$amB\&/hul"'2/Zl/B%nb3tt6/'/;s(;)o?-HI!#n=trqj
aIO$M??&ga(.F%lA%K>cCDTJO(,9S>&U#Md7&\La(kt0iZ"4aAMC*iV!3l28;4`XV
QPo=W)A0"gdA#OgY4443)c=3dd:!qjPo>e"*0JBaEPiWu`uNLY*KcBtn^SYBiu@OE
("(t];=>FNknPr?*teAj1!pi#q&e#i(X`=$&d9D@',8je+`V3>;BI(Q)&.*'+qcC<
;C*#T.3d2!&!AX\Z8Eki6Obe6'2h+A;GRZU8J:Sg,naDg10"t8=XDL/#BF5c&nNDQ
Es31n&[HC(;L\c]Gp;f"-k_F^EX`h*I43O0s,r'J16j;OUA_Bg&9=Ho;QfofW=T]E
.h]Gi1:7Xu\LZ+Jpi=1qZAC,qdgED*%ar<J;Vq(%fa`&Y/e[I@1?AuYkq:EXnT+./
o(=Z"!q4S9,]_9d;\&p##n58`0bYJWEto+)))9SecdO$G;^F2_1<:+\$\p.mo05&F
6Sq_31m:Qhdn_h7;`.KT23V6%dpFq/ecW\pl*G.`dr./YF#R$A2j8SIdsj=jK/ceb
30T7[duQL&P;uR.3Kooq;(FG$UH2>O3g6U*e#thHZTD*p4-R9<e%\!Y_`Uij+<U~>

n
Q
Q
q
8.33333 0.0 0.0 8.33333 0.0 0.0 cm
Q
Q
Q
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF
