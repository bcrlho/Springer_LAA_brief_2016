%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Microsoft Word - CSMA-CA-late-comming.doc)
%%Version: 1 4
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 17:03:06 01/14/16
%%For: (Dung.Ho)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%ADO_ContainsXMP: MainFirst
%%BoundingBox: 99 400 520 717
%%HiResBoundingBox: 98.9997 399.601 519.598 717.0
%%Pages: 0
%%DocumentProcessColors: Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%+ procset (Adobe Acrobat - general image support) 1.2 0
%%+ procset (Adobe Acrobat - monochrome image support) 1.2 0
%%+ procset (Adobe Acrobat - color image support) 1.2 0
%%+ procset (Adobe Acrobat - indexed color image support) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W1 vm op crd OS scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt  0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
%%BeginResource: file Pscript_CFF PSVER
userdict /ct_CffDict 6 dict put     
ct_CffDict begin                    
/F0Subr     
{
    systemdict /internaldict known 
   {
      1183615869 systemdict /internaldict get exec 
       /FlxProc known {save true} {false} ifelse
    } 
   {
      userdict /internaldict known not 
        { 
          userdict /internaldict 
          {
               count 0 eq 
             {/internaldict errordict /invalidaccess get exec} if 
             dup type /integertype ne 
             {/internaldict errordict /invalidaccess get exec} if 
             dup 1183615869 eq
             {pop 0} 
             {/internaldict errordict /invalidaccess get exec} 
             ifelse 
          } 
          dup 14 get 1 25 dict put 
          bind executeonly put 
       } if 
       1183615869 userdict /internaldict get exec 
       /FlxProc known {save true} {false} ifelse
    } ifelse
    [ 
       systemdict /internaldict known not 
       { 100 dict /begin cvx /mtx matrix /def cvx } if 
       systemdict /currentpacking known {currentpacking true setpacking} if 
       { 
          systemdict /internaldict known { 
          1183615869 systemdict /internaldict get exec 
          dup /$FlxDict known not { 
          dup dup length exch maxlength eq 
          { pop userdict dup /$FlxDict known not
          { 100 dict begin /mtx matrix def 
          dup /$FlxDict currentdict put end } if } 
          { 100 dict begin /mtx matrix def 
          dup /$FlxDict currentdict put end } 
          ifelse 
          } if /$FlxDict get begin } if 
          grestore 
          /exdef {exch def} def 
          /dmin exch abs 100 div def 
          /epX exdef /epY exdef 
          /c4y2 exdef /c4x2 exdef /c4y1 exdef /c4x1 exdef /c4y0 exdef /c4x0 exdef 
          /c3y2 exdef /c3x2 exdef /c3y1 exdef /c3x1 exdef /c3y0 exdef /c3x0 exdef 
          /c1y2 exdef /c1x2 exdef /c2x2 c4x2 def /c2y2 c4y2 def 
          /yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def 
          /PickCoords {  
          {c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2} 
          {c3x0 c3y0 c3x1 c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2} 
          ifelse 
          /y5 exdef /x5 exdef /y4 exdef /x4 exdef /y3 exdef /x3 exdef 
          /y2 exdef /x2 exdef /y1 exdef /x1 exdef /y0 exdef /x0 exdef 
          } def 
          mtx currentmatrix pop  
          mtx 0 get abs .00001 lt mtx 3 get abs .00001 lt or 
          {/flipXY -1 def} 
          {mtx 1 get abs .00001 lt mtx 2 get abs .00001 lt or 
          {/flipXY 1 def} 
          {/flipXY 0 def} 
          ifelse } 
          ifelse 
          /erosion 1 def 
          systemdict /internaldict known { 
           1183615869 systemdict /internaldict get exec dup  
          /erosion known 
          {/erosion get /erosion exch def} 
          {pop} 
          ifelse 
          } if 
          yflag 
          {
              flipXY 0 eq c3y2 c4y2 eq or 
             {false PickCoords}
             {
                  /shrink c3y2 c4y2 eq 
                {0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs} ifelse def 
                /yshrink {c4y2 sub shrink mul c4y2 add} def 
                /c1y0 c3y0 yshrink def /c1y1 c3y1 yshrink def 
                /c2y0 c4y0 yshrink def /c2y1 c4y1 yshrink def 
                /c1x0 c3x0 def /c1x1 c3x1 def /c2x0 c4x0 def /c2x1 c4x1 def 
                /dY 0 c3y2 c1y2 sub round 
                dtransform flipXY 1 eq {exch} if pop abs def 
                dY dmin lt PickCoords 
                y2 c1y2 sub abs 0.001 gt {
                   c1x2 c1y2 transform flipXY 1 eq {exch} if  
                   /cx exch def /cy exch def 
                   /dY 0 y2 c1y2 sub round dtransform flipXY 1 eq {exch} 
                   if pop def 
                   dY round dup 0 ne 
                   {/dY exdef } 
                   {pop dY 0 lt {-1}{1} ifelse /dY exdef} 
                   ifelse 
                   /erode PaintType 2 ne erosion 0.5 ge and def  
                   erode {/cy cy 0.5 sub def} if 
                   /ey cy dY add def   
                   /ey ey ceiling ey sub ey floor add def   
                   erode {/ey ey 0.5 add def} if   
                   ey cx flipXY 1 eq {exch} if itransform exch pop  
                   y2 sub /eShift exch def  
                   /y1 y1 eShift add def /y2 y2 eShift add def /y3 y3  
                   eShift add def  
                } if  
             } ifelse  
          } 
          {
              flipXY 0 eq c3x2 c4x2 eq or  
             {false PickCoords }  
             { /shrink c3x2 c4x2 eq  
                {0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs} ifelse def  
                /xshrink {c4x2 sub shrink mul c4x2 add} def  
                /c1x0 c3x0 xshrink def /c1x1 c3x1 xshrink def  
                /c2x0 c4x0 xshrink def /c2x1 c4x1 xshrink def  
                /c1y0 c3y0 def /c1y1 c3y1 def /c2y0 c4y0 def /c2y1 c4y1 def  
                /dX c3x2 c1x2 sub round 0 dtransform  
                flipXY -1 eq {exch} if pop abs def 
                dX dmin lt PickCoords  
                x2 c1x2 sub abs 0.001 gt {  
                   c1x2 c1y2 transform flipXY -1 eq {exch} if  
                   /cy exch def /cx exch def   
                   /dX x2 c1x2 sub round 0 dtransform flipXY -1 eq {exch} if pop def  
                   dX round dup 0 ne  
                   {/dX exdef}  
                   {pop dX 0 lt {-1}{1} ifelse /dX exdef}  
                   ifelse  
                   /erode PaintType 2 ne erosion .5 ge and def 
                   erode {/cx cx .5 sub def} if  
                   /ex cx dX add def  
                   /ex ex ceiling ex sub ex floor add def  
                   erode {/ex ex .5 add def} if  
                   ex cy flipXY -1 eq {exch} if itransform pop  
                   x2 sub /eShift exch def  
                   /x1 x1 eShift add def /x2 x2 eShift add def /x3 x3 eShift add def  
                } if  
             } ifelse  
          } ifelse 
          x2 x5 eq y2 y5 eq or  
          {x5 y5 lineto }  
          {x0 y0 x1 y1 x2 y2 curveto  
          x3 y3 x4 y4 x5 y5 curveto}  
          ifelse  
          epY epX   
       }  
       systemdict /currentpacking known {exch setpacking} if   
       /exec cvx /end cvx 
    ] cvx  
    executeonly 
    exch  
    {pop true exch restore}   
    {   
       systemdict /internaldict known not  
       {1183615869 userdict /internaldict get exec  
       exch /FlxProc exch put true}  
       {1183615869 systemdict /internaldict get exec  
       dup length exch maxlength eq  
       {false}   
       {1183615869 systemdict /internaldict get exec 
       exch /FlxProc exch put true}  
       ifelse}  
       ifelse
    } ifelse  
    {
       systemdict /internaldict known  
       {1183615869 systemdict /internaldict get exec /FlxProc get exec}  
       {1183615869 userdict /internaldict get exec /FlxProc get exec}  
       ifelse   
    } if  
} executeonly def
/F1Subr
{gsave currentpoint newpath moveto} bind def 
/F2Subr
{currentpoint grestore gsave currentpoint newpath moveto} bind  def
/HSSubr 
{
   systemdict /internaldict known not
   {pop 3}
   {1183615869 systemdict /internaldict get exec
    dup /startlock known
    {/startlock get exec}
    {dup /strtlck known
    {/strtlck get exec}
    {pop 3}
    ifelse}
    ifelse}
    ifelse
} bind def
end                                 
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 3784 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-701">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:CreateDate>2016-01-14T17:03:06-05:00</xap:CreateDate>
         <xap:ModifyDate>2016-01-14T17:03:06-05:00</xap:ModifyDate>
         <xap:MetadataDate>2016-01-14T17:03:06-05:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:3720476709BBE51181DCB7CA0E52C5A2</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:3720476709BBE51181DCB7CA0E52C5A2</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:documentName>6e1c7257-bd65-11e5-0000-1302f4ff4bed</stRef:documentName>
            <stRef:instanceID>uuid:f15ead00-6ecb-470b-aa6b-df7fec9a8d9e</stRef:instanceID>
            <stRef:documentID>6e1c7257-bd65-11e5-0000-1302f4ff4bed</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Microsoft Word - CSMA-CA-late-comming.doc</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>Dung.Ho</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:format>application/eps</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
98.9997 399.601 420.599 317.399 rectclip
%%BeginResource: font FWUAAA+Times-Roman
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /FWUAAA+Times-Roman def
/FontInfo 6 dict dup begin
/Notice (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development; Cyrillic glyphs added by Valek Filippov (C) 2001-2002; Numero, infinity and Omega made by Dmitry 40in (C) 2001) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
def
/UniqueID 5020931 def
/FontBBox {0 0 0 0} def
end
systemdict begin
dup /Private
11 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 0 450 470 662 682] def
/StdHW [30] def
/StdVW [85] def
/StemSnapH [30 38] def
/StemSnapV [85 103] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs [{ct_CffDict/F0Subr get exec} {ct_CffDict/F1Subr get exec}
{ct_CffDict/F2Subr get exec} {ct_CffDict/HSSubr get exec}] def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/.notdef <1C60D8A8C9B8707C25> |-
/space <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
end
%%EndResource
[/N10/FWUAAA+Times-Roman 1 TZG
q
98.9997 399.601 m
519.598 399.601 l
519.598 717.0 l
98.9997 717.0 l
h
W
n
q
0.12 0.0 0.0 0.12 0.0 0.0 cm
q
3596.0 0.0 0.0 2653.0 750.0 3347.0 cm
q
n
0.0 0.0 1.0 1.0 re
[/Indexed [/DeviceGray] 255
<~!<;DD3G;@8RFegD^u=s4FbRBdmDP2a2'3u]p9!#AcQl=j(p[sKNti%Oe7@_!qoJ'4
SQ&!O&;)lhRK*<fzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz~>]
cs 
<<
/ImageType 1
/Width 987
/Height 728
/ImageMatrix [987.0 0.0 0.0 -728.0 0.0 728.0] 
/BitsPerComponent 8
/Decode [0.0 255.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup /LZWDecode filter dup 
] >>
pdf_image J,itR3$]7K#D>EP:q1$o*=mro@So+\<\5,H7Uo<*jE<[.O@Wn[3@'nb-^757;Rp>H
>q_R=AlC^cenm@9:1mM9jS"!dTMT<$3[GQ$8#0$s<4ZX!SPQ1`C/m<k<ioH)<bk^H
j`\=EYZP^B4!g3;B=(iZ<kDqOh/Bf.DHAorf'R[o?>ioWjnAY&^gM+`4=1jRLW!YA
=M/6)*KS9PE`kN%<lb=CJH,[H0EML[ctGZEBFl7SU=)<5)6DtI/[*fCG$?ri$T&%i
B!ou;`cMNs"@.N"mI#0s[aFMb)bt$)S^5u@!!&r7(O)M$_/t*](JC_/lZ>6q5:;d$
SUu/1h7m9X&Z#,H\"/"-fBr>1=[?Eq(bcGR4c[u^q&iJfqZ";a9GI`IMOUEgJA>>!
!42&*%0s6ON#N5DOR,*"J3[KX"hN"V\Fm>tdLQo-E@a<j`Y"/?Ne#C^"p%&H'QY9X
cHCJP2,W.A+ioftLs^`D(`<68Yag+-8LP:=!Q`]jXXh;K$TRGPP)'1rJ.;EkJH8Lk
9S(AP1q>84'5ZJ`\]l'L3DGJq1BOp[PQa't^`;#e:_X?B6-tiJ%7AMW9bg+EP\hF2
dM.Ze8^`j*/PFP,br&5EPjLV0e.iE];:Lj_9iKRW9iY3DQ#0f.eeO0U=k8k?D-PU,
c#m=DQ0j!,fG4pM@G$ktNFUWJlfb%qB[#jVg(o[EC"elTX_ZZ,c*_ECQHCFaWAb!E
EM?MIIrcgC70.Nm8qkr=?3j9^SR,u`lRZB:^!Cr\QR\,G+h.ZUI,3EB%#84^V@rr,
GTrc6i:]&OR,W(V)fOZEN\n7TZ'IJ2j:Qi*(h@n%9a9[_r_o$BO2b62jnWe)S`V@b
=.84f`ZLW,q8,doiqKl;SmRoV8YAp_Eh/t=Pua97BbX=,VWmqo:TC3/N=i.hR`;J5
V4.#CZ"t@0'='aT7a8?FHW/%qD4?F[\3*umjh'IfqEMSPqVmjUD\Rs,MJH0Tr2"@[
%3*7CaS-P)nFmG.@.F(0*MB,(W\;V;F>l41msN.HSb'8`5)+$hp3!5(]kVK7ZFu$!
frH-W-eig8b,*lK4m-sRGLpacU4@E;&Mp*</?"1^eqaZcJT?(7aR<F5D;_c!$BFEQ
-l<Za!5N=\"O&!/$j/TLFM`UILc[Hs.__X<m!@'?koG+C2iI2KSgY$CLba$s!!VJ7
(XrHk,!^LpC''YjjADP]ojpNRrL+i7![%P*:<'*Y/G$/^bh<2.KG"W\+:82V-k&b!
4oRU-NrImE9H^4c-+t\;5bL+?IKU&],d79@b)?iZYXSpT!Zmb.$=J/KnD$Er`W/aR
:5PkggRP+sI3M!e3DcD)+dBMF?c4St&V2Ap;@85q$(?V0*ZU9'%eIJ]dji`NU-qP0
L=aQ#439BE,K%,5Ns&NU`!u8;o1EWCL^*p1&e':-,7G``TSI60,b6=t6"=U75G/3!
a#@&L,J(fY.,jD9,IVs[EN)3bM/SrOaR\1=4$RGN8&dLD+;6!CI#oJ(8WjJa:<[I%
1596NPUS+/1'9^r)#l/N[$Y4Z\<8O(>/il3As51XIKjsJ&8?P1e'J,Ydgfj4<fW6<
6dh+<=G!6!7lX&.c[uk-502`G,R>SR!"l@(-YX#/+'Ak.:g.m7C(/tHn-,/7SF%Mc
RYqb'\6Q7e4e)!L"(@F&Io=u7ck6H]dl7gn;$$hsiX,a[BE:0CFs,.X>XIJm"/?P/
L)nB4H=0^JF;*5O7i>l+VQ;MB-JAII+pU'cjD0[\d[%FV=\I:60r+C[H;hc/!L!"P
Ve?DX!!s'JJ1QP>E]0SP8E'YXa9\@M*d(G=3>0CZ,,:D\bd9F(WE5Tm2[6MY`72_b
X4.5G.B]eM6\oV$C'[,iWA)FR,'BN1hlG+8--8+TAu]8@UD,>K+fJmQ?/2&fVi1Wo
g/:7S/K#^TVUO.;3kXE#TE)C&%juus>3/A(:X4sn/FX_k^gXsdD[<("=li:/0q0;9
.+>rOeNkDDTn>10d6KViBWeo*\V>^4&=^-maDKhH[^_>`(K-r:U<L!">1TF[fL(0(
n%=XNd9f!%=JN-W^Gk$K3P4U,Duj+VAfCd/'kqrcb?MRg,6KCM&FeD>$Z]?,:#PnU
J*DZ1_MV\.?<f2jl@'[N(j(bq;[IbB(+-spp$1LZPD$2Y/"!iF_.-/MKe]i_a#MrV
j0JWEZ/VOsKPM\HbYV,V/j[GN`tIA(jbC'=NlYut-P25:P&cD1b%,!5(S$L^1@A;c
q(j4+<\3Jk(/iAE;]!sJ6(2,g@4qB!3#ME?!>(>#UkdP_(L6j.9NVf*YOVW8bl1l>
5(G?O/u8P.0$CRZMGfcri)7ctRe#U'\=(*'(^J/d&l[UNF,&g(^_UO4-'fjfDZ=>&
l^BZpJ#qn>j4p@3"4#-+!U1mf'0TGdZq58\lgIr>0H^K`O:s'?`UK=h)^.`l(H"Gj
!e<p!9==W\dnmXflr%3p!2pY7i+$;6W\sl$D9RomRP%F8!+p<*.pKX3H>d*V^%]PB
hcoPuDr(B,p]giX>RuF*?4FaG7g\-I=:BbR2?\Ql`BYd5GJinOBqWAkd!L,")_Jn9
J,g,_TQm)Z-]htIl8YEo-Yl6E_?0A=*TfgYE.NI*aN>>.Gn1YXm\gSocM]8c4O9`=
n3>2*0FG-B8-"29GQK^6\!IoOU@hM,*'bJDN\PJS4R`m^NgD*Po0\H+]mZb8D@t.E
O/j'R,n_^!n@amMl"WUBFbtS#E1:]$AIdFV]@?B>P\X$<oW@%VDedi"GJeY8dBG_Q
p=:9B,5@+)TXG_%fKN6ZH/CdJr<K%g?!GKq[oM[sB;9"/5Ab0$H/X0K+?ES_`Hkl-
K"XVep*<ApXU(5ArMB.8GU:7QGTlLrUZdIIH1mY%D<q0S\b2R=9iQF5UWe56YeN]_
p<T[*,@%t5?[qVk.Zaa.g\g;353!YShItpL$9)8No)DW?2su(%]4aS;!9:/*huWqZ
/>MBom]Z!Xj'o..XFH*]4"H[dckbX$ZE;Ic!i$a;aWR>ci44]^!\)n].BG,iZulm'
b4$r*YV;i61jd"="0$):Wo2(HVXRAdqeNM@iY;VN(tQJ)",!WXlSpO/7`-oq"HOo8
$,!(N#6QZ*#K[$p8G406%g4*4#])d#&%`&8OJ!/:Wc3.aE*ES1`.u;'s2+.1bb#0F
M"-S8+H&-#j#T9_QB@'%H!hX&/u6(_gCId$s!'e&E;W+66ijK;h$!;[+:.t.q%7Ta
&[<>gnK;0MB(7RZq@L%I,@M#iXTYg*'+^WHDi@tA6B8<52Gl<TmhHJ];\Z!6'][dY
OH1-/,o+Z_qiOkP;.UOuFVf%C(U8B)nUVN'OVWqe'!Q3fEJ4%j5l+82'Pl5:,8V2W
q[HB)qpD(O;3qY@d2C1^)Xi@Slld4mN=D#`*3ma.n^/@3eK&Y_*NXB&0lBg+10IK0
0Cbk-O_ks*E?:kI*q(Bi1%cS"papL`o5I,;N0,6!N?D*=*)P5[&etiG)'SPA+gJ-n
1,1"/2'[-%,HYGuZ!eW84=u^^)N`Dn;FW699-=j!'(SsHOs_0O:E*1*-1V?h1/B(A
AJl+t-LZ^01+OQ3>plq7.'eg\nrY@VPppGW-$",U1+t)._(!fb-ZWuP6G4k3B-&gX
.g!U=;7@F*_(3s3-P89_da'3PaXqPd/[F1ao&22VjX$&#`R=!#d`jC\_(RNM/J1i(
'(i>_LA6q@+>UP_-`8V[CG<%u-^,,UZM,a\)(8E(1%Nic;[G!1Be`O<1UB5#o0G2h
721pqag1juZS+.U'/Zf62"MM=ZW/iF`l$82(p]np1M&7],r8H02KNjs;ggO/mj\s*
2tL*1/D3"'dkDGp3O>8:o:\3$V)iYi/-Q>$@X0*EV)m#c+VQ(]Om+`eP:?*i2Y4_,
o/R_1PqVaR4Q:-<Oddn#JN_KH5-sW?oC5%$o`DJX:c#=fPP/E`diT5N0,);i-Gr)g
s#cLu34'5C;u78-jYo";eT;Nf6JF`dksD+Q66tMW6?>L.3CIs\7'oZVnV9I""p;X@
"12?&oO13GAO^cU7^R#%oPm=8!9BA@B%0g=U'(S*>=UN,8@4@IoO11qHUlQqm5,Y&
["M`#4%WmU6c@hf[%_"$Vb2])8+Y>)%'N<G\7u_k8`C%L-C7D*`n7Y'.MUW3D7r['
SPE/Be$S<fPj_AL!Dao):R(M#1n*tLJ,hFQC6[7Eo7]AL9hY-)9JmD7eJ1q:WZ`)a
CUF[MoUS=6,s\je;:RC"EpGWK(a*rNDtPb^m$1A`O]>CX``6+heR)=X2c_,Z<g@42
eSHX6E[W%5OeON1TH:QT1J5UA9,0Q9'nA0!]]I\0F"OO[$[e&$Rj5=s9sosQ6=U!_
2PF->kt'i;jlK_UXP1iP>P4gt;AEB?,U)hQE>;4p:3]J@1KnI2Z;%8j`9d@'[#iAg
7nF,][AKRq(4?:6NFQ$rn]P3+Y?LS*-7IkHeUq4<$B?^>2oMJ#J0/8U'K:]E?_kD.
Q%<2`1l`e=6R15D&7CIEY@13:+r/g:2;TW.qKY=ARapW4KRg+'r$$;H4a#ppJ,fW$
4I.D==AaQZL'M;?N[<Tnl,,j"[HNW")PL0mB8+0.M&g7>RPiX=@lCSmjW@Q5JS\+m
7*/eF63h6l$#5cL,$'&-(9:fN4^'bZ;HCjdf'[P&5l`E8CFb\N"Fr>OB\'s%!H5t#
f%r4VIqs6Fl(kou:P3P]'lP:AEf8)K8",1j(Mh9s\*+92"+5g&c?ZjWLK9sU-i%h,
0EL)F=9QNW^]s*9!]?7R"u1gG%inr1+F54I!L?8@OJY'r#,!K0WeM*t,#C+>0m#hM
I5UB$BQ7M^)-=Zb]Bd!<,=DP*!3=_94dD2rTG;d8JThVTBgOG#l$A@=k6J6\ZLI(e
X`du/O`FBW<&GIceOX+ej_qAPP&TiZ.2JO+4apJs&sY=:FXA7)?6RC91^JUs_@?S,
JUf7-LTJ%8GRHAD,CpRiJOU93p9o5RjS1\7Q[fq/"eC8_1H*XQ;A^#hfG5We2NsjA
%UpB-+:tms;h]$hD^g4j/&;CN\p_i)!"NH^[k3AlMf1#jO6@9BG_R?_(.%XQ?'nWK
9(-[WLCa+YMBWFY/%3-c,DeCaNqVn;!Xe-a1c,cB+IFR>9-tkXa]5gk8GC=P5Rb9*
R&P_?B\5pHj,DhA",cl!NhhG=Jfob=]JE)^3=@A=7(n2.E-rJ@GkfH;PE/[EnOOto
Qkb98fQD@]!(o,!IL8Mll_4C2%]1*MKm=(rGn@V57(Ql'9]r-,0#*2E6C4%@GfN[H
\20E44c]0`P4T2>'6cM5M,;'b!an8:J14!VN)b,b-MaYgJ0k=_2?Y-&"@<tpJ,f^[
5FP`P<4T.Y\]uMSZ^Y>n1g.I7H,)6:1RpJGS>A`H,%mM^+Q*_S-J='$fp>URPQG5b
"Mcmd@mcgH'qQNKSY/^]!(!6_H_9b.G?(jr\d>%F;kZMj"2Ik9)BY\/PG3e#TJ]H3
\XjsP.ATk0UkgCmef140?^!G;L%N3UqIMfl2c(5ZPF?Kh.p\c6A#NR]DYf/8qN%SP
fr60"WLB&f\st'mUIfc:6ePtB>*Z+dNM[SOX#/"seJkF_F/q^8Ut+;#qT+^9c"7XZ
F!m,-(opGXJ1(2k*LGb2,g*aOK'%CE,oZY$0B=Bd+(%UYMp5b8i_?Ziba2d,Uf`[f
NiTEO8[;3s%dpnR7$c/0EO"Z4X8"c2(7-S&*k@(61UdADnIkf)"-#ij612rYUn7PF
qVp"m3?!1,FU>E1YQ7!#UBhQ]J.@@PW(-h#!@\H=UJ&--S:`5]5cmthWRX\-!qj-O
[lVJ?NfT]^C]PoT1rRZ?%FBfio\BXe\IG3jW48T/]"*W7isC^Ods*%'@Y,N]6Yl#k
!'UQo/-VIf-?&g0cl\8%#*H>LH$d1d),N0.oroZp$p2h'e<.U1,tPCu_K9M/]Ih#`
28af%_n8.MoO#KMDupM9!ZXqQr)(Eq<Q0>g`OoKqr*dO(7Dp0[8=W,g]Q(tSFiSlT
a1Qi@oPaoj=o\OU^O,f'c[(aSV2mUN\`q%ugYE$h\RQkaZ\(&#*.c,"Do6t3b<//8
gqh2s\OaLf`4TU(r6`bOe\pAG!o1c5*4s93j2.<Bc@"m$r:/)qoto!>"eZV7_IEQW
]XOf#1ttV[05#-KBb;VB8.&uo`H&b++C_2qdWdc4K(@s[<WQT7"p/F]h%WN-.%R@t
7g/I/UqP-rb(euCS#;1I3=jP$0fQd[0si=Ze/U+NNWpV:-F!i=\KjZS*WX>s]nl^<
=!+Z>*'0'-9Uuh`7;pUS1@KXh44DA1,SWg\c8=@@fZE`@f$XPK&jQ*8!)B&<]nc[O
b^>%p!E^W[3@eeiEB@GT[d\"bZeAt/i0r[pA$ESO4i3\hJi!HCOeZlE"/MDj$^GnO
6rO8grZU8b-),i9en&4B<'/sh%GI%,iR'I@h/V$AO5r)U2A*X_d9GZL1"t8;hXq'2
n^$;!/`ReLjo0&WhJ_-\KB>[5/A:B,*_Y]R'bS0*'B7-srb^g>3AL[;g&<IPg&Nd2
P"s>QYC<)=&!Wli(AY\IfSWpaWI;"*bNPjBj]&kU*Ga_hh#&WriJ,,6O_=%4lf3HY
jBb?f@d*aYdS,W'J=ZE4m@&TSp0Kr@`LZTShM(?'=74^E09>W+&:-]-$NJ]X3fjJ+
+9qnZ**f*C1*1/oIWOql'Cf:C0(9SZ6j(4YT)qfjYf2ChYI!Y&YN]C_m6;C:ipd7U
f*i3r$3d&]^L,PuO4+#1KqE)KrppG%#B-5[$qaNChRgMU8h](Eq2ebRW`A`LU=MQ0
"_bOF&>D"rJbs94qllR]E$GdZ-iBBqT[;PCklD93.h:1cGQ.p>T7tlYC\0h/p14F/
_>jRe5_+A%0KKC<"bP\Ucn#S2%>9>k^o/A*%2k-pj,r!dIR,->8E>q:1nIPnPtL/$
fJ!A40pt_tP?G9LE>k3>B9E#FY(&!qb,B?</>eIkV+0]+\og31;5mO[Q!1R>Y?@u.
l]N0'G"l>+fVFg)'q.F%Y?3.&X(B$(EOf?BP=p&LnThQKm[)(,`r1C\?nYN=/ft[^
`FA(6*+hDY7**UBe#@Li".5G9j4UNrImKdUB_7a!29.kXaQdnOh0-PAZ.Ws]HHi;L
D7A>=pRC"4s+/#FE;5r02]n0nh"#`\hKM1]d-42KFagG30@[j\qjlU<>JK.)k;+"B
f9`tAlhJ/bg$c-#b0ToG4ffaWea`TemJd^W@fIoRU[7lV%nf=k^[P2<NkmDZ9a<-:
*")j8OK7sX__BNn%D#AnnFJjQPXNm9nE`pb757]N'1FWl<u=C]P\1n(Z*\Eh7kB$p
*CmC,1EK'P"G3.7Ls+*G6IHR7-7RA"R]B$EXJI169JiFo9/<$Ef?-anP7,Si]WCZs
P;@tI9^HQX0LTt+9+\Io9[u0S1S!a"cLE-a4jT<+h#pLf'5'I)BpB&S_"7cM5L#EM
+%T9]<=nrRPa*mq;`*#`:/eOm5>Y<:'h6/?eKn!j0NCa(;btn:g69f>?"We1[68?1
eeN<D?.Y<`Bj`B4`CF@<[FJbNf/?8L@b<LPRo!9!*?/>=[T/@<g"+SmBiEUM\OBA]
[?3IRG;[];g[9L?FBu@sIs*i]NSf%g\$b[P?Spm-I:'57q+KWSh!J\*fId&T1)LbT
?e<mLiG;s>/e`WkFG:S<g6TGnE^L\?mu('<`Zp+1q(>BqA,!u16Y(I3:QB$)N`23L
fjtDXk'<76Z.q<VCS5?"Pr"ro=uMG;Bf]:](294\EMqj*c3]Y;H%)Ni>T1n71?t=>
e":E&'T96]fqpWdk?Bjo`TXodLUXV#rct("<u18-mPPL13b@&8-*O6$%@On/>NF>P
n/MrB`UT>i$cm?<Y7f[^S<knQF$/&5c?$Ym51ai2#=eIZ47ut#UQq0;c1Fo[:V:T$
NpGA9I:U[U9-&cOY&uU'I(a_e]1_*S^#*V^D15!AWVCi/9mCW)=(gd)*\X&sq@31#
[W1.+EU8'8n#nAA?T6='I6U[op&2"jaWYou((R\I?Zqe28,npVl?Bu.?t+'1rB7%a
pWTsDJ.Nl%^aJ.C*c(e&cp?2HA9S+u)jl+mdBp[?Pk&3e(.YRi+$q:Z!hbJnJLUj8
6FMLQ&;2Th&B5ST3+ukHX>bn>$5Z'r0+QCJ)+%-I%_Tl-^7k*VL_&&[6o[%')pC`=
nJrQ:R$eV\gdI"'<[]/JUlAiZ.<"\O%Rd3:(=:Q:7Zb1K7Q=0_$qt>ndDZ)B8ECk%
[!.QCjul5ETc><;7uta20=k7ZK4(L)=:tcS82fQBirgciYs(Q+=<-#PP_P:(:.IeL
-Db7S>)Y1n2bAi]@:W?.MXB[d89h0Q+>J#'ntI\D.9@kWCn[-?Am%d9FWDdh^R,Z=
@6uu00juSqOc=*W`jq&5,l*C/10re[3H#8%CN,'3g/Q%JF!N*6\she;=JG&f'rKdK
PZ(IY:)U;l-S2TnZ[-?1-c%kS9]M%l7U&JVklKfqp7M[@HpRT26"i+\Ta%rVd$bg1
W,-jTC]8Or),!2jI1Jo67PiFPj#j60gnV(hN#TnrO=91lSMYphd]#5tkp4SlZrW79
an[P;,q_+JPm>K9A<H-D5(GKLTc@6Y4_c!-W>-bV<4\H+#a#Do`&rU$;@Z#Y3?/'-
(lf/Z&caD@?)tA1W)VDj&\rVkX?Zmm&0MfZlGs#OTF_*'E]=&T'lX-q(lSG-&4&i@
$`tf!8JOXo9r*2JQ_srhJ,gW[J/A9iA7P_o&i9ZjO96`8E!Hqi0i`#Z"p"r%ABCj#
Ao0,sW&>jLS)=\T/&2/chu^"mO;n9Pfc1"BY1H[Z"`;%LZiCkjfNKb#@HdA"SQ:nh
>,t\B8@=S_^]4S$O;VP!i!69IT#t&:]l,M:gUOVnF3b653[FsRTB>d&>;-+IXFV5i
osB_Z3nmj,A\bpRDSF#h_`-cFa14%PO^<s3E%PqU!$FB,>9XT%a=n(:Q-/!HX#5+)
jkubT.fe@[Xaq2V(*\89gL,B_B5;K$ZiC0SiCeNOQISDl(jSm.C:"&D`X=!k5.V?;
j]?@!'u*fT).YVo6blFd!&cA1@NmmnLtN<Q=*!'TbT0gV,Tr'L=9mOV=oe(q)Z\Ma
N9.-DIWD;%^hupViQO6Gk`Nfp31C)%%)m??%Lp!Nj!ialWo\0cb-9CHs5rT?EH6UJ
a[C1U@Z6p_/&foDjCF*[gBF$`5&@*`CI+Fq$)NXcQHU7$MU`.^=)W8XYF,+C>!)t5
ktU<jn39[s(beNuNFB,Y[]h$'^d*^s!W[Aa!nuGa1GmCZef*"?bmIiK5Y)*^5T=DK
/A;0DQI4DSB4tL$V7+H',28LWWU+J-8gt7UflU_5D=Sd#2UP%NA/f[OJhf^f*5:5c
]6Mo$'ppq23rn#>J.s$u^3DE3i4(J#E*_O"pf2eD(XjDoIOW,@*tR>+G?kb1mJq=#
*7S1?MRi(^5`%]%Y1Hm%nZB@A2Y[\(A3TDH)C[H'B-T^4PlI(upN-*'/DaNY]_!ah
V<p^JRQ7aho7qt)8G;QS[EEc6RrD8BQ*7<7Ruq(GQ-st;9Bhha>*;UP[PcTtg=pO`
OD`7N1T?cb>7?:;9d=pEk?mQ0+/\`L@FL%h[iu[TL$R.ri!:,41E[WEgE6aW;Kk(4
]:Z3mNcj5&`\7BqFHUp@,NepTS+=UA#6;D_!JmX?eDMk_F<X^`lMq*o3h1b7_AGQ.
5Rjgg0EqO*1$lR?S0:#>/Ro5cgW9-.,_%&8H5!hm^b,-0)$kk+]Au=9TdR9+U]]1e
$^A_F>-_8!`IRhEp@!5,!++ifgC>I"iOAq4s+$11%t7'aVt0Y>p9jIma*2<&aoGr;
M(jcB\;.G#fXV@(Zt!c)HHIa"ec8)@Ug*bf@@OC"4G_nsX+5pb$Tj2M!\8?g^d*p9
>0f"W"tZNg1"ZWEnscG]2(AEC5bS)o\;!6+NBQ$F!!=X"$jf)fY.qmd#ge@4r"5sI
"fu2_J.h7*ZM"8Kj$@_W^08C\fqQ-Z<#N9u^(Wu;A&eml+Y2QmJ28Xk1D?paMhqQ=
05K,s@_o\*A3$F,41!'qR/W'`\O,$X4j3PUS(@p<n&$Q55q;._/05)F`N,L`_fKBU
X#6mYdu0G@V!40pj?/7N"utC*5l.iEP/jVjN5Q!\`#@>toH]7Y3P7a/78u4Q_fDn:
<]fY/OrQQu30Gi!_hd@qLeJr0j?X%b"@W[4^(^.NMTi,bpI/6Z]S!i/S7X]J=V&s$
^V\.#L^,Fm)ng&o[J5;'g=X0U">#ImXjeag3K(AbBFj+TXg;Xi\-4M=`PH5P6NZ[+
gS1gf0gP<9`CL!L/9FDOi\4VR6<K,`;a`?:R)bZh`VXts_Wiea!\W35_Xr;O7":b@
d]@fJ1E2SbZfeQ>@E(QsXc!"hWldA[gk[om#`+HjO9@/FL-?:Z^Kb<dMgN:!A]V-!
NA(IR/<)G&!D2>+8I1NtoH6QK!BmJu4/e#daFQ*3N\TaKarEH1=K'*4.ETdP47L/"
bZ@5\3Q?.Wb06nYg3'@+UU1D'5$UY%*#L$HWlkK13]%^I'XkZ$Z*#?B7!qJ,CqE9_
8JPdN9GG=e,f7b\K?OJ9NeG?3CK;#-S'0=#1\A=LI'60?\A`:-8u0QJ,g&c]btAI)
[kuL3CsE^<ZFeo!bEQ+%Umb"78/`,4.(l_&CpQi`3m;,;c+Mh%4Pe9Shp)=(c3^;k
aRMrD/^/n#:)`c$;a8H(]Ic5r:0cm!"QQ]g6-Z4L.Q$D5>hI>D3)(+89jCd^"R]%M
(=)j%c)gD.]^7cpo/c_5-e"kdM;h<`S5(N1cb05&jSm,Ws%i^i:X&m<<7F[u[nTip
:NZ_4q7+_WZqsI#:DD0nD$Eh1XjDIH_j(PS*6QX9#TSO,ai*Ag>kUak&((Epc'8RX
goO09'J<qtMU`SAKc8@H)puV&dA7i0Bt)H76d1N!;<8._FLY*U%T,(kdR=8cXW<Fm
&PS/ublnU)m06I.p/3aWda\!=>mWo1)cF>fc^`\7XV]?l0ZhcP:Sb>BPp*801`r8I
;jBAhof,mGs3`Dn;i@,CNB<'S"&F<Y;rm4Br>a:lEDK:EcG_QaAIm9OHdkaT]'Vs@
/LJsN4Ag5eb<3442+sWk.*g'^bq2.077YP7;H6.bbiMc'<!lW:<mdI61uYW8ALUD$
=:YP\9m';qN@iRY/lMX@<Ri9mc!&O1'@_/-<97<5Ph&\OeBts2W[0CNAPgqLc.0[i
<finRh/([8Dq>/3UU>!k&Re^:kgcF-eie'*9b>g6>>h";d\R,n/SN`u^scj;ep,t-
m=*[[J(OpTfG/ti-%@<pEXiO,;dF!:KdsI0HWW\p;cPSSbqi%^J67eG=FFr6U2VnW
Fr=;=P5+$>'p)M,e(H=::dJ_=7?j*dPLM0heCB:S?&tmpQWW'Lf"GGDjUtXS-<S]3
fts92I<F61H!3@E=A=G$K\]a@X3Zb`P=;?L*FRF2W*6k2=XC(@I(\*;5uatZfhs%h
m>5$ea]WJeeQlnD;,l6ee60(rgNc+eI3;9Z:"Mh5W"$:sQ%`>:VqT\7=N..pm;#Ve
B$i1`<^N/-h82t<^g"L@>Ks\3'us/DT@?lBfX77(BolONZ!?O>>NGD.p!Cnt[,!KM
(H']I*NIn!Ras?Ee.&80D:_c.@b4W5<5l1GL!*JUMV4KG>b0SSD6D[-?<U(B?;9N^
`St1jgKn`qf@<(<W0P?M`][.[.a/N-"CtiojBaE#gh!\F_[_NfQnG/h`6aIDPZ30#
'/sTW5R_11D=Ch&Rp>`R3V(=K'IZD^q)T8cX8DWurVKs7[Z+ksLslO;lZk)2]!JO?
!!ieDEnm_/Ol/5qh&SY8Fp1@j:PdHc0MGZ+mKkMWm,98U,L-aj/M,L2aPIYZ$'#NT
H]YG+IUHt8aD1OSX-Zd03oOMogTB:6D4T:L@L6Wb5+DE,Rg??nO5VdP0ST40ICihm
aP6BJ?3RRjeeI+JX[O04_dnKnS-92D0d3sYhDL'n4iCT#,2P`B@.#Zuc4Wa*Lgl)Z
a^VJ>(!Ip%+OD_W<X(J;2F605,i\CYZP+]peb+G&.#=qn1d3*.hEVdGcsuc/A2R]I
[P#+["fr(cLta[n/j2.W\)eqO@*)1)[Q(ub'Ss,]hinXCQ;Yhl#%aR/A>WA:37^@U
:b+L-2fhFL/.FY@\)nqE[!#G\j(42Bl[X<(4d.>;.`eWOJZqUX[4C1oraqi1F5:Ej
j'A3aIGip-R,"EJj_[fBei2W3"kkf9>@oD;G!T[$6<NXH>S_<d(,f^Zjl_(;=n[>L
VDW#Rc;'*Gh(@Jqp!qsEY@qg/'ZP+UN+cn%MT7W3BAK'5oleHcF&.e\k[h;<m?q/^
gu`3j??V?8L3[H2@ccG)knqmOeiGe_WFU@e(\W",%HHXeUhCgAhI`*ff[iJeN\/^#
J1dB/m[d\?3F=>Jl&HWo8COZOXfZDU(e1E&D8,!V6Kc'MjM92!3!)Uq8a+0M(hKh/
N,V$kb()m:#W!O($r8A%pc2:.3/dh&8b(u2f<YgjZCD[^Wr&i$."EED[fYk])X?EB
^8rZ#C\ZJd@g0>`%4kfcXST?13sZ,/`N.XE@EDJ`jt9qf;r*Iug30KU+9jD'M^tTB
61,:K6i++@"hL''.nG>'*n"aS\63.*D,nI>R+5WZ^+QI3/eEqW6G6ae'uA^lD>rJK
erWnGO_Yf]C!su6<(/f@+idg\6+@0']*6(Fhe?u,?BuF@51Sn"e$aUA\;S0^iohq*
1[V'MZMO7!Id-3ZQg0mqgj[f`'R+#]0<79*mYc?Mk_(d'#Oh*QiY>:&c6;ItK)k*C
!2p55>7iWNh*hG1#V_$a'UNY>W%+QMCck@,Kr&J.U58RNJ<1%e^^KY`%L^dbWtWM2
R]`n_c\Spf/^TG;aJaW^%e<+8nlI..B.!1n-h<$@ns:frV^h8H/+S2jElTd&k:Z?"
0CoE&o+s.Q-Sk9P1\4*no2dg@B/<XC2tMeao9VH-h\lb:)Z]=H&O.N3Da*de5Os"M
F9b,(-URGa6hEl:oN+KRB1DN;8+L"K!!bUdRQPF?(@d_0EOQCPfF@ld9(?U]E6h9)
5T,(P)KcQiJ-ZD\!#G6/:k>PF!Ol.sJ.;ScJTV3$BWk>?(K>P.MY1A.Fa%3VO'%2S
=nX1sJ[c*[QlC+uAEIf'p4a=USr36.C=aPD';iKc[qu`FCUNH4/WUYjkA03tk;>lX
X9(e62I8*nrSp+cG4?S/(O/%qH$>YuGI#pPb.W=%#HFRq#f>p[PH!ZZJH-[hT/UqV
(E!]"%s9%>GMa"PjFo1LeLLRO8N`!5KBF?nL(VK5JLD03cjZY1$N\-&J^9.<hhejp
^$juYk-I1PY05h(pA"_-Go)Wh0SGH'$OB99Gup:HVjBqUQq#O9@jE'P1&Ldg(kAME
qNn2XVlJA]B6lH6_[!#_U?RJHKcaBoOdHXZp^r#]T!e(HH2rMI+<:L?U3\I)?g"48
:Te5T4G[Mr+*Xt%\$C?9.08?,HZuuGa14G'\j,LM?]4leVFPl7Oaur[J>[%HDlg]<
Xgdc%mAs4d#QahSa7m[s[$ZlnQ2*$>g\iV96ISef:9>U.^0O@6A&O*`N23VBCP[e'
hih>_n(7LJ%/kt=TnhS*&f(Bnih3d@r^W%K?-rRPk4uq5rNj#P2hQW'#NIK$Bp672
;V$@CDQAsLYBJ_S&+';HPs/]5^Dk&P>1`g%nGb]=4LauHqT$+:oRDqt46#2,n+,sU
!/LUZ"9AN'!,snc-5?oC6Xe@:KLR7$MFD"%Gf42O)idEudJ3p"73dse@c.PLVH#.4
94cQIKZ4Q'RS?&_-kH@f$Cskge+s4PKgVS3B[h<<U6/*G;eabWN:mA]!!D.E8_bF-
#,kU=eb]N)`FGiEXHn3%VUZrk5_.@WGQ86["b6VS]>`q*HbNj$2s^_R"\uLYJ:L0%
)up/4!'p<uFq5m_b%5VC>;fhGS'FEQ<r0TK$j6P3i*_D7(^^6E>k>Q*L<!kobj>&X
HgTC"1]hBb!6kKS)n=mIGhd\e,F-I7F*ZR?L3%.Xl?.F/I`H*/*U3:ph>[_8`T,/9
I%GgXVq(,,9DmZ(LWANJqKfjT?cV@&qu1D\n*C&T^ec!VZG<\,&HopH>#PC:OF/2W
_GDKu$,Y'%0at]kX>LL*d/6/a6]hdK'#`0Yob#.T>Zhi]as9t'`_i7?)S;-=E?*"r
g*mlZOo0bQ_t!AQ,081p&L'dZ>aZqQ;H028b#4_<-q]Z8Yq3EU['_O0debUK9FU,E
&-B,(.LLck*8#th;ema9K`O.5'SK>N=qnAqbge[IPC3;Bc;UB,h9PPP>2@Pu,l'=E
1jpN$[re/i9%)5&0hg%qh)S6ZeGV[0e5Wh#;Uio"#<J`h4C:LRPUK9@"9@OZ>1V17
5rjGr*+maP24\YnfLt-^$-$ADBjo[q?(#<XepX6*g/acDC>.7PZ#&/qh77FXf)<F(
gfGN<Eno80d<+2G?.f,Waf#i4JZF[1G2Ces:mqE`@ogR!+CG0P4b+I_N\Nds$J/VZ
?'TW:86\o[TNDC$Y(<Xb.uL9U2<p/Ta>ae4?[-0S@"BmV0SF!&ZH*:-.%h<>W(8OO
Mu\,=9:XX";W?RV?un^93,8^(MQ3(jLOa&O^&WfK>((,fBrFQD"tL%LC&oi!TGR[m
kSgB$!Nd7S!<HR\\q'n7Xq./ei$u19B),gQea5<tC:U@&YRcF1?kZ)"B>@G:!c9>l
p'#B55S\aNqqA+V/i_:WPQ;-6('e^RMA<c]45PVjJbUVqH(`dkm^I]_Nc0fTR-PBp
Wk*t"([qhe$cW2b%k,hA!%-9cA`/$q!3WnVI[];$3WoH`\o7h5!PfIhN$+ca&uu#"
mR)q[\,SdKJ=]9$`d$-^(%:Bk=,=ELm"b]F!F1tjdWAhM$3G7(8"p7bDcDH0K8/mr
$*.I2.+815ilKn"CB;cCY5m2XBttsSI1Fg:,%q\g>pIX1^]D?]dbNA<=e?g%49IeL
lJ]fMMI*.tdK"=Ucku#J0s2,q'm;W<+hSp?:?7,7(=LPQ9?gis+s0'J"p$t>n8r1I
OFWDsA7Bp6Lp*Bc1\NgAh['X6d23#eJ.;S4""XF&^!$KG*rNe[LB3=O\<tVSfUB]K
8Ssm2RT>_E!)k+K9Vg*$!^LH<>B=Li]EFM0J48/'IO*/,R`;WF+UCbr+Yk5MP0acl
98i9>X2Y"X,>cJ7#Rb[,;2#fgp/T8V#W6S"aKS5=!FnY2C!_^a3JRVZaCICU7\PMg
q0:f4,f;73\>hHR#Qb=KL0h0Ye&B`I/>?@9+X@e^'hCq`%9(AY:Mm8?&-gil\W/MB
#R8&>SELZWN[%#r57t49ng"Mc/hpqQ_SQXh,Z,GAUoEN+<]`Ic9_j0mZ:pG4,q-P7
#VP0QfM5O4s/+kiK`j:>0mQa_9=\8>dC*t^fm_3R]Vfp`2N,S$,QM-2]qk;!S[6?F
5i!<lFVLh-7C!XuUmq6(FP[\F2]2eY'Mp<E9o7/?$IF<52l#U\^!+Ncm&,g2Ul64e
aS:c\fa2YD%t_"2kUoFF!K1MA&u1^^.9C9/@%ejI"I5BO!S=G=SBUg,\*Ak`WV&(J
!'1K@(,7JB950u.%PPO%Z>(8XJ#d_G/.gPR;G!\p+U/h.5rJ`%b,()Mk75bP(KT7K
JI&)/N]C!(ibON?nK=XS#Cs>fP0>dnUih?LcN67<a\*eGboO)a(p_DgYp(g'_<.1T
pM[&PEIPp%iR[Qg(huX7IMTA*ZLSAWllZ=@pI'QgGHhCg3!h=JSbTo;(dTWO%@T_s
CE*&410OQ++`Vn@^U#.jVX<e+[?`mQ8ZZ.X>OcbC!iO>Ccs(<\&rYm%pu#,%<@u#i
P"gMX59^\%%FnZuB(1B'6>LCn)0KODW!A^@k"Q5rol`<T6"4=gCbV.XM.Rsu(?\%L
?TojWQ<emI$3'O9=9E)T!QJ"-[tS]u&-6U.)ajOCB^sXd\jUh1<+qI7?aUNR-.9Q5
3@I6L2:Z[91D8X0GEj8,<WGlcJ\Lh#@L:%]]@h%nZ/"F+m5"R!F`K9N.N6]*?>(HH
0)Jc52$Dc/5&tXpUHRnNaBu=/8Tq1k]-DM/9k'<13.?NHod7VL4F&lK`80G._YNjB
N@qf0elsmAF<WG?W!!g9j3:o+h?2#F7e"rsitS<tR9O]uTXs&"=MKZH[(Vp^1M_rP
8Y9;TH$$^<7O%:9C)^Gj1=-55:`$)><>GRfhuUI4+-t_"#qfa&"b=e=_qpCgIO6ff
R]TG"R1AZcbrXS*p8V>oa`<!XG%NJP4QuN/l60sEKfu^V0h<SMKGFdA21Q1U9j:?m
FnHni1*"qK_cEa33NPC`F?pd3C1cimh+Mf\@B.QEA2nha`"$6cH'o(MQWIhLAh1$@
V_X)[h\>$YBO'jV8TJ"S!l<KB@O<$rj9-j&^(&Z,Bl;BF>i!4`r_hT[!!Y=98;-X)
*kol5m_l7K\r`5t6(XKEcEVN>`%qn[J8[MVOApeB@LZ=A#CYg?[FJ_Zfk2d9C*s4c
<VJJN6mYq;Et<c%@`mLZCdXSZ:&WaUA=\X7EGpPc.>"#"5$Q9U/$lNed$Im[C(9jK
NOa_l3D4,"I?q4QZWsJCb\_bK0$O'r7+4rB"`6o%!17B"]B/WJ!LmV3+[1:0D(GRM
@/]$LaYU^aCna9uHhJrUj'^+jdE;+4`-h3,m!EI3C@DW30#,<]q[Xc\@J8L?O75!K
\nZs@bc6D3c2QX\&A0[?Vs:]7$uE1#B\ST^8VVb2TFU7`UnE_h?XgJFMfenKir*U_
?_o5)DsjQBC?DV7afN91n5*p3o#qBs!R7p0VE4bH;OknHTBH9/WfI0OU>M^SWU0]"
-@TPt<pQa/?r#)NKU=8t)?B.q>0JB<M%KTf-N+:kaD]_W!YYbBYm!__bV/1CVHF<U
57"@kKWOYn%l!d]FSG5g!)M,Jn#U:0TS*co/\hQ?NsHkI>5IMjPcon.OPpN50(-]a
q19;5U9aF<Ie>D*"Dj+#Ye^faPl=Hu!QnBKE74Ub(jfrU[)a`AOE1UN9SO(D1ln*Y
Lq%"=#)*72NaN4)&MY'aUCG;oRR]h_nIl`B,cW(-n3^I2mRf<gI0;(<"D1tUBVogP
HP@&KV<R9tDMI=+%hgYJVLoAjK33TM;%-<hGb>1_:7*kuS1ZC>0eT>nbDNUbh>jS$
1l6s/DCDGn%i@%p67b/qAn:k7BT[;#cJr/Q7LG]<C1@jQ2pT4h85rKHcPo[\jDQkd
9.DGfN>lKZfAfu^&`-E!ZFD>cq_C2ZW1+?;nC_eC+-Ken#UD?:&FbWj-UqYiN/$b5
_Sf)TPqk7nBTD_@'ZLPS-c-__m?He;"!^\lD+oN^XG1huM^E'c&&UO5Z0$isglcWk
-.9CUd_@=G_^n^+/<\1-da'KXdk+JL/X"j?dbcYij"=6m/s>NQddB$q!W~>

n
Q
Q
q
8.33333 0.0 0.0 8.33333 0.0 0.0 cm
Q
Q
Q
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF
