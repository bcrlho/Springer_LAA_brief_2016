%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Microsoft Word - 802-11-PCF-DCF.doc)
%%Version: 1 4
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 16:40:59 01/28/16
%%For: (Dung.Ho)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%ADO_ContainsXMP: MainFirst
%%BoundingBox: 90 614 578 723
%%HiResBoundingBox: 89.5 614.0 578.0 722.5
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%+ procset (Adobe Acrobat - general image support) 1.2 0
%%+ procset (Adobe Acrobat - monochrome image support) 1.2 0
%%+ procset (Adobe Acrobat - color image support) 1.2 0
%%+ procset (Adobe Acrobat - indexed color image support) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W1 vm op crd OS scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt  0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
%%BeginResource: file Pscript_CFF PSVER
userdict /ct_CffDict 6 dict put     
ct_CffDict begin                    
/F0Subr     
{
    systemdict /internaldict known 
   {
      1183615869 systemdict /internaldict get exec 
       /FlxProc known {save true} {false} ifelse
    } 
   {
      userdict /internaldict known not 
        { 
          userdict /internaldict 
          {
               count 0 eq 
             {/internaldict errordict /invalidaccess get exec} if 
             dup type /integertype ne 
             {/internaldict errordict /invalidaccess get exec} if 
             dup 1183615869 eq
             {pop 0} 
             {/internaldict errordict /invalidaccess get exec} 
             ifelse 
          } 
          dup 14 get 1 25 dict put 
          bind executeonly put 
       } if 
       1183615869 userdict /internaldict get exec 
       /FlxProc known {save true} {false} ifelse
    } ifelse
    [ 
       systemdict /internaldict known not 
       { 100 dict /begin cvx /mtx matrix /def cvx } if 
       systemdict /currentpacking known {currentpacking true setpacking} if 
       { 
          systemdict /internaldict known { 
          1183615869 systemdict /internaldict get exec 
          dup /$FlxDict known not { 
          dup dup length exch maxlength eq 
          { pop userdict dup /$FlxDict known not
          { 100 dict begin /mtx matrix def 
          dup /$FlxDict currentdict put end } if } 
          { 100 dict begin /mtx matrix def 
          dup /$FlxDict currentdict put end } 
          ifelse 
          } if /$FlxDict get begin } if 
          grestore 
          /exdef {exch def} def 
          /dmin exch abs 100 div def 
          /epX exdef /epY exdef 
          /c4y2 exdef /c4x2 exdef /c4y1 exdef /c4x1 exdef /c4y0 exdef /c4x0 exdef 
          /c3y2 exdef /c3x2 exdef /c3y1 exdef /c3x1 exdef /c3y0 exdef /c3x0 exdef 
          /c1y2 exdef /c1x2 exdef /c2x2 c4x2 def /c2y2 c4y2 def 
          /yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def 
          /PickCoords {  
          {c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2} 
          {c3x0 c3y0 c3x1 c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2} 
          ifelse 
          /y5 exdef /x5 exdef /y4 exdef /x4 exdef /y3 exdef /x3 exdef 
          /y2 exdef /x2 exdef /y1 exdef /x1 exdef /y0 exdef /x0 exdef 
          } def 
          mtx currentmatrix pop  
          mtx 0 get abs .00001 lt mtx 3 get abs .00001 lt or 
          {/flipXY -1 def} 
          {mtx 1 get abs .00001 lt mtx 2 get abs .00001 lt or 
          {/flipXY 1 def} 
          {/flipXY 0 def} 
          ifelse } 
          ifelse 
          /erosion 1 def 
          systemdict /internaldict known { 
           1183615869 systemdict /internaldict get exec dup  
          /erosion known 
          {/erosion get /erosion exch def} 
          {pop} 
          ifelse 
          } if 
          yflag 
          {
              flipXY 0 eq c3y2 c4y2 eq or 
             {false PickCoords}
             {
                  /shrink c3y2 c4y2 eq 
                {0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs} ifelse def 
                /yshrink {c4y2 sub shrink mul c4y2 add} def 
                /c1y0 c3y0 yshrink def /c1y1 c3y1 yshrink def 
                /c2y0 c4y0 yshrink def /c2y1 c4y1 yshrink def 
                /c1x0 c3x0 def /c1x1 c3x1 def /c2x0 c4x0 def /c2x1 c4x1 def 
                /dY 0 c3y2 c1y2 sub round 
                dtransform flipXY 1 eq {exch} if pop abs def 
                dY dmin lt PickCoords 
                y2 c1y2 sub abs 0.001 gt {
                   c1x2 c1y2 transform flipXY 1 eq {exch} if  
                   /cx exch def /cy exch def 
                   /dY 0 y2 c1y2 sub round dtransform flipXY 1 eq {exch} 
                   if pop def 
                   dY round dup 0 ne 
                   {/dY exdef } 
                   {pop dY 0 lt {-1}{1} ifelse /dY exdef} 
                   ifelse 
                   /erode PaintType 2 ne erosion 0.5 ge and def  
                   erode {/cy cy 0.5 sub def} if 
                   /ey cy dY add def   
                   /ey ey ceiling ey sub ey floor add def   
                   erode {/ey ey 0.5 add def} if   
                   ey cx flipXY 1 eq {exch} if itransform exch pop  
                   y2 sub /eShift exch def  
                   /y1 y1 eShift add def /y2 y2 eShift add def /y3 y3  
                   eShift add def  
                } if  
             } ifelse  
          } 
          {
              flipXY 0 eq c3x2 c4x2 eq or  
             {false PickCoords }  
             { /shrink c3x2 c4x2 eq  
                {0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs} ifelse def  
                /xshrink {c4x2 sub shrink mul c4x2 add} def  
                /c1x0 c3x0 xshrink def /c1x1 c3x1 xshrink def  
                /c2x0 c4x0 xshrink def /c2x1 c4x1 xshrink def  
                /c1y0 c3y0 def /c1y1 c3y1 def /c2y0 c4y0 def /c2y1 c4y1 def  
                /dX c3x2 c1x2 sub round 0 dtransform  
                flipXY -1 eq {exch} if pop abs def 
                dX dmin lt PickCoords  
                x2 c1x2 sub abs 0.001 gt {  
                   c1x2 c1y2 transform flipXY -1 eq {exch} if  
                   /cy exch def /cx exch def   
                   /dX x2 c1x2 sub round 0 dtransform flipXY -1 eq {exch} if pop def  
                   dX round dup 0 ne  
                   {/dX exdef}  
                   {pop dX 0 lt {-1}{1} ifelse /dX exdef}  
                   ifelse  
                   /erode PaintType 2 ne erosion .5 ge and def 
                   erode {/cx cx .5 sub def} if  
                   /ex cx dX add def  
                   /ex ex ceiling ex sub ex floor add def  
                   erode {/ex ex .5 add def} if  
                   ex cy flipXY -1 eq {exch} if itransform pop  
                   x2 sub /eShift exch def  
                   /x1 x1 eShift add def /x2 x2 eShift add def /x3 x3 eShift add def  
                } if  
             } ifelse  
          } ifelse 
          x2 x5 eq y2 y5 eq or  
          {x5 y5 lineto }  
          {x0 y0 x1 y1 x2 y2 curveto  
          x3 y3 x4 y4 x5 y5 curveto}  
          ifelse  
          epY epX   
       }  
       systemdict /currentpacking known {exch setpacking} if   
       /exec cvx /end cvx 
    ] cvx  
    executeonly 
    exch  
    {pop true exch restore}   
    {   
       systemdict /internaldict known not  
       {1183615869 userdict /internaldict get exec  
       exch /FlxProc exch put true}  
       {1183615869 systemdict /internaldict get exec  
       dup length exch maxlength eq  
       {false}   
       {1183615869 systemdict /internaldict get exec 
       exch /FlxProc exch put true}  
       ifelse}  
       ifelse
    } ifelse  
    {
       systemdict /internaldict known  
       {1183615869 systemdict /internaldict get exec /FlxProc get exec}  
       {1183615869 userdict /internaldict get exec /FlxProc get exec}  
       ifelse   
    } if  
} executeonly def
/F1Subr
{gsave currentpoint newpath moveto} bind def 
/F2Subr
{currentpoint grestore gsave currentpoint newpath moveto} bind  def
/HSSubr 
{
   systemdict /internaldict known not
   {pop 3}
   {1183615869 systemdict /internaldict get exec
    dup /startlock known
    {/startlock get exec}
    {dup /strtlck known
    {/strtlck get exec}
    {pop 3}
    ifelse}
    ifelse}
    ifelse
} bind def
end                                 
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 3687 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-701">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:CreateDate>2016-01-28T16:40:59-05:00</xap:CreateDate>
         <xap:ModifyDate>2016-01-28T16:40:59-05:00</xap:ModifyDate>
         <xap:MetadataDate>2016-01-28T16:40:59-05:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:10A5F8EFF4C5E5118B9BA82C2AA2DCFF</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:10A5F8EFF4C5E5118B9BA82C2AA2DCFF</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:documentName>3765818c-c863-11e5-0000-7d5d457a0f2d</stRef:documentName>
            <stRef:documentID>3765818c-c863-11e5-0000-7d5d457a0f2d</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Microsoft Word - 802-11-PCF-DCF.doc</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>Dung.Ho</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:format>application/eps</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
89.5 614.0 488.5 108.5 rectclip
%%BeginResource: font AYZAAA+Times-Roman
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /AYZAAA+Times-Roman def
/FontInfo 6 dict dup begin
/Notice (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development; Cyrillic glyphs added by Valek Filippov (C) 2001-2002; Numero, infinity and Omega made by Dmitry 40in (C) 2001) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
def
/UniqueID 5020931 def
/FontBBox {0 0 0 0} def
end
systemdict begin
dup /Private
11 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 0 450 470 662 682] def
/StdHW [30] def
/StdVW [85] def
/StemSnapH [30 38] def
/StemSnapV [85 103] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs [{ct_CffDict/F0Subr get exec} {ct_CffDict/F1Subr get exec}
{ct_CffDict/F2Subr get exec} {ct_CffDict/HSSubr get exec}] def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/.notdef <1C60D8A8C9B8707C25> |-
/space <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
end
%%EndResource
[/N10/AYZAAA+Times-Roman 1 TZG
q
89.5 614.0 m
578.0 614.0 l
578.0 722.5 l
89.5 722.5 l
h
W
n
q
0.12 0.0 0.0 0.12 0.0 0.0 cm
q
4044.0 0.0 0.0 846.0 750.0 5154.0 cm
q
n
0.0 0.0 1.0 1.0 re
[/Indexed [/DeviceRGB] 255
<~!!!$!s8TmM^mUUYH?so1p%:=*3G<)>Vl-H:bfmH$Zr9n%iSibIf@TBUm#-d[5X7U7
g"HCZL&[j?s6]4RPEZ%?pA_\6s2;kUF`m]a!<6S?s"u\6Xf_V!:]KJ8s3K#)4$/W_
1fce(h;-n2GB_3Pb+>2rP*2!rmdB6"k(SMCWiE)np\2)'[8g4,B4kl+e'n?@Aq,;[
!.Y(.Zs%cb0u05P[#dgl;_"2^4c=5;HDu5`q";#<ZtQ+G^sp0YlJ\YZVp*o>3@u&F
L-tXP@a(TEfAkJ@ZAVXK+ZYH@m(?Zkna'2?;qJ*ORCem'cf7WH]8<B/hW4."\(:<L
qr[59>_p2)a5>(kkA?C#n+-4=Y0oONTLE@Is1lGMVl0R]m/QbOs0T05BP@Fibl?Y\
s#E+>H@#ULMuQ^Ss-];Tf@L!&zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzz~>]
cs 
<<
/ImageType 1
/Width 1214
/Height 254
/ImageMatrix [1214.0 0.0 0.0 -254.0 0.0 254.0] 
/BitsPerComponent 8
/Decode [0.0 255.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup /LZWDecode filter dup 
] >>
pdf_image J,itR3$]7K#D>EP:q1$o*=mro@So+\<\5,H7Uo<*jE<[.O@Wn[3@'nb-^757;Rp>H
>q_R=AlC^cenm@9:1mM9jS"!dTMT<$3[GQ$8#0$s<4ZX!SPQ1`C/m<k<ioH)<bk^H
j`\=EYZP^B4!g3;B=(iZ<kDqOh/Bf.DHAorf'R[o?>ioWjnAY&^gM+`4=1jRLW!YA
=M/5?"98JJ5_&he2_CAr!5JR`a;>GTctI.H0F!aA#bC#H0Yg3Z'e'7H1g<,9)b^58
lfVEPj=h,F#"elg%0"_8a.I0gTH);kQ*&k6q-8rW.u2(FjSC]]rru9NlM,a*%\*oD
hP9^$)_W;As58G15QGP#GD4!0IXb6;-jO2aTO;^[dkqCJ"O[:qfF#k[TL5"M6%AqA
!$G&'(^%GW,?k5dbq(R?2XUVL"LO02#2b!5Qjh$I?rJr`J?A]@!Wg@]qYeGBS)G2@
Y#kc=1pJe?"T`T7."MD]/#+4DTH%]t!8oONdK#F##iEL^N2IQ!TO^Cc+AsIt,K_->
M?5S!C'ap\TO\9STQ/b.3R3G-qV+U"F$1Fm+>]MfJNtH+m3"YB('?f7RpS;ZD?q6^
_QT=K(eQQj7aod.2'rCQ[(Ececgc'uhgiq,*!\\6)^cPScua^=!HGI!3nB3gG55/e
'gXO]a:KBtdERT^q#L$I5>X,AkSGVh0Lu6L1WV\`-ihh@T]1JTZ3JQ49UsW4>--X%
a2"l9@l$&@FXJ57'rqTG?-+nFbr&l<]b>o3q?^+smJY1Y^hrFegep)3++YPRh?sES
p`$\WTTY9ZG1C[cr.E6LKkGY.[tZl)4q>jV!9+Tt^k0Ome;f+$Z@0%"@osC%QX:BN
8"%dY6fgPP(q]a6+E`DP?D,e2$WQ0Q%R$V`%?#*+\#pcI!9GUdU&`9DdKNT[Da%MQ
iCGT=C!uK$eP#(cA45>6)QjR&`S%XNVC).Gk`.WB#RKlV]1Y!i^,3f+WRk<=!r5M#
m`?u0)jY90h[\M&TB;X>"e6^ZRk$L:l*frOF8Y;YnpudY?S=f!/%;1]](-.\E0;aQ
`U#;/0sBef2Mj\A/LuIm][QW\_FT&l27`?NQUBi.Z.K369i6+]^fg<M@"V`dgj>[6
h?>.EHi/SGhXNS[jP9i`9\.m<Sml3kj1fUkrqcW*&O>UN#6F^5Si:?Mh6J#Fc';'e
<RsI-n.,N=<D=SMA8.Y<np+&&Ml.h*F.UJZ!=9JB4]dIE>2.eO:^tE1(<Eq7$3PEc
a\)W?55Ei'D`#aV_a-Uor!DFDL;YqJ[u^sK*^RPIX^/#i=F`[N_mk5VM;,f>FEC3&
m=__u!?WR8!DN%uDD*%OP6c:I84mn[VLBqTKVE@InYgD;)D[C3E>K]'"`09[$:9A%
^Y"G`A`,NO5do%'cl=m";1OnMnoGtM+U3CS&YHA;9bIpeGEG^b0uk%7*[JCaCb;3L
a64*A)@-juD%,XI\%*\SA;HK[*Ho,`YpY>N_e5+-JNG%`/)KU$Nfni)5Vu<aj;`,u
`jt`FL%QQiA?."SWR"84*-kH8]iPeZ"drIl!)hLh:J)gI!:sO"%LQf?;JH1nRE0qZ
6(^a<>pk/TMYE-?Y[4;R".<5e"D2X"R?F6aJ<^X+d$3oWWZ9sCkAM&5j*Q!,<N7m4
G9!7r%pY#TJJg>rJ<26>QDVWP6'U7LVo^<YAC?U]P=TDLS$/XG%.=0qhL\!RfLom7
jeS)6PFQuNP7<Nb+!o)$bplKh9fZ7E\_qk%aTMT?DurXE2+U:r-'3l6gXCfb;&+,t
1lXg%!1'.:R\a,I./Hk23DQaj3\jbd!ic6AUILg7KR-*Qhjh-Y<!aRCIH2pbJKQ=H
/-2+>J4L#u@M]ir\.Sj$#0%Lq0Ese]LFA8B$3<s[#(YNhZUQ&E=`?>*85qPM+F;4^
HT,Z_+<@cGDT.]pobWEL*<VU4%"\:QD9N8&[")g#>1*iMllDDp5^(%LMi:uX[?e,V
<!j1`?;')[+Lba'&6sR`?N@L6[[/h&\bi^PJBcl\pPc]bn2"^Z"l6Ip&.2`_2.u>/
jM"(6i7WI55o[5CZM+"fhpUb<Xl\(UG<Qt-+=mZ`&/)WWqZ[iE7q\o[!b9iNoO-H*
>OMIE_H3fI><C[H5`R#+=H=)(>YU(F7Oc;YY81U&?&S6-0ud>A)Im#hNUb"Ka&qdO
A))Knn`UUu(+]_rRtYu?#"cp>0.(5bSWiW!;9E$;.V2jTJ,mq0!n\'MJe0k[ZNaj^
=cY=M>g8].7VU+MY;U"Jh4+"jER%_53bM^bSb'jHcWT^#BACi:_%n*<g(-M`>n*M"
7Z#Mr01KX2*M^F4>a794n,](3V=_cqdopZbC#(qMo`h,>>)uQr>tq<k7]FpAY?#Do
?*!XQZ.<+)>&,\(Jj>tR]3"H)leQump'/@c>7Y1Z?&c,_7`j+[mgnY,<l]a)*Wn=t
$ggjBLM^>!?5M3Eh]8i.b:Z8pFrP'fZ3RmieV2ctXK[6rD?haO"!Dnd%UgC2]uoKb
[[-f2aAND"0`Lk*79[jh/@Be[-Mk%f;h=GdS\6tj)^oVX!+4"l`QD2d[[,Y)ODWBd
36*0jgN*2\JqX%UcKXCpXJ"B3"`oJi!!A`IQ?,rA#VQAi^DEu)g^lKj\cFbl3.Gjd
dM%)5:I455b0+d??-`dQ+6^BkWY3)rcFJK5!o.jsp!R!f3]AGPh2J)shT=Hm-YB/[
UUEB.gY:Jd;!o@L$273^F?>h5mp#\&pYON?qtGZ6?44U_%b4O+08Upf+2rHm);9IV
OWscha`hYO8A)^&mXAfnG2G8Lr;W>T*f&-d5=e:-5Gd\[Vq#n(=@R^gXXN?$S2/M?
>RIC6p-feP'4k$EaFimS4li^`U-D?'WB0dL7X-Fs*WkE=&iahMMg[>em0UPN+s,[A
qk@To#jhh,AEVj4:UjRAFXVrS8e_kO37\'31a[^=ksJ@LpP?"f9Lq,<HZt;D`hrOJ
4A/9p-]bVXn!a1\Z:&(AqCdF#&#acX+=aS?.PAq7,>@q80`CJdqN&E:BX!smGlE:@
!i!i.KYjQ0/H):n"+m->:V-=^Wf6)KS\d'i7n3O<5-EnC!@#`aa^?>hX<S:2.WA'1
mJ:#I-il"?,4Jh]E/Go5Hn*L'/4G@>cr_KRSggmO.SoOXNVYDE*=!tT#=:K[U72D)
b$W!u64-Pk,Ci,@]S8pU6tDOHM#';FHObaUG)B=3`3`-kju&e7WFQpA"%iUTT))q<
=/5Tm9#USeN=)DKgou<S&);AIWrca$G-Hpd6IJa5&4qKt&-Sg@8#eK0:B,94A`+F9
6pNZjK+[Vt@F4R6AYf;QV&'79L.06G";h08j8fVA4)/AGDs[7;!$b&b+Yed?`0N:.
DE"TY&LOt'`8^n+]b'@O2WZ9/YhVo`nJ1+IHABNV;&Kk>Ih)!pK;&c6C0;8TnI[Jl
!YH>.j80OJX@sjT5qpe>Ll*>:(g&57;FN!td%XTSGW.un:W.!5BWi)*i`QFk=_4O8
d!/IP>p8?\>Qk`?l)I7-W^`e!?=n_>j]#.]qDQ_U$c4h3Je8tJ,n:O.3.nlDK1p3G
fbW!4%qJ!anGK0Rl2gF`S>$B="6O%>JkRY]ARq10#Ak$N3+(_M*R^0/Z%R)DSiDL+
6LhN2U<&='&L)pn=bWktlL+VI\>$!dA`t%2M*1b-9Jpie?ud6@.6pc[MGo6J:IU.@
jSpBu5,8Bm/VFI-a,LTYK*F&r,;Ri/`YpUFFY<5-OlQR>Er]n8?pFj">d/1(EX&!F
6r\ju;kaalAu(r-CEZ,7CND1*Vpn4j%l9(_RtVq01K,QVcRacXTEC]]j)#36cA07J
?m^V0."l#`UEW/uC2e/1WN^%IU25mW3@92e:Z@4o&;`2HJ>VmG"/\`;J>7l0Od!s&
&X4Lq![,rY;=Y)Ho1],S=D3j97[!9c0;r]NGp:8(!HVrUaYHcUU,d99?KrG.0f:1R
r]jsp0?!Wudf`,HP;&j"J.j2.nlRKMTP1[;@<8SUF?5*[G"sB43m&@"ZK*oB`/c-'
3X&@U-7:eDfO%4"+f8L."C,93Yrad_GdA24di/M^np%N`M)8K_ZTgd`BW3>SA\](`
FHUGrN?_Cc7,ee9"%lu+8m7HkR)s5&UrZ!r\m`O%r+!o2VLXLK@$\[_30W!AAqFl6
.!G*;Dm:R\VuU?aQs+1WE$rep.30)Na>P@:<<Y<DaLIC($t\Q#&qZM(eD)1rVI4J-
,Gs?lL4_M)_+<Tf3bSam"!^C7=SN/i(ZXXhe4*ocs%?q=+OV/gFEU-\$t\MM7a\M$
[!H31ZAn#L4T`kqC6W\X&=?!`6q&;?7)4Z#$AF5a?g"_<VqQ-&nc?b,=<h-0YED'`
fe&?UKTOP1&AB?*b7mo8ARu0O'5JO@!`u2Y4LCi%<8`6sPs@(\B`j+b'^\9g)-WmS
F`E.J'aR&Y-XPd>3ct6]UZk-cr[_%nFn1\<M/?B`G_#=b(00Tp;tD_"R#(#KSAkP1
ZB-on%Z3WNRcYGCp.Ui?Y>Q+pHUbVB7_j333F=-d6rhSq'_Ze&%p3u/=3#)\#8pYK
#&i%OA&`"cLC7;V4$n)!6F)-3[2^^IJPgRn2G,$E&GS)iP>5e_XE*f/j7-aGG_lNQ
FU(iZ7K,IU?"Tj/D0<T"&7k^gLL*qF2&=/(KTLDcfPoBrC1\00M/%Ok\OuP]E7QNe
2U*WA^6PoMA210,K;O;8U,&&]@:I2mFrYZa"_KP$,$-%?2/[+$1H(;n@teNAd6*ll
0m#=eAL\X1&N+;IQ"?0,E"ClMG6_%Y\ofk!>dc>DG9ht[HP70DS@5aQ2\(&^8pt(^
E?fC=$"?mn0ToLCG!``_eu46[X`X+@4VqA)e,r,gXV47KDYLqWQHN_0>b&7QBXO=X
"4:uFSQm?agpb$n,VkNabqo*uQ'T*`WQfV;,B.<;;\ZKVO<\Ztc#n_b;Kl2lf"H;R
HZHRW/GJURA?:VG,m^piF;Q0"_uXLb).TV2AQNe,k\</$'N]o3Kkem`%Ej=d4<V-=
F-W&8QkP.^IW>-.17*`.kTO9!;aEA]24'7ZfDAm=-[K>YHF8,O`/>Vf6ru:MBXh>q
#rd#PAVJW\I*-M(W./BeNG45711N=KGNBIGiZ`S1J$mKhp\&.]O'\[;Dmr#mA3`Vm
-'"?1Fn,]p=SQ5*;/*Q:Pk_/;fY/qY`-E*>)7VRk<(R?RNDE$l>%qu<<J`@R>9l#!
O4%HVFp^-,2Gt7cW=m$P!]P`+nU28IG:>P)\L(<96'2BR<]GONpPN>QY&LatN+;mQ
GfO#jb!l)2HG[3FWGYn=EhbS'Nj@AHEu/:e`L7)'5T%.3-?tNXab/4hPPHkcA6kP4
;+Mlc4_GXVfp-%>dT0;#QM'.'Q=?EZF-&4*@bE&\_A$o7omgtUEX19g,pJ=9k>iH+
/QoqWK\TI>^ffq$SE<q7`+oM[Z8f>;:ua'kW3elY.o3ZH0%0_qPh/*V;kLsn11O?k
Kk4HL@>XJ),C(%Iq&36nUj%);I<U+*=Wh_\CJgMcL%gpe\Z$VG!$O?\62CeJ\T*%d
APY>8PdpcG,R6NQW2Zd5UM:g;V[>9`]V<fVJ66YL.Fa@r9kL/%Re#8nncG8#QruJ7
3s:EsL.!u"[Q#Oh,;8MF@O>7^S44*IUcRInfQ:g01dD.qX[N7L(AL%^#,6jiTkVH9
\`]1o+F(Jo#1La[g=K!ZX*4^H0bPA"GZ$\\0<3!q1IWZLpaRj,Qo)SgX"%pWVHe+[
VF^u^2l_XK9!]2RmW>hB?@-QRFW+:qb&">#5sunn>:,_6o.,Z,:$2.*=\io:2k]5n
=8OV?3ZDC;_OW-[=.:_7Pk&N,/\@n%[!<7LqJD15.\cF$TkXaZF"sI0$qQi?D)l10
jC,7s25N^!\g#4F"D3N'CPD&rX[Ip]\A,IaW2c"R\6KWE)XL*0]VS5<DjoBT4-!m!
?30-sS6MfU69#"e*`]4E_`5Z=k!Wl%?8;jkE6=ff,iEjY=!)d#.+,>5LYK<'MBI:Y
H@rCL[BmC7QXke_a%5]G5Sk!D;QgZp0eU_YA3I?Is1p)`W"_>7_j@i$Z+#BmEI<b,
]O-),U6?O^Xicm/&I()hMo(.:_V=E]";_OERRV;=^WE$e_Z,(:,L8^<N@ok*UCkh(
j3S:XcN='l664GThp9T!d";eT6J^&7^!OXndL.<qI2M,&,[KKqdr)57K)*j<6;F(,
pL;=q6J']B9J&D(l2=ZV?!GkG/_2Plek\`cSSZ'SE9DXjf)9pd]lr7<Ie-itfP?Q#
TEEjfN40gmfkXC:*Lka/LfL0'JYS:[4f&fJKH^\038L:9>a?Sl#ulq87FB?TPWC^n
YTsg;cGCs_cBm=!8)/__gZ$Q96:2<EWCc>lq;_nq[R=b1M;FuSh?#l"n+u.1?=aI>
.$eU+lEYVgZnsr4/A;mBk[gcKe3l>#2Z&SL1LfI:\k*GK8+;t",gDbUq:id4;WJ;G
UaUkJDhKB&=:'`\DH93G[6]IA,W8=Nq)D$s@GmQp/7*E@RNt]T!Ij4uA4*(cNg8hi
$bU,W,#nD[")$G!491-CkCb?23$75qfB$n&l^j6Ya2U/"=6tQ.ihFQ]abMU"R=.R0
3IY5qgr#?8$A8ZZ7E,r!K$J#JGlcd>lIuKu/oAQGL*3p'R0G2-3q+Z(H(0#F+P-U>
#6X1-<bP##ich\XSQ%=MZm2(UVfIiHfSb;NMsp(8kXHHN51=jA6.;E_/0A,M0[9#t
VKL]eg_@"pa?f9YRICb_A9&A,rsF;V61#.KG/!Y>LNi:&"u>&j/6@a"s)lAI&QOin
9?7WP^<U#)b@"R<oKpcAJ"LP4WVA4pqp'gfJ(%ohe#,75h-V?VFN8->5"$j;@Ir7T
+ohXp!'sum/.N6uKgOa[fQ9;#&W$W7;-:230c>s?^`^Dm4pD/j6(rh.*1R3CKLgX`
a`P7*0pt;dP<$#,,S'kW+CK^"+rUZLaM?.O1k5W6!s7R\+E.Bd32om91KpV]Yud+j
VmH/7l:qPV63/t/c(<<^X'0*N]4J],>CkIB0Y,_S'-<iu!AKTtP2UtKi38SN*.!_K
ThchRG\oY1L<3unffUhO(]g72iHVk3RYN>We2#]nY*W!F\P]-pn-.ee!jcWbQ@1sJ
X15u\j.H`11@GR2DrHd[53h+9jDs6_#Y,+=XbL:FSQV:0XZ+Hhn^,MP-bBcLG&'7%
-_(:Ec:<G3m=p*tkkSWb*cIQieHgch@6Fl`L5,cS,OV&8cm+YR5MuMWj1Gkb(:(9.
4=5VEd%VujJ.(WFp*_BEi5E-%HnLc&d3D6f`,G8Dpn<Q:2\Wpq1Jo%0-tH6fUqe4+
(;Wfc&sc#7/;3;ll>'K(_dHjnO?>1H"X6-MXJ5,QTF=kS46T)&KYfL=1F^N58jrBK
/,0>:!GUW!KE-N*O"iYY$RIgU1F-'(.A.4XY"au\D?*BEMCgm9C8<ThbGt];"<d9r
gGdL)XU?:'Zk<KCbk"GP/P<8V*@OfVKdfkGi*:`U+K61_:sFe7QVt@/,6M)g2*4#]
,]hrK5<$Yu9i0ChD/3Q+d7bgG<Yd3$@RB@-G(bD]<<H(HX^s^f:)7#ID6Tur@#dZ4
]t2?M<bsF-Wq1A@Ea8>_/-X8+1p(u+f5r>@!75JWAR;#=mscMEou;uee4p(^i!RI<
qqu5!%;9-/Ae9YDcf-ejh3aqiM8!!lW>*&?IQNO^?p3S2?9'M>Os^aT8.pLT2+<_/
NKo,UK]%AW'VXs1<#'ucAlaolWtJ_@>8e\GR"^*.7Y_/`G[F<]g/;L@d(sUtS0;f)
9Gdrl<gJ^r[fS@Im"p6l(PVsNT_b@585KS0],`3(.UXT#3.P53+;\bU@r<'9S,R'.
EA,&i#R1(i'\e:lL?]E$TLJLPkqs8(#R1;UL5+n2Y,TB^Y<KG,KmUQ>F!3heV:=\A
2CKF6JVOiY2BdQ!ch;eYWW@<OJ4nbbaA>g.m^s'[Is(YfH/j&#f'3q<?>$FjKg))^
lSgn_&_cZbGHlgE!/FS0Tc&VUa8DQN$l8_hLXLa!gTTf7gV-/Wje3*`_0%CGr4k)k
qV5lRAZ-;o\gJC(THa&U:&X@liWe2mqbD_3AALOH?N4'b!X-gUcU"D=jI[*q?gju>
!r,V!+`UV;0(JBOE[]mSPHoo./d")p\Ehubk_CkqX?IF]gXb:.Gqee4/6C(-$*4nf
:Ne&'11Lcc]JtHffEa_I7LJ/I?]5SO0h+.E).PL9N=i$F7_%+j@ruXL&]QK5pH%KQ
KLBgbaur8)q&a,=Iuk9I5tEu^bZk!?HZ'B\8@]T_A9<lm&fKs9cli:Z'TeLkAkbk-
3@A<@S:Re+/<`'X.:k?6PnKro9"A(TATY,A'#n'I3GC'VW%S::g0I@^GqWb$^R,Z=
@8&\+$fr)@R1goY9Y$QFfo1cUZUSY'3N4lJ[(9pkN9e8l3X_hWhjb@7EDAO93G123
SJ.lC::]%>B6<U6'?4qla+VakkR`5]N##2<q*/Nas.C&1JP\B66"`<:K+%YL1V+#_
BQXi['Lm=,a;YIpMlEFMArT[!3CdcTlZk+*`(ct89k_/WMMd]P;M6MbU*I.D1rPa&
?rmg]9C[U28sptDE?sd^!KtdgS^]DF5$S3@UkQ1,`G+^:&gTPSV62/V\t)hl;dauM
)@@$(OS^N52N**g!>`8+#HI`0W&33B^%a)jCGf`g;*jV763RL+ol-nWEX+`?#=[Sl
GWtVb`kpH]$DBV5WR^hG625+[l$Za?#?Dp-R]0?/9i/,PVOi>E-L1q3BsT0j\Q8QU
6E6TMMKO(E\dI,)Se[?p#1^UZ;B0_U]C!$\4lk0@I,(;a0XiDR+4dJDoUGe?\1e=*
_0_;S%jBSP:QFM*5ZeFH,VpT]'Gt&4VYbp50Q%"JaTB)cC-cM`YP,2T`.1KlD_(5Z
5aENs='L%"'hQ-b.f<Y:Vge*p9>AD`!8mRZJLh!-^ssq<epJ#u0Q%7CQp1j.ga.Wp
^(nN.$OdUe2hl;6*iPHM&72G.8oYU<`2@5]ifp3qnR\Q9nI$.7b[PIpSi&k0h\>+P
E.RQ@cGuf[+64C,OV+H[L"QsQjF^0j+P'0&3C>/6]Tn_c[T:O_j"+TN\!D%M7E`[a
0'4.CR2KUKIG%[YApi2&o,\%Zq6aC<%-293X1uq=o/u2Vd@.E(G0fTC4l:)]TM&=-
d*0*i\=F"QFDd#P[^SeA*@Ar$IFHX@<?^TY21i4$'[nuG;!IVgU,=8!eEeDWgDs@q
:Sj'$`4K(9)ge[mf!ErYHWY'R*Np78\?\0u?Xs8@YcL=6fR"gPCoquT[M]h5RceA7
D5XKoG0e)'@8cJrS[UJ"f@sE&E2[We;"lT?a[H__DS=`8GBWH3)om5B4mBY([eJYu
kC%9^q7h.Is54k%JT*dZ_0@mDi>a5!E5!4-G]s\X*(Pj*4t46*8/gM.B8poF1]RQC
+64DsO`EWWaa#fmjW(1`EkY]"H$:q(*647n!,'Q%YQ+ltkFH\.H-^d15Nj*mTl`JT
d<[`AkoD.JFM=0lH?W0L`/fq$4upZoQWNJnB<?<j\^u/J2!2TtOnB4+fm>Yjm2`+4
G.uY_\A)#2!,JWXmciPS[s.9]Ha%Z7ESGj7J++Ka_0A0Nd<_.!lCH86pqI^,I!9c&
I+PXu?Rb)a\!Q\-B=IYrX5j-PTCa1[RJ%^Kk']1docC$]G[LR83hM<%?H:`G53_-T
(Obt*kM:L"H/H9lY2_^`g3c,AnTe3ElsBGJI(u*@H7+LC*s^hS5H4=#s0hKJ47.I2
\a'.ndJ.'QnU<\Enib%Lr?%s1GRpM?H^Egm+32BLO3d\&\+fnC1[k5P_u.:@s1+?b
5Kj/D,QbOZp:g_15Z@otKDIhi#Jbui^Y@@)lio_^$bj7$5"l6tj:8oZ"@(rU5njo^
PQsJG'>[&l^miV7X:dg?nj!m'_3>hMbRd%8(W"#h_)*&rj;trB'tcpM_9=(:,T+Ai
,JlgT6*qCo,UU74*PtJu_NUh5"1Z2^-UP_s_DE^Yj=\"X-,L'A_\:`jKJ,\L1P)>O
]7_]P*&bFA/]0t9_ON;HZo:@YcU06D6e!?u;oHSd5JN]t5HI#d,T9%G28fVc_gBfq
bX06i)+3`A`)K=?e3QKM9>O:h_t6Phj/g/B9LT'c`/DpZlr(BQ3(46T^W]D?PZ("l
QGi]$7?dA_)i_aG=2i*W7@[YtjAn\p>XegZ7>tPB,NZnFNl1W1[oaRM]97`\*/QWq
!NV<5gNEVA42o]Y\aUXG:`b2W+1_FoJcL@R#U)4d+c'5C`m^X#oNO]\C5NiP![o9R
+<#gXPC^dp3=KIX?mE\07RS5=\`b:E:aAOfE5rfH7k:-]pkAiDJN=3L^6C^24*H2(
OTDC,2e7=rr+J#oCW!MqaFg"78;;^8T1DM+Jd<[5clgA&Oh(C5`^Do0o5t*W-92ce
aS^>bP`!NJJ%Oclaab:$E.rm[LUlc9Ld[NM,_nu2T#d+S7D'U2XH3IE-3:?5a7G@D
?m5RN,"UW0![s2Q^_oUpXi+2$8K<o6;k3t(JcH'%3TPjF6uW1",fh)N8SA+H7&Rg^
f"Z=+6i=:$!$"W'Wr\HU!OQR_m&\:@Sq$s^6qh%2*1'=^-NW^fJ`O@t'Y;C3]ZP'!
bO_B!Mtb;gaLN!u!OIkWJ0di=O9/tE8E^%H7*3BSdCIc83UFt?%"la5JH>E!bL<!*
[+n63^e>09_0j*[!#pb3-b0)H!\9Cb/B>o7:/%I>:+MleE$g)@-FqopJ.1AHi#b]6
h+fbu9e>BlFR-IGZ,m,t9+-p.A@0Uoj%i%68TaG^b]HY@T[)?b\_NTDS3'NF)$2Xs
3;dNC;j:("8^>P2:^l-8&1BQgs#LklckDsG>X-S^O2nnp!Q;1P9`r<:[7Gu\3RB/[
&19KZ*mO#Ed%(Wm,f*'Jg,TEc:f&$%o_H$D&'_JSckRG/bjS:D)Gu1F3W0[hh%%[l
a[jqGJX!7\>EhuA5LDlM;ICCEE.LQ-D?(*i\eQDb9cD86"&["Rb5?PeI-8jue3p,=
a'CGj*4F<"0ffIicV5cS[0M:GXNA-.J_^s[gn6aj!E.Prde)FI%(f=9L!ir8;`+26
,l5\$!)Bb\b[Zi.oUAasJ5RB$3V:P=D"1JI-&>YEckS`3F\]DFZpoa8d^;E`%/\;g
7+>L@;3a[N/EB$<8jOGcMB+1jJ,iR'P1=N8JgF4@'_Kj#;G(dqd*5P?=SYth"O0&R
Jh5Ns0E>,uP>](]3P@f\%+.i.JP=kh;o>8,,i_jo_7*5[:Rn%PK9O^e'@d8!<>;7P
NG-pJT2X8"<Fe#>]9((H#1]6tf>L-[-$)ph(=M,l</[AMCtr*?)q\.1M&dZu*J2lV
gXQ_H\_SJjbq@D%T\'\.=<''Jo8h1>1tMnu;@Q">9eFJ/d8'@i=J^GmgRQp01g%q_
aOJ=6m5RprI*OSn:DCOrc"Yk]C6(f!_$qd&7#_7ISkX_Tb[kbDXbKu\Em<E/\]>pr
PFd@?PKkJG=m_j!Ffm_&&V(%F!QA2ECc>:WD,HhkgB=ui/"Ts-d+R`Ufj$79W#8`_
,te\?b:U1jD(N_5%81qs;E_C;#U.T;]?LMdfbGE/PT/8o=b$Jmb:Ps.`9>o3qc7R0
g#U@SJ0*LY^"fa5bJ4,(4h]VZ1tK%LdBu0o4-J9DFit666QO3:eF<fMagoJ=bCl-d
I>Z8i[R4oj!]7""rR'HgKt4ji8VEgo:aX^UjPF.<h3H`"%Dfp+_TLd\b4(PEgQ:8+
0jZ,7dfcLup".qUjiB:W>?/sSeMGrsR5lr@?DVRASa4j<m*HL:gm*`,h8mh--!<ph
h_\`\%J\bn$bA4Z@&=Cf^'nE@U#;LO`I82&rXud0%:KrY@."\:AI`"jh,X^of_c3;
DApQ,cGF02@-+1m[N<aq(X>br@GS+qp*.j)*((2Z@'1P[2Bq)i-!EJV@W!CK7OV$O
-=WPc@X]h6`Gsn_.Uke,ioF0L?8'`E+BACqj!@o>2AY;T2.Gs7@r<l.7;QIg/)ljT
iANXT]rp9_4^i+'!f/9,QmrBe0Z6FEduH=s"qP5+7:%#dA8VdY^a]DO97j)m#ei\p
hFLe@04^XbjF0lk`\QWaQnR)BJt>Ve^at;M:.9%u?p7Cu4q$Hn=[FH6AZUG:#V?,7
97l"f#``"Ur`i[97V1BVA\MY?`a*1M@^$\"!mXI"+>*qS@RkTRAj/?>I9th!)!9<P
Ap/(2gBN8f0'8fXjNo@=Ap3?QI00+ekE^DVVL%F6HfrCrkLP(Ek'lLeJ*7)ekSAa4
bDPLAKBPdXkZ3E$AqoMmLZjJKka%(hUO%HFGA,!TkgkaWk)SVD/7tP+!nM+#-BdUO
PNbQ$kuO)6AsV\)Qg'6ll'@b%VOHbXPCSCWl.2Eik+:i2TBZWRl5$)XL7INUUZt=E
l;jbGk+c['Vs9#8lB\F7VOHdnWp*&*lIN*&fIuOPYNlCslP?bk-F2qqZg1)flW1FZ
B"%#K\*JPMCPKCcVRl*%]BdJLldic8k.BrF^?c'>lk[G(-GF9p_X'b1lrM*lB#a/V
_sDQLBa.5k.hXc[?#7&+2`d@CgJ>%e.V8B(BbO\:cHL,U(@=1%D+a\aO=k*N9BT4B
m9=%:R1a?%'5a]m0D9*lTIK$0D!fClmL($&*o"'MrIWVBjp=@l*oV!P+)W^omBFE@
*mnP?$gqom1p63i?LBY%r+5Rq[4^\2OU?!s+R_B[[g(OS91*W5,k!AW1dE_s%f5Xu
0S:$2J5?Aek5OiCreX\MZhV!3(c$$Dq_Zn(n5fPVG5/H'8VfVdK.Er(1J3T&G`2"k
1Z5Zn3&E[h0sm=12in+1dlY"J0S%M,K)d]IB,:">8UtIWnW3m(3!0-s)2[l[nLHYY
=>YQT20!OW[+?1G8-&]F,k76,J2!R7gGq1%14re<%?[ue\:a?f2N"^nnbZYn)9`b.
*V-g"[^\/H.0:8Eee$JcR*aOpq0e*EVjlV[J0;pjE;9#41^dDB"(;6I8-"imKCaWY
OpIJ8Ob*uI"*?6M!,js*1M_Us%</8_MKlh;i@^$C(Pikb&h(O%O$JXX"7r/cMKke8
\0/uY*_k_Pa^?"fjE+HkreOgi!MpP;9U9!=LOo[l!`)lkeVKlC[=\`AEHo>0OJ.2M
Mhl:F!"V!\&I%e<dW?WtN%gB98I]cS>g:Sr!c8<*a='gVIe@*';\sA.*:dFoLYo2B
G9DHZ[pOrJBt%IOM)RdY3.qAV1iZkFK/[4raZk;)2]30]'(F-Wd.DKi)g@\pJ8h%l
LG7!Z*d7<#F_rg`V6Wl;P?*bkaCp8.kB;YL]m/o]#^hF#Uu$]IO\YpW!N06GaL-X;
2$5L[EF?3bkQV;AK8>"gGW>'^)&mf#KE,^2F2*kD(a4/ff6LHuJ`nLX'U-XOQ;$K\
8S<*p#U`='M[48CJbUP9i$O$lNSKk$!ah06Glr8CFn_5:1['L37g]Vq5PB"K#^:jn
;"Anb'9pS#o`kkjLF^Q7YR!Y-Gef!Q"O5k(F\oPOdg.<oe>3FUi;1L7JY]i%0:%Da
$1R_sNsOE]#_i*+:(Fb)Oba2K(F,>-OnBmgI##gkW.E&Qc/4n>Jk.37[r]`S+9Hc'
pD9W]BHDP/)LQPq&ZJ9YGdW/_"7Nu%Mat8W#bcO[bPTZ=H`)Jh=HWt%#P"_A$R&c3
3Fiu3%"J@@J.M.!&@n(I"cmm4IlP(R0X(O##(S+o(""8rW!='`pQW^3!!iaV.(fp9
"UG)V$igH_5VOT3(]t/#6Xe@:BG;-c!(B02W*hq8)idEudJ3p"73dSK`e6=&$trCq
ae_CmEBn2')GD<-d@imG4H>IoA?kKCSLc-$jHOsZ-C%5b7\PQ(%7[0lVGY/p!.6I;
!!>Rh+@rF2"qH@h!"c*%'ESF<!T@FJ!%JNa!CK.<]*q^T$j2'3edB1srtVWkY5ePK
liI6G@P5+)3&:O?L4]O#&06)WF1U,A)+[j>/IJfd1g#Y_S-``+i.-(!0G?NCf'RY8
Gm*tp&0Xe[,=2t4B+:@F2l%:,aI=q17qG'_mhU,Wl?.F"mA,K?L$QfA4kV-!]*s7C
+`U3CK0aJ'=fhZ3<Nlo9KBM39YU-Hgk(d)ibfCXsJFEOI[io,m&;@.J^]F_BWur%r
J1.'!N'K'N!WrH2:_NT-J2A_U_WY2I"YM>;#kKYXL^F3XJ05.6YH(T=(<20R_&UKd
qJ`2R$1MUM+pfrLU8TJDHmFKHWYur`NbV67UOiJZSg/hTJcN9S"EuKAaQpSoUQ4'8
Y!D>A3;KtCF3aP4CMQ&bXGj_)X0R7`('UE?lKJ(pPO.Xj1f.Ys#/nj1%m<*PV#q;1
E+I#i`GJ]Z3]#"\*Wni-1]7@UE#_:J[h3D\0iZQEW@K.V:mR=ha\[[@#Y8`kj.W2N
Ga/UAl=D+`P'!?88l\$2*6]i(,0_gF^`:P*$sO5H/'J,_VP@W<a'q/0/G/eF0d6i.
5/7T[$-ge[=9-Z!#QWFAern1\:fiq7r^7$,q_k]XCH;I&=%XCY:tIT%J'II?15E"D
`"@_lm:ZV*@T]!/Z<6fQ0Vl8Pph1QNo&:T48_*;4-O=`rCk\gd?:Kr6[@0);!&DMn
N98Bn05OaV9d75U.lG(^XZ/C*$j"tVf+VP9^]Anf)KWq(;%$T<WW:GZ8?Q5Z8fe/K
GZku[g[ASfWkZ$>rNnCWig>R3R$[u6k51T3Q_T.-3Z^9eARGM:BP<q"<leOF?RP(&
>bO[@DX#0?4-DO5Zdr:c_kNf.:9`GE](<9REsTW<K0[f11lTlu[_X/D;XhXV#fau,
/G!Z;3%pJ:0,c?X!ZQ1R9AJ10C3rJhUV(8`L5#BF[qBbOo41M$h@u6ql?AeVQPX_D
$4Y'rhY724UOjG=O)JD7Ln>u];H]5-M577)I;S"q`?Bh=L%'Renf0BD6*8OhYgaMR
&s5PS/@$tX)M=(i6<rs3loc(OM3luBG3IbUQ=]"+N*6N2cUHP"!l0R4X3l)BH+#i5
Rd\je'e&8Lm?(3PpRg2^DT_l)2jB?[;VN`,M/g@^(@ZB1$,U3Z%$Qgoi'Q=c22T7<
)A)'Woc0Z1/u?@@UC[K/(?sg7THq0,\=c3[&/kt^S^E0[^/iG!M*-:i'Ug6plsOnB
6P*CQ4\)CX+]H1"DK5&oa&;IAFF>>:>kbo*B(TEV$[V8Alofrb=cJLLP1!UC72VW$
?P+:a-O;$"1l)-'OXMMI$25";HH@>S6m;'Thm/R;aX#Y;4!BD:3_7Qs"$gKlnc4Q5
1e`*%'Jb`/%MM01CtB%O@Y?O$$S:I%=(7XeK&f5Q]j_j79a!-MMb2f$(fjOm!"Y7a
S[cjEpFHrI3B@\)qNHcm&)UTDI7,e;1K#4P8DL6hP.#L+@S%9WKN2_tJZ5='gk+Bn
HQf:t1'+'$!=2e?%&'DQ,In"GO"15pdF%+#LM[;hfi^bg>_gTQr'@3[,##p<jN#%U
=c:L\KsOnc7E*4jl/>VBlZLP#(VWTUnK0__mIUKIJsH^n4?%;W^H[ks9U49\A#ss=
Ur#%H,!&\PFUA!eOOOK0;%*lLTJF^^!^kb,7nqC^CI&bR6P1=mOK_n"R<fl2@0LlV
1J2.Y,Rl#L6$Q6@Wgg\jf,3fUNCh?iT#6f&hdS#j9+8YQV!=$A8]1?_[9ZqY1-#hF
*2GOE2=O23)*ocY)`$jN[O1#7p?!M/4!CCWORUS!'(m1eY-`qL#d1]'KmdWB49_)T
;FE'(L4M`Uj!VG+oFNKpUc2%;dQ:N#jFuE6PEJ#^CJ`h1bNC+Y4GCp=P-0s:>,p+Z
X4?bZ9eVV;8/K.DhJ:-dcH'Z.6p?FMjL\'&Gmcp]G2g=EP_#u/N<!g)CX!'=*/K1P
G\q%SZo<YR-I%-?j?6.@f_A@jq&HeDm-n@K6YNQq\o.rc_3/U'a(:u>X%KQ5Z.nT%
(rdpe[ap&&H<rr*I+t%.2=7OBJjUbC%h)iZ0\bB;g$OA6KSR#%a(C]BTU?h==&P8?
fuGoj$P,G.g-\rsKP"bShC>A=(D+6-Nt/8e,RX8;e>Rco)r.EnPO9]Y$UdAKd12_8
diOUpT9MlcAckf#!SF\&Q'[M5VUKT2(?]j2l&M</c%>-obTUu,GQ;H&G6Qt#Usj<)
,*I5+nS!W7TZHd+ZAn\X16l^6LhrV*oDj[0p-YKqP/YJmZ-#1O.l+5mX<_uGglUiG
=_QAb+tYqUD!F<_ma`%m[k4r7]+S,nU?"S`2$dHu@[d_W#;&\l1d]6WU[fY9c*[,C
O<=]ejKt?-WtDuH`J+p)i''+M\L.LOO*Zrlmf5#PH][R?O3'8K#JiABP&'`o2u:J-
\,;"Y&DEJMC47a:(BiAR;Rq_2&$F8g]=aQS6IokD1eJmIdtfQN<d%Qn3.(o1EXbU`
<aX'^+9I)mKte\t*E9iKMU.;:&'<3,DZng!g%AU9NZA$Af9D8J&q7$8kX$Zu0)G*%
S=$`KP)>Y8ARniIRuJ1U,W%iE;49$?YSPdB:jpR-ljUDb6m8b<N.[JbBLO(>,OhuV
".KEO=,_%hY8Nl5R!HH4DVmg)^^.^UGeWiIG5*M.dMVW5esF5Ej[uhRZSBgmbVRC3
[*]og.j?+pflT5aTg0_r+s:j$GH4BEMV_BAdBn"T[3;D$MP6r86G,dT4H(El5^m$,
4@IO>"grT'o4?4]m!o(IS"G+W<*eM*r-.!^&X9AYp>MX`9Ap99'9p!<8Wt/"k"+(_
E3&):8BhE5+uTb.4pI'[#VU9Cms+iMG3uA][B-7n7,CY\'R,/snYJi$T\+@"cA\FL
!\S/-`"8Wh8iiUXD<<6UcrC8]@Yr".$thu1!6Tfl1^jpp5m@+0OCUGG'a:Jmc>\=?
d#L/K-6^TbV9\)RKP5ENo)l!6^^/)Ac)Can,V&;3#nSBjYeLSMN.7`lFD"4o&5%4W
^gI_j3q/%:OP^NZ4=!7rm`s\rW][]rN'Q]@!,UXb![(\NZN_NZ5%53nX2>E$P7]Mc
&V<2Z0a.b42FPpX&YiP>d45kA@hS/A+eZcK+9DsjcNL!o/2*h5,?dR!2\bd_m:3j>
Yoj#h`8klFoE)lRnQ7$[+<g.N(D2!%nPnPr3XlWkd6Q7l0msWV%RU4'!@2R.$.Bb(
UBX)k$kRM(T\@O#V%&%/GCUYf:XL!k[2_dAX95a;JC,,4!n#D.*,q#X6SpH9T,]T?
*et^s+NkV]*"3t;*jC\EL#S4jlQ<D:`=_8"Jf;b/q\q9s"u4sjdGf=i%3^l]9>bGj
@NNqE73[do+6Z]I1*n/c6Og(7g'`$HE^]S@*.!bjohnX5`u=")!7C@Dl-_V9;ElLk
Eb<`bpu33d.OH=!pDoE=d1TFsnfJb_M((j,q%0d3nbFVMkpFa(+;/rL19Rm>KKJ,@
"=VWk;R"3!IUZe>!V48T1;POEWs4E*QY=i".o7gJ#\%;o/n<iidbcPFmgMrY$Gagm
'(DPIk(YY;0G=e5nA^EkbqR9A[PJ+=1'KCR,(G`t>39r_8_"d*R,<ka1@mQFdjm5r
C&tXtSE125;aVdN:-5d^2%04;ZWf;N?PAW71UCRC8,=\:VCF;b2M]!I;(4EPHQ5De
%.eO!;hTX.#'t?C3>&#HK5R">EccB"FE06!VJZDH&NTHd(D3W-PJ8+o\76Wk]CM.J
;VsQGCE1Qk%)C@$TZdh[b0cF!3to"cP49UOcjZ,t%7&,G!7<jVmSrf"%TET^'@RTB
&EF'_+^i<VZj^FXZIUiU0.dn61ZT]ebk[JO<7D3]PW:3M&1XsQd?GIkF>6/d`BmN3
75Ap.dUiJ%b8?215VuY+ZonrlD+2lE"7bt'EFK@jk=7p\!Qglpe;#=^m]<(u%:ujj
1lt3m)\$mX8e?PGJsSRHAq14@n!'h1i"5=l'af&d9@-ZYe=$@fG-(a%6ZgI"M8#Ht
-Uj9U+I'u%npJjccRXOt0D+HW10#[N5>T]F#(XRbJAFlrqbV0l];R5TeJ@2Q*[p3b
4>e6,PlQ-<"]Eb4;O'-h12SH42,htZ7ua;o&9h)qru#r87l=3a7)BD-Ti"fp,W.jN
od*Xs;-+3uj>3[8+9Dt9gK,RX;\R>1Q%qB:*3<dBd=B[+'p'Y_D,JiW)&7<?6aG+T
dL6fE+^i8Y'r[u9*+EChD=Cn;'=o?[_?3a671lRu[Abc6bq,_@8G1:B's-i_)@]R8
7+>^;<UAh2*AEc['-jdlD&GbVBjcta?rHB#Fph9V:IMU??e-8P;b3GKH",/=7I;7,
28<O_7q2iW?FDd%p$jeH(KnTk?aKE9el-/Li4l;871ldQG%3j^E=J42&^l'9PSag*
5ur.//j^\XA,0c'FB%PE5SbiDeV.>F$3:E<"dV#[:r-ik^`h&i%:Id^Ekc)+(f+ZO
CGr@?U)O<8bkYqq<>HW2n>66195M&]$e$OXQ$mMX*iJ)=eCI91Of'oFapg7I?io!V
_AH]>kATCsEE7-t'.m^'fb07&17&r"A$$@:@P/5%+fsXCf.R_:m;[7MKB)??pH^hV
5u]0F/GDq_'@gPC!":!l?1lLR+uim%rH7RfB/NIq_RB[nl2eA"G@HtbJt*6Jg^QNp
D(s.HFmLqYj)+O5GcmPc^s!6EA.2kl3_7M=[AZQ(+987iGaGI+o!K/J],5VB>uC3%
nH_KO!>L.oI(.?uERd+4nNTt,,k`!+"WhF^,"21kIar^!MBd:pcE)#A!&`:cQ2j\^
/K%>A'fZR&+uB`c!"<8hJ/6md2GF#<PV9"g=SOH?GE53HR(%%\8bbPHk:]RF>D1NN
an;7"0d0h(^Kpsh(<OgU=D$3q;'@Y[>PME7,tW+/JCZt/,4mVm=E02kE(8KDM+m/i
<[hHZSOU&QJ=*?XpmZaMTncZUMn$HXM?O4dVd3c-XE_3e=NcZG*m*?hNJsM[;Rqa0
9o^(NKW5(u:ouhNWK#JKO*LJWR0/Qgo4*%RN]9iD;rNlW,E`jMOdO?;5hhH)1N8Z)
P.82Z)*O%?&X0PTP^&IWpoBXhJX&$&Q$?#fq+[)5Xcs]5+LbjG=_X24;3q[bQ2,?b
F`j!qIrnfkP1bPTfj0uuL7MIO2>NYj\XbQ;TmYO?L3]VA\ZIX_Z$1JmR2M3UR<>"P
QA2+8~>

n
Q
Q
q
8.33333 0.0 0.0 8.33333 0.0 0.0 cm
Q
Q
Q
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF
