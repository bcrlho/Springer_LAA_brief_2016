%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Microsoft Word - CSMA-CA-no-collision.doc)
%%Version: 1 4
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 16:55:13 01/14/16
%%For: (Dung.Ho)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%ADO_ContainsXMP: MainFirst
%%BoundingBox: 92 544 522 718
%%HiResBoundingBox: 91.5 544.0 521.5 718.0
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%+ procset (Adobe Acrobat - general image support) 1.2 0
%%+ procset (Adobe Acrobat - monochrome image support) 1.2 0
%%+ procset (Adobe Acrobat - color image support) 1.2 0
%%+ procset (Adobe Acrobat - indexed color image support) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W1 vm op crd OS scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt  0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
%%BeginResource: file Pscript_CFF PSVER
userdict /ct_CffDict 6 dict put     
ct_CffDict begin                    
/F0Subr     
{
    systemdict /internaldict known 
   {
      1183615869 systemdict /internaldict get exec 
       /FlxProc known {save true} {false} ifelse
    } 
   {
      userdict /internaldict known not 
        { 
          userdict /internaldict 
          {
               count 0 eq 
             {/internaldict errordict /invalidaccess get exec} if 
             dup type /integertype ne 
             {/internaldict errordict /invalidaccess get exec} if 
             dup 1183615869 eq
             {pop 0} 
             {/internaldict errordict /invalidaccess get exec} 
             ifelse 
          } 
          dup 14 get 1 25 dict put 
          bind executeonly put 
       } if 
       1183615869 userdict /internaldict get exec 
       /FlxProc known {save true} {false} ifelse
    } ifelse
    [ 
       systemdict /internaldict known not 
       { 100 dict /begin cvx /mtx matrix /def cvx } if 
       systemdict /currentpacking known {currentpacking true setpacking} if 
       { 
          systemdict /internaldict known { 
          1183615869 systemdict /internaldict get exec 
          dup /$FlxDict known not { 
          dup dup length exch maxlength eq 
          { pop userdict dup /$FlxDict known not
          { 100 dict begin /mtx matrix def 
          dup /$FlxDict currentdict put end } if } 
          { 100 dict begin /mtx matrix def 
          dup /$FlxDict currentdict put end } 
          ifelse 
          } if /$FlxDict get begin } if 
          grestore 
          /exdef {exch def} def 
          /dmin exch abs 100 div def 
          /epX exdef /epY exdef 
          /c4y2 exdef /c4x2 exdef /c4y1 exdef /c4x1 exdef /c4y0 exdef /c4x0 exdef 
          /c3y2 exdef /c3x2 exdef /c3y1 exdef /c3x1 exdef /c3y0 exdef /c3x0 exdef 
          /c1y2 exdef /c1x2 exdef /c2x2 c4x2 def /c2y2 c4y2 def 
          /yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def 
          /PickCoords {  
          {c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2} 
          {c3x0 c3y0 c3x1 c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2} 
          ifelse 
          /y5 exdef /x5 exdef /y4 exdef /x4 exdef /y3 exdef /x3 exdef 
          /y2 exdef /x2 exdef /y1 exdef /x1 exdef /y0 exdef /x0 exdef 
          } def 
          mtx currentmatrix pop  
          mtx 0 get abs .00001 lt mtx 3 get abs .00001 lt or 
          {/flipXY -1 def} 
          {mtx 1 get abs .00001 lt mtx 2 get abs .00001 lt or 
          {/flipXY 1 def} 
          {/flipXY 0 def} 
          ifelse } 
          ifelse 
          /erosion 1 def 
          systemdict /internaldict known { 
           1183615869 systemdict /internaldict get exec dup  
          /erosion known 
          {/erosion get /erosion exch def} 
          {pop} 
          ifelse 
          } if 
          yflag 
          {
              flipXY 0 eq c3y2 c4y2 eq or 
             {false PickCoords}
             {
                  /shrink c3y2 c4y2 eq 
                {0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs} ifelse def 
                /yshrink {c4y2 sub shrink mul c4y2 add} def 
                /c1y0 c3y0 yshrink def /c1y1 c3y1 yshrink def 
                /c2y0 c4y0 yshrink def /c2y1 c4y1 yshrink def 
                /c1x0 c3x0 def /c1x1 c3x1 def /c2x0 c4x0 def /c2x1 c4x1 def 
                /dY 0 c3y2 c1y2 sub round 
                dtransform flipXY 1 eq {exch} if pop abs def 
                dY dmin lt PickCoords 
                y2 c1y2 sub abs 0.001 gt {
                   c1x2 c1y2 transform flipXY 1 eq {exch} if  
                   /cx exch def /cy exch def 
                   /dY 0 y2 c1y2 sub round dtransform flipXY 1 eq {exch} 
                   if pop def 
                   dY round dup 0 ne 
                   {/dY exdef } 
                   {pop dY 0 lt {-1}{1} ifelse /dY exdef} 
                   ifelse 
                   /erode PaintType 2 ne erosion 0.5 ge and def  
                   erode {/cy cy 0.5 sub def} if 
                   /ey cy dY add def   
                   /ey ey ceiling ey sub ey floor add def   
                   erode {/ey ey 0.5 add def} if   
                   ey cx flipXY 1 eq {exch} if itransform exch pop  
                   y2 sub /eShift exch def  
                   /y1 y1 eShift add def /y2 y2 eShift add def /y3 y3  
                   eShift add def  
                } if  
             } ifelse  
          } 
          {
              flipXY 0 eq c3x2 c4x2 eq or  
             {false PickCoords }  
             { /shrink c3x2 c4x2 eq  
                {0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs} ifelse def  
                /xshrink {c4x2 sub shrink mul c4x2 add} def  
                /c1x0 c3x0 xshrink def /c1x1 c3x1 xshrink def  
                /c2x0 c4x0 xshrink def /c2x1 c4x1 xshrink def  
                /c1y0 c3y0 def /c1y1 c3y1 def /c2y0 c4y0 def /c2y1 c4y1 def  
                /dX c3x2 c1x2 sub round 0 dtransform  
                flipXY -1 eq {exch} if pop abs def 
                dX dmin lt PickCoords  
                x2 c1x2 sub abs 0.001 gt {  
                   c1x2 c1y2 transform flipXY -1 eq {exch} if  
                   /cy exch def /cx exch def   
                   /dX x2 c1x2 sub round 0 dtransform flipXY -1 eq {exch} if pop def  
                   dX round dup 0 ne  
                   {/dX exdef}  
                   {pop dX 0 lt {-1}{1} ifelse /dX exdef}  
                   ifelse  
                   /erode PaintType 2 ne erosion .5 ge and def 
                   erode {/cx cx .5 sub def} if  
                   /ex cx dX add def  
                   /ex ex ceiling ex sub ex floor add def  
                   erode {/ex ex .5 add def} if  
                   ex cy flipXY -1 eq {exch} if itransform pop  
                   x2 sub /eShift exch def  
                   /x1 x1 eShift add def /x2 x2 eShift add def /x3 x3 eShift add def  
                } if  
             } ifelse  
          } ifelse 
          x2 x5 eq y2 y5 eq or  
          {x5 y5 lineto }  
          {x0 y0 x1 y1 x2 y2 curveto  
          x3 y3 x4 y4 x5 y5 curveto}  
          ifelse  
          epY epX   
       }  
       systemdict /currentpacking known {exch setpacking} if   
       /exec cvx /end cvx 
    ] cvx  
    executeonly 
    exch  
    {pop true exch restore}   
    {   
       systemdict /internaldict known not  
       {1183615869 userdict /internaldict get exec  
       exch /FlxProc exch put true}  
       {1183615869 systemdict /internaldict get exec  
       dup length exch maxlength eq  
       {false}   
       {1183615869 systemdict /internaldict get exec 
       exch /FlxProc exch put true}  
       ifelse}  
       ifelse
    } ifelse  
    {
       systemdict /internaldict known  
       {1183615869 systemdict /internaldict get exec /FlxProc get exec}  
       {1183615869 userdict /internaldict get exec /FlxProc get exec}  
       ifelse   
    } if  
} executeonly def
/F1Subr
{gsave currentpoint newpath moveto} bind def 
/F2Subr
{currentpoint grestore gsave currentpoint newpath moveto} bind  def
/HSSubr 
{
   systemdict /internaldict known not
   {pop 3}
   {1183615869 systemdict /internaldict get exec
    dup /startlock known
    {/startlock get exec}
    {dup /strtlck known
    {/strtlck get exec}
    {pop 3}
    ifelse}
    ifelse}
    ifelse
} bind def
end                                 
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 3693 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-701">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:CreateDate>2016-01-14T16:55:13-05:00</xap:CreateDate>
         <xap:ModifyDate>2016-01-14T16:55:13-05:00</xap:ModifyDate>
         <xap:MetadataDate>2016-01-14T16:55:13-05:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:3620476709BBE51181DCB7CA0E52C5A2</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:3620476709BBE51181DCB7CA0E52C5A2</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:documentName>3e616fef-bd4d-11e5-0000-315c739ccf97</stRef:documentName>
            <stRef:documentID>3e616fef-bd4d-11e5-0000-315c739ccf97</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Microsoft Word - CSMA-CA-no-collision.doc</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>Dung.Ho</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:format>application/eps</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
91.5 544.0 430.0 174.0 rectclip
%%BeginResource: font UAGBAA+Times-Roman
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /UAGBAA+Times-Roman def
/FontInfo 6 dict dup begin
/Notice (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development; Cyrillic glyphs added by Valek Filippov (C) 2001-2002; Numero, infinity and Omega made by Dmitry 40in (C) 2001) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
def
/UniqueID 5020931 def
/FontBBox {0 0 0 0} def
end
systemdict begin
dup /Private
11 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 0 450 470 662 682] def
/StdHW [30] def
/StdVW [85] def
/StemSnapH [30 38] def
/StemSnapV [85 103] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs [{ct_CffDict/F0Subr get exec} {ct_CffDict/F1Subr get exec}
{ct_CffDict/F2Subr get exec} {ct_CffDict/HSSubr get exec}] def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/.notdef <1C60D8A8C9B8707C25> |-
/space <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
end
%%EndResource
[/N9/UAGBAA+Times-Roman 1 TZG
q
91.5 544.0 m
521.5 544.0 l
521.5 718.0 l
91.5 718.0 l
h
W
n
q
0.12 0.0 0.0 0.12 0.0 0.0 cm
q
3598.0 0.0 0.0 1467.0 750.0 4533.0 cm
q
n
0.0 0.0 1.0 1.0 re
[/DeviceRGB] cs 
<<
/ImageType 1
/Width 709
/Height 289
/ImageMatrix [709.0 0.0 0.0 -289.0 0.0 289.0] 
/BitsPerComponent 8
/Decode [0.0 1.0 0.0 1.0 0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup /LZWDecode filter dup 
] >>
pdf_image J3Vsg3$]7K#D>EP:q1$o*=mro@So+\<\5,H7Uo<*jE<[.O@Wn[3@'nb-^757;Rp>H
>q_R=AlC^cenm@9:1mM9jS"!dTMT<$3[GQ$8#0$s<4ZX!SPQ1`C/m<k<ioH)<bk^H
j`\=EYZP^B4!g3;B=(iZ<kDqOh/Bf.DHAorf'R[o?>ioWjnAY&^gM+`4=1jRLW!YA
=M/6)*KS9PE`kN%="Tc_Aoh+fk'&t\ctIN)4XQLiVpoI(>.nOW?*DmsG$@,,f58"P
DKf<uk4a;=i,EpG4sq/+a2>S0$FB8=Lc6338EKIFAL;stY8m#P)p+\<3#ISXs!O/S
?niX"9c'<+kgN9HN+O00d)G`6)#msL)5ROC4)]2+k.0o<VWtb\bQ?ikODGpB_@VYP
$+PcLbZ,"#QiI3k_Ebmo%3j_^%Y,Z%!!WcVU#(>BVeLZEM8A\))hc"#9Eg+.\98r#
j7.g<TBCc_5D`fBC]FL07!'HkP$i;HK+Te86Q4"P0+>a;lou'"E@am"a:P/d1!Gh4
bqmTX9&t2^_O)AF#"50!mN?/a[R^Uq0Ie^lVih[9Q%Bh]":56Wg4c)O=FpVUJpCsP
+,=:#@[^qDk\(L#-k$oSVV0QZc1?nVJkje5ofc1#<E3&LQ#0f.eeO'1I@LH(M?QWs
0Yf^\`5,J_)Wq^JEh6q/'gPSp,n37>5UZaL$q'OH,(^pC:-feRWT8";#9i;[es3X_
%TcZlI:-/X-&l&5QYkQ&hA;14hk,[<PYI/>LiO.1J1OD.!23fO=i"c7O[7@$3Yb&=
2t-ePJtS27'*Q5KUjO=%Xm^YpGO>A0?oT28H/tAG9p=ZV:/nluLI#Z8MZ^M3F^8YU
qKeZ#q$8$m+:)4A)^j>OK@s@)'8BAKES,@KK:oM3(?\BTJ`XFkA!uJi^2ok.\c.5H
ll-GRZ0[r4bak?&;!8HY^t>YW(IkCFEgpYi5W&^q+:&pLobmaX*Tj>I=I$iBn.pNs
(h,XmKlLR/)Wuh*I\'$NAj$<J#RVK2`@5%nQA.-4H_C72f=()DNp""Aqp+rMl?ba,
g%Lu?D;4EtfsjV/@$!8^KV2pAIt1r-U.6)VQ.CC(KaejWq>^L*+r$q0qL4t=8<G.n
+94AY(iO-sh05FaJ`1nr09>2V]uSt'rZ@3_q92@FfP[,^6'Q,S[ebCMT>UMTO88W;
=:G;h6j\E@/d=Sn*<Y5Q&V<hS$:.cG"lR<:K2?Fq6.e=*i<1<W:lZ/T=A9+\6n*gd
Xqj@V>moVE0nrNM)FIVD%H55cLJ[C[6eHetiWMQ';%=d<=H*pP6qN54/ga!=SJ1"9
;2S4G.MQkc(!!CY2%aAF`Gn"B")MCQi(c$s=Nq`D6tqWXXu8c%h&GC-EK3oA3_*<>
*TP(`O&>=/8(d#,A,m4'7"f,B;3N0J=L=2XIRY6c]b_)&MAD@/DoGj1Wdr<]*3sD1
%V\$0,lqBZ&r[`$;:d8Y7&cGLY#\0J>q>#iZ'J;5>"`"8/`jp]QW!6X9A+_Hjoi.0
ZO?iX;F2KQ5^o+jX<pWgAM_S9R0,3\EgTFe'..t0P4NNHbpfV>AGi,Onr+[nl-2-n
E6k(?$?f*gP;:B^f:+Qc9hE5-4JmeqT1DWi:XRKQbs:Kc5b<QC!/X"Y'a^LCXD#u-
#=HT=Ln[3WMAi_(7E)qX208C(:[u_=.(EBS,2S%%>"i8b5_,7gqNI(f4?95<(o=Ub
RT!<;8nhQh,ZMLFe#Igll3$OR'>gE)\p698/P2p=,VN-EgJc?^m]&QrWYPT4<Pj_u
WFTOT<R;=ZaU"cF6C+nqYm":k36=%#1bVi%N*pE\JupnJ\f,k-4cM<hVGiLPc<u'+
8@7Y"o<86jl;^[j7/36@Wk6MYmk^ldJ?hXn`m+p";@;dOYLZC(fII8:WQan<(+dtg
>9>aSNL[CG?o6TkUcXQ$n$YNVg(j[jD8N-[[:DO<gXuQ.8I2E-6E];dYn_8uD94YY
Zo$M.$$!m`aVhPTl<R:f;!DQB+a*);?/*&:c#)+G"<Qu;43`'>6(#;dUjq6*fmE1?
ZNI\^Q^Wdo#;<o$#WM)lhqR!E0En'o'uWAq;cXS$7$9EObRWN/#D*#+$GJJn\QWb>
3,@2RZW!Ih=m=X203P9Z;poC3K*-r!VC=+L=OQ'l1LG+_l,2'g&5N,/Loh^DS+`G!
iiIN2KhaoTfaQA@1$t&k8RSuXTJL-5hD]J*&'@:q!"B;=C;o=<*-lANjG]%+1<@,O
@uh_o>?-Jt7P;p<Y;U"@X-sG.p`1SeBFO7pSb'A;)C%pkNT&)D#K[o+UNg=/\&:VR
kk#jI<+kBR*M`7Od2R_OfT;'tTl`;XbuqYRC"+7Zo`4g;7\`fkSNnmP!,pCbKJo3+
pcQSFbS,P!%0-AN&;,Lj'#JHZ#pBQn_Orgj@#Q%YTai]1/qG2Kn8aCOOpD+KU)^aD
K+B\i)8S!R$:4/QM:"R:7(@+;ka2a3;%b71#bD[G$nqb`0G)3"llfRhB5J*S[1$a,
h`sh`&eVglp]7FhUIJ3$]hbV$-Ni;<H\N8/=D9VF>/PL\`"18>-\8QM"fc^=&7P>o
`Md\Y+:%rJd)%=O)$qAe<'u909E9XBOrKp5KF]f!,=GqZ<?qur$D;nL^]5boK2mjX
;6D65fX9R(,F.iV?d*e`P/_Zs`#=##BkOQ.0O8%?p!TDKaO2XWU-(>g,OBkH(h=(!
cp<Ls?8Mn)pcHNHnK)2aH4Nm>4ibA6+(!6@cf+aca8r91UR6+_J^QT7=R7'1n45Nq
%j,;;=GQCiGl+^Q$mCQf#Ji#G7i+T:_rPhG_&aMHQpV)YfH,^mc6C6;i:KEQM3t!b
.)F4Jj+Jh,N8XI;OY@X]UAT6IZ0!aXJ3XH-C_\-j:`pUc$6Q&5p@HRXcoMt2+Q#u[
OACr.IUC@`5==+khPZ?L4u]`+jH'!eak;:WJF,M'[eB^[62R)/o,ZI:pOh%E6f(!O
k3p4Wm109fA/=[Q#k9/MnUqVHi^E,7:@`<Qo'cAF:H7sl5l@GCoWM$_037bL?M6'4
,`]D#cql/F,U3FC(-pRXTGg56&d6-p#=*)/TK5X%/.*O_)m,?:`*>b7A4D647g*p(
KR?;nKLgcT7)Y6[A=<a6Sk:+*8n"eC,V2:c1dcpY6j,nGKM4f;<2Iem,/Nd4i4&u!
-q(iV"5mbr5^*FJ<!&jh!e@?e@E_Jtj;C5h#A%iS!&b(TW]rbI#=(%4^`3VG)B'd_
p5ED=K+RbFEW?S-)fB=4!V./&#R(e)$fQKr@L=3Nc4s`q#pC!$@Cd-XScaMu(ss6G
:3u*kK'7/G+YcD"O\HQ&<+9iM'uM0li]bWi9a'H7"gD><+9;[cCBj9K7*p,_Y^T$:
?:H2P7\jol,^)\RINVIQ8>M:Qn=iLmTLqVN9$jq<0Y0o=^e=1:,qr@FYg*n9dg][c
%C"_"+DhU-lONFT+AheCYl>7h"q5JZ&E!R$0c(Sa9,Nah+ej]31*Co3\g)d](''R"
+:8At<p=&r;B^>r5Y_;E('q`C*)@VhL([XC(/^nL;C*YfV(P[m2WKJC9uPsb7q,Gn
nkWfm,k<6*!R`2EX:1aU!.\Ag!P7EEnf$I""^hB5!3d7?i8nAY"s=0Oi,B7$P]B(r
+/.O.i;s46$ilr:&co<Di[PHoe.32Ep<R^P;(NlAg(hD^@UK0?Tf=$Q\fW*$&g3PK
_+5Q,W#\01$6U;g!%&))E(hGt(,)p.JfcY/r@elf+0u8-dh+<5(boI@1S?6Si^+]-
75SLT[GgX4i^Y2u0-`51+Hel5&k+(/9P@u=@0Ms*AJAi6>#Id;;T1=g76"5b5pkal
+B!;\np2T;JKdEh-ut4onri4bRjmp'.UfA-ZEGc6[XGHp//#oQP0GQ[6T!7h+k+Xe
P>rh?2'[\X'L>=s+:\Du$FU-J2PuBY7@[NbUfrJR>6VB<KtLO,_H,c==(Q\ZjapTG
MCA(d!!!Q6@#>9+S-_H0"^iNB^a'9G>TEk9)rW7N?j6ZfUGH?d*PlCrJ04ibEYHa*
,-ceTOX2Ul0/e?8?bc^J@7VC?$m't[%cE-P6$i=#"s*em$pZ?D!#>ll<#lSuB^`,?
DmU[pGt6A885Zog[#[d8QV!qZng7F$1Kcko=<-qi4u;@kPAIA\%UkRl=s^%LV64#K
[TfTC5\7q<`QLO.d6UaA.hipgoHQ\E.mi.p6Sp_hZp-r87Nk`*72/`jPl!T9,V_-l
4^nmB!H&7o;?oK\-o:-k1/g+9)FVRf@R_bTd;!U]lsBqg?\TP."pA=q+=FN7!8p`\
+I!1?PR-2r"c[6ti//.UU)F%@"X"'QT\p\#'HlAu(kC*<Ef:V3\0D\o0Q^e;O*2[4
mMUQC"=-YD+RBtSlRS[Y('(cHi.;AflReCS%fkf%5]Cs5$3u,=*#3'.ZQ2XQ;a%P3
>kQQOFk^3PiEfOK?GdXR``5pC=s2?M;a:^hPrp2;;)[Qs=g^e01@/JRU*/SU<JES8
k!<$#;Ccm*<qUN8FaI3_K338S=S7k\FE^m<Td]?(;Kck-_$=Trj(Dgi@8t/ens0k1
=o_qU$Xn6O_@'gpe0)bn-&._"VOhNSW+r2;Ak$JtVJp0;G\>$I7Ue\*<ktjnKG[UD
=u2p:U"U;Jaoam/"2Nn46!6VV!X0_I)@&fTTpQ?u9E61`$c.*&![t(!\dN]g/^YpY
[_6MYFpsKC!.\ktJZgX+p)B\X$/hTmedN\h<Y1p+7)3%>0WlSLo(t<<+87.'[kDeH
%<H_S!#IkA,8;(uA-&$1,U%ATiH'2l*/a$m)UhV/e(%l<8L]s\BXWsr'CSn!F_U!.
C'LIV[]!s7Y!nY^CR2JGi_a>3#A7K*3O[$inrXRG>A[EoD:[Z`<p=MH/T3QADmoWj
W4dD`Dgl/:*TA\XTo9Pi5QDp/%fo-7_-@_+9G7F$$6VatJ4pG]MW\UPE(:1Q`t35\
(idS>.u%k\V_3$<2KPc[F=0Q+`mejf!-KXLDMILr#4uhtMBm?V+eeBFJUS3(O"fKS
%"U/KQiIl;=qq&n%\S+KJ-#lT!ZFA[)8Q>'d/XKH#SnSR)kjbZJQr`dPY*&,#/Lih
G4$RCC>tr0'7ajf:UV<1TFudH!h]SrTUHMpYl(3[)'JJT^pY!oIXGS:&tj.'J3".U
MUNa^*?drYA4cutqgCdENO[l+39D?7pPucOjLFlDK*rLt4^+UN+bDS$(\@]Oq1%#t
J63,.fF`[:(iUi,E2O1c-Pg^"*c`VUK*O)O7lYS15]g,6+GW[E7bhku8p-LtFneu_
\*PB-?\UOQD7FG<(]fD:H\_BKLj4i6i!G6"Q\i5EME%J#Gccl*9p3D/++_iW!?;S7
mLs$$E"H0Aq88_Jb>KN/S(YWJ=ibkikX'QH,*M^5^hVqc\jX=V"TY&(!Gia=d!:D;
0%orE8#UaSY^8mMH7-FS+qB!UH?\P(H7.3f)<<'q=s8$W%:D8jjurfr8dW<D(no_j
@J1\WF:]R^"2qis?oA;KrYK"j?K*,d@g:=(^)19P%mY;/i!]cSQjb+i%RB.d!6ts[
Q3Y3O$/jSO_1Wg@/lEjW';3PQ5R[[dGRm)8)*u_e_>#%eU(ng7#$"t4J@H3ME:uU*
*hgFfJPZlmK,FXl"[LKL@<n-$3ZXZiWqs'&HFp6G4fhi/XMt4A)V(sX,+WO7(bBKk
O4Y]1n"2X,T=Oup3X0l-T;2^hHDdom-b#cF+-INfI+g&u-]Ol=fH])7,W\#^qEYNN
8#3^k+Bh^?H<[6.5GgJSVP6qWK4n+)Lge(M$pf=e]7mbaNL[j;\M9YcH0.Fc%L@X9
\t\89#P*@WqmBlsPlQTOibT^1n/Xg')8VOU6,F[hCa+_=$!Z2uiMXC4%DH:<'-$9N
g[I(;=;X-q]'&Oo-jRA96b7WE*C?7.>KOP4dChkN^O,f9XTfS-6kmIn*;:'ir$0(+
/&L9t_`TBbgS;\2B9J1dUO5MKr(tVM8@uN/`B7GFle06m[Dfde`k6+>WY,SB$8i,d
^L2XE!11bLPK8+0^0BeH!ADP</'2:%%@iq**2#0:F2qbqahZTP!J/8gZm0p$1ONjc
3cMbM,U9s41])\Z4M!0#cc^^g+e6t:4ME9b_S#fd,Fln4gt&ckZC9Mmc+Nru!=@+2
_7>1cd!Ys,K#"LT#RbG*G!WNZJ/BO__A?K+2.8f!pZ+2;&("emdc!L@4TEnZ3R6ri
c94VGrD8u38@O"AeNI3gidRP"R!Rdi,$e_1'%@F7n(2@41SMoHi%$W?7FQlgXj^'f
UI!I0QnWrJ4M>1Rgtjh-=t.,H]\McsI9&.Onh]*r/q(4^r,(2`/_X[%g8i9Ji\fI8
2;@.Ogd:&WS\`;DgbPGA.=KFQ*RH#oe2'8G1L9,prVPFu=0*RF(BHu<i@#@*:)BV0
Gt08%_6$(VC*0/3)khp"JMn*Jp^Z7&)"s%C!K#ki&2`cIj<9?0/QRf\hVUW7hgcst
.4F+!<8_3<k+c#=hF92*C$+7TG/<;Y_%6n1=p\U9'qpd0!O`miFq[.1$K-46^k`VD
i[1Aod6V4L?ml!t9`0gNheOUr^3f2p:u];^#XBL8_#,*)8fn)2&HJC4+bc'\A073(
#(R6ei8bb5a6U>Y]q3(,?N>b.kRq94!$D[Ti@Sm*$6A)]'1%&^_J_TQL&lf[$t4_T
6I$;F1s=oSaPSfgikQ!&6k$h$am>bE@R..kmPT3+(Lb;Uj&bjP3&"]Dp#3mZ-I,B&
/-n[aY+XPc[RYIK^_["uV*O__^lAXBU(IEl:VlTATo'R.&e*]g#U#]M_42Qtjr0pa
%KMRp!*BNc$lT'<C4Y"T!BLaajpo2l%=l_6@,qRN*WeU,(:33I@Ia,BM@\U*q*1/_
@K>tH\QF`B;5BjN-(gS9#<M)H9H4dH%JSWV0c>s?j,r!dIR,-:L1H<I1l>-ZPtL/$
flXr:)08Kh'3U:NEB/sh-\L[Ul@D6p;!=-I2'.lOV+Xt`ckSa'J>jWjPe+8/Yp^r"
elCGKI_f0M#%Z"`%A'h/-<F5KMflbmEOf?BQWplS2#+aI0:.Uh\bb]%+,:u#!!Gu,
<]HiD\#W4K==9`-Y*\21Y_a*G`CP0ajtcC.PX46eC7U0O3Lpf+'WDc\!un/.YLi[5
\tUg:8P$:2bA?f[R_rM58Kh'tgHY6(*1g4bREao9nV;//TFV5=e#QH1i9",T#0KR+
<W5?qZMH_M)4R(0)"u@TKF./FkP>(*s.?<*Su7*2MPdDgYVM$B/W`(1TY3oZ(q`-a
oH=Q.Yd?%l6RkZ[%L6tC,7kbj&_@X;OYeo$T;R7)6jOoK!!!0)OaqX6a/PXpL>e6b
AY,gqn8=JBa?U7CV'3XoTBDo03!8)0>VlqcnQ9`P-c)TCKYSEi3leM9!ZD08Bgcp^
-i)P$ML^3e*g=VfpuY'Ye9N-,&ep0I8I34e21pEM?o="`M1Tn2E3%tVd3HmP7T$O8
+%T9dPp]1%['_P\;`*#Z7#dj^5>BWb'h:uNeM%G3#;oL_<`QPM?W^>dQ"O9$[C'pX
=#JNP?<=Q-IpcA:'o-&u2DeeA<0X0G*ndu%T4hCdQ)@?0f!)2k>*d^JDHjKm4pP#p
ouD)V<j5;7$F_V=G$VS"hfrHdQ03I"\$\U`h]]u5;ukK_H9U75mKS$rW6P`s`<jBE
DA`ZX&rn'3EIp4ShuEs"P(r5N>)L+o,Tr*,f\eIk_PksT([!X"+.?^?9c+!X!FBim
#JmE,Kg6b?2OMOAaAIc/OA%d)fRbf+*5sV!#(U-E+DrCp7QliD=XHk-AQ(>OBFgdb
!!\5>!K)*Jd'N^<m5nA#[V`X"hmdPcQKPhs]=.1@D`cPE^2LX9bJ4Cr(C.fr]JgA>
EBI;=`c8Y8+38IbQRBpr]XKQ<F$/&5bR&[jrQoXL(Iunq]f/a:FZif-eoeZM?eBNb
QY5#q]shq8G<OQ%erJSZp)F+I&=)5e?87`+7+6mQ'B)N6l=U_t0nOWpkMa?QL0uu/
4;`eil4<rhBbG&!XTCh;RtQ<&!<E6.1lER`af\&9^aM#qQtM9&;[=LJ)h0*VN/uB9
/q[gf!,0;:%70K)##jH-:Qb64J[QeSJ-#bF1fOs.bk%M"++t2[&OJHK$"5Y<Kb1*r
6F^/+@<=/Vir0fKnM:VDUc0<UjF9P,?qL[fjqIh)(C&iOogn<=(r=!$!\i%VLKMq7
^m"hM:qA3=3<((1QsW3XJ3"?or>^E:*rqBR(WG0!MZ\&m"#(&cK)i+miri]pJ6W*T
aCZ8c#^Qq74rsg!C'HpS&-i5\1PRmG*O.p[77aM#ilkU?0m+->5s,YX5SOTXk]aqt
3@AA0T9KtC;+`i?.:k?6PnKro6:(8pATXst_ouSFOI-\JTN;P1fLC`1>V&<ORh*>O
,)&;o0p/HE)e*%sJFm4P!@TZ,TaWZ46'U%naQaLk/-c1eW\%c7)'/k7.a5[\'SK;l
*$`-:!tY_<!,s7i!A$/:@AknJYT\m40L#nqX?@mub*db]B2&]/2(#R-RfP!UKh8r_
K09_ce4*OUJ_rm`2&CrjY)Ndg3CN*(+".h&GL:BR;5hjBUOoM-(3(!\7V+6LAVPtp
H6PGMM&W:c-C9\6Dbk*?5H"b`I?*j?43VC:*eTPg$rMO/`c0fV:FqNeZ.q5A35QP#
E-PA,>!9nSd2CtpH8]N"3!O?D)T/iOO7E!,L<.`B<H*oI9!),EN%I?7R\5mdhL&a'
;@j".5?GH'9P`lN.(02n=Ak66Mf"D$e`NN,lQKhU[?n38AH(741em<snq@i.!nl="
$nV5WYVqNiP7&gSac2ggf!a174)&PK[C77:K&$pkH#<pW2%0-_'T.6n.BYPB\I9tG
>U#)G"[0j>f-HRd4/h]S<RN-nkV-5WgJBMqK=]ZDnQn<!H#GS']bdR=?G"m;DftN_
(WQ8X46_03[J.EPk5AZ!q1!>Us1fHV!FS"rJT*LP_%MhCi3CU\Db0*/$_A&gN$ojR
[L'aZ5]gEYMhM:'((f*%/)i:%M/Qu6"Safpe-ne]nL1la(rkf>J]K]<Gg=>Hk8e'F
GVhnNh]LnNGDorM*Q4&_*a$Q\>78\im0X!#Gq/l*ie_?SNU!rRV^>>iZ]qcgV&j+P
1Tb&\*s@t%'EWq\L?:#e!4Z#@,'Zq@i@H+h!&+KU%[@Wgj>7#/M%h14IqAC^QL?/"
K\9Qr?el8iZrQG8\"?#c]d'9D[>Z/:+@_1'NKQiZlkMef"G2112.1,9IUZhNMd7ta
7/jA2]#OC.&aQL9r$f5/LK<;lBs!7N\To!q>3muYZ#=6_es->GMd;3!p"n$!U\'"$
dP7[X&i%nIS;hA63^6-Uo,`jr[LZ6n4k)CIgq-C3%oM+DpG"*=UYp?VOkMs6QI+M.
kC%9^q7h.Is$6Hc;=0N150#q+&n,Sjbi%P;FbnffiUe;pO;\T3OL#OM=;M!'!WW33
-4M0GC^]b9&j[oXSY-Z3LCo"jaO'f(6Gu'B0[LiXi+`O*F:87ji[ibi!9bF.Tl`JT
d<[_Mi*0\i&eXmt`1SgbTR2EgiVksZ(hWpn!"K262DU%qq_nRa++S;3#_M9&(djg@
[#n'@J65;VUU*o/_($#tLi4,l$QtIl<"]Tn'+;(;UQZ%//+5m/Vf8GOpqI^)mjEpg
"W,1'gX\8F[5GXh(08oq/2fW2Nq<n#V!:^@84Pq>#65jFE8iQ77U+dNi7Lg8AIL`A
@!Df>*#XTq`DhW*MYBG>E$kn=,Jem6"!KccLQ@fD"/oo@+QsYpE3^k2p>Y]iK1XoO
)[S?Nfsr2HTRH^dV/J$AU]6hQI^hc/p`Ue$,)dN<Y,CST@!;`;a4^>eTH=1Zh*'bs
#Jl`-0EZl^8d>)N'As=M-lI]JE4<IQ$$5_kPOTe0nj&Al5d6co_XkN?n\ClU_#+VW
+Uc&+dYS)$^RNcbTR+Abr4S<J(d%`3qq\sLN5-<t^bc03Y\AasQiKr.KeRR,\9iu*
@Kq@+5`?>2r"-UKROgc=_!EC!lj\fi.Bb97Y/D\6>V/:<09>%5KchDGkRrO3BGrjk
]fX_on2Q.j(;4r(4bujmWIoqPs#n_&5_L*]PT9dT8I"_HLT"bdYS!"J#D*LQ"mBq2
\uGs28qUeCL,6M1!/u[99:f&RSlA@<!YhW7cbuj/`8""C1f('5os%G+Y?Xgjb+HXG
=[`a$O4\c6#_I^!(D2/u!DkV+fNnclGTc=)"s?KhL^AS7#(t!!#)HrHJ39T7!!&Z?
KU?2'3-YYs>(c;b!'gMaQm`)f?jAB2#5DDU&0CmK!!%6gKLfF).*rQ&A-=;(!0Le-
5QlX_2[-377?i5@jF5/AJ&hbCO6D%mn7W"C?j8l5LNDfQ'Sa\NLWG.)aHVP&TSs"a
MhdOUY=Nr[i'k`X'SZaPL%LMKWgLlcH-#JDMDUEL"HeE/p'!"7L<Q'hA;c+ON3r/J
8Vg9dQu'kqT?73N6K6ceZ4FgjTVXK>M2\45*%rp<TqtG\8joZ$Ta",@gIb?+8n=ru
"K[H-XffUA/bH*?4L%N>ZcbVK&F^]q9X_,qF\@6*99L!BS@Xg_8BXV(97V.XO<"Zb
\qHTcY@<YdEqW.2[YIJJ9I,cobf7kKa394Xb`p5nUrpogbKRoKbgan]jNc!AcclU>
bnSRC!RCgM&dMV4Tu_Bu+=/1%:/-759pF'L*7`;IUJ6869or(&?ocL$@EnrJ9f1?L
"Q'<Oi!(1T:/oK],Rm(lcpEpE:0J3$n<ZcLkt<edc>$8&bj!FFT[)9C:8n[t]^LqE
nVLfIY!h][XRN&+p.mO?aG<"*TQj8<oS8D'K@Kjn86\m]A^?JJ:WRe,fKBQurroe1
03CnE?tmu.p.q>Eca#AVm03^4#6p_!d+&TPjUTZ1&((Old1m8@,neT_'@?CQU"FiJ
9bl"n'T:=c(e#,Lbnj0sUJ[!gY?8Lt#^sd'nki:+.K(;bocMSX,JOBU/M-N*`:["n
Zr1:s;KCPgK%\RM:suHndaNWm]IM3Q^Wr)rMo@*$9e!3X/?N21V#<,K'fNG42([!-
&?R`eE2D$FO]/".dpga(JkjeN3n+6L"l2JlMY,;U6&"#,L=J`7m6HT#6dusJ<*4!:
CA"a:`%P[i<%=Ni]XLj_:XoVFeJ1s3,uW8N;q4<9eQ#Vj!*E6D*A9F+<H)%`8fNM]
$rp]3eWj2C2-X(tonF2hO';5,SQI?.@"oD)e]h[0"[9$$4-5.YemObDJ<3fpg!ffB
<cT84c"Yc"kuQN\eu8i(]l/`2EJX:.X^,hG`GhN!G#pPGXeg4mATSJ@F]XZaf<C9:
_U;M;b?(DRfDU*L,0\#@p=MD>;-8;"AV,dSKSgLufP:*3@"-L,p/lp==KRM6FcP,I
O4a\ufbKY&-'Hq=PM&?[",3#>'(jP<2q`cseX0FkV3HfOQe@1hfq"S8=@cTas0$"!
K8#VjrLX4HTNS[ufDq(rHLob@r`AK=g3AT\MTo6AaB/cb>.pb9iYYkA^"SkP>-32,
#`Mt+bZ``;gA2Og9s35k'`teQc!'bBiH1ba;-Uh4>Lg3=h7AofUKbN2>L62CK_bm9
_lmX]K!i.gr<V1<A)$+dgm-":V97T$bM:(\gss[)jj)ZSceScOSo>NP,7Q;"_uY;9
Th%Z/A<blGe6PnFh-`_.EqP%WgP+25Y@Z,_L!qLLgOf+RL"4RW+qe*`TN`i?gHBf<
:$&Ia[]A6ETge0O/aA7Bkpc;dO)=&\rT;Q:/.1>BY>sp42<nMUo8<TA?WA.#9cdY<
9-Hi8hj+#mV>"=nUL0Sg03D:_i,2omp0W7A.K05LFoM[-oO(,ki)U$>Ad71:#N1=B
i0$ljXpWT,o[5?!L8krle_aVt%,e(Z@-\(O@qO,7p#+C/WW!Q.^'Wb;\mHYNhU(t&
j_nJre?Z^Wh[7E]*Mt@8f\t['iXiWYMSi?h-fN%e@CjFbL*3[+,,$%K@NHtSmO0Lg
)376*et+1i;Y4F]T45);ir1E;+Ff-[1Z;7'dOm>1\eN@W9O+/Hj#EfDI8;Lq:.`=r
@qIQsmQ=%k1?8X)j;(&B-:6cO6f^^)c\P3SA<Yna^'(<(Th&X'VFoaK87[gVjK;-/
=B8u+"#"7U"Kk6Dr_E]0:h3U+M-_m7p+-UN/QQI9@EpN8FrlPfVQ&u<j]2QH@Ys2c
^L`+1jc]=Kd[9.]%q[G"i'8.AAe-OO`*MKTh.3!\I(&0sfk-b4Y@?FArS]DAAc[p)
.DB\3p17kpF6?#7k>l`gAp3?\GNX^*kE^DOBlr->o<."$B@7KJ%Y!1Rb%K"JMCs@3
%Y(Zf#_k6jY@`,)b+NE;KkI8NAi`rRpq12J>im(SMd>j.efQH7>3Lu5kaGLbW4V9,
<bTbIB\jeDmT\ZL>j2HSj;9mkV4oV+$(&^mTh&;Mj]UB9S/98AC#E+Xo(C29BPKm-
BqRJ#ZC^>FV!42DlB\F7VQ/piX6R^+iHrHqDQY-?MV-1plL:KH5We9dHg=/.Phr_K
\8,l#p1kS=;D!oDefe`G<9YgCBg#JQ8G[jk^RaN&lk-di#X3&[p1q2JAkoqk:;itm
]Sir+eQ0D@kb#%\$Z*i#"6RO8nt58T``Z'W8kpVVN[3DOaq(r(0369s[`rXNQY?A`
m04AbARdABKFh#q@+AIdVVGkCT`\?RK1=h'AA77_okg[\.K&6;IbF.4kHC2n@KtM'
L?e38cu,/:DPlafj=1>Yn'p(_d>m[LaqVt`cJ5;emeEOZB(kWu2,#_8BHm.g-Le"u
AFINXDXI(5&lS(H\o,bkm6LQPB%CgB-g^9cmEY[g:B%(:s,3KLeMdNr;Y9H:_sg.J
D"a7cAa=;U;=K+HE0X>jT_rW?bj`VV<`\U,?OksUS84kj;-lAY72YL$^2]`/MC-SE
.eWp>+5*;gY@e\M&t_%Y5&kclnl!JI)N\e8-1Zg>gqP2N:C_E3/%=%1d%(#0a[T(m
rro;Sgnb&Bn=kNl1P3Y(Y@&.;AABj2/PisMKYKOts"%FT&#C'RMiT>f(D?3j'PuY8
nQRVd[l[j@4=(M$$\poG%mP%tf'uM$oGX+fIm[4D-M57901=?K;A=fQ:P@V%go!mS
fV8Ll;tTAJJJV=jo(I1@-M5`Y"/f;_k=]s,>GU^W-&5+ca'SH3Dt9QIL@A`.ge%m)
Y6J*5"ZT7a:eh0J>6\JU#G?;GaCPS^]a%)E#(msO^h8D+EsJa[#C(+jM]N(IC'PBV
MZ7"*s*"-Z<,ib(#:NIO8.Yh^;$SWuM"#kKQtZ]U0nK*?JtP8\!+(D1CkgSUL$2;7
THO<N!.Yn)4l^I9&7^C?.KHFb!,*R0E+"FkUG<+%LBq%8(_2(8(BXq6KtqF.6Z!3,
6MGtsYN]'IK(I1=i#tW_H.AZpVjj%*UN-&SJj5re$(HT-(WFH6KTW3i5hlLp-%M?g
Jk/Y/Ll[=iBET_)J]L0N@#Tk#:k?G"!FS>#_R5B5DhUG9K1JXiO(/PX;ZQCWY@j;6
ZC[Qd17/nbq3B(o7'>o%7,Im`oPgnCYW)[a.0A-:39V%Z!,6^uLke5rN?A3$kVtqS
P_WpYKHNd>>="&B'bPs3KP54Y\h&Q65QcO.L0S*oQOEEr'kPEPDVr.^J%h`Y714TN
<<'dlY^V?e<J&jKKMZB;kYM<d"$4df"ujj6fRAT@;h?+oa$;,.]-%DFIKuWl'K=A=
#LNa[E!;Un")(/Y/!gX9f56"/[&9:>V3Kf-;D1.rh40QuA<>TEq-@C'0%Jke^jLmX
8;I:#XJBl$+0MGc6lZ15QPU/+r'ht3HEp:3n,NGTG@j"tEVT`l,3_sb@j.!q*)%\7
Xkf&k'ZO]?RRfn(FM-aO4.]5\e+s4PKg/&S??CK6-C%6$9bd6nbsn1$W`<faH<]pf
^dfB)l*br]@8*e)/(P(C:<QqHfPG\gKuW4q\m94*Hc>.?HbNj*fDGgX"bX[#E7fP-
-P^_g@o(bSZdFeW+rZfO#b/YX@LE/:AAqKAh\!sL_m,=1fp;<-8L2(Oq-:Kc!rr>]
A*X<QUVIO%b:WuPKu;niGhda8rRe.p!Fm9_')godjn!cr*hQB!c2_rI>b;7V`T-N7
I,9?CVq(,,H[XcI`\ddX5@#Dt!nb/;A3-;HchQ]Y#68-3!f)HV^j[J?l,ZVT5SH7,
Q3V2/P+s17)JgDu#l#=HTJ1%BQj7.9hRDn\i=s7.>ZgThVX\b*'ZM<AIB&EW@i<:d
XDo+IOgJ=8aAO"7,.NC"OFBc!1W(L\P!Qc*S[+cb-;)_!XX?^J_!Nb7ZMN^3S#!Qc
.21'#7!ooK-s2F^`(@%XU1`H%:C'3F!!eB-C!tib-cseS*='G,f0\P4[i6EeBnS[)
e%c;.O!XEh^Bg(7<D:RH"JI2AC8oHSSs:<\;Uj5[;,l(G>8.Lra":_#0_Gar$s(e,
jSDnWh0E/Q26\d9#Sn8*@]i8#nfJ6NJ_6B_B(7>i_>rfT@\.9/mV3?N#SmCAih8JM
[>>L\DAD5`3+X,r*#MD)W5qq*Re)[g7@6I#B'0/fGiDnsdK8tI?pj&_?Eht!1KYX,
14%gaNWE^G@T]3NMW3:#`IqZ%_Y%)7'uM$4A!nB/T4?E_Y@35&."&(fLLHEBN58=!
#)@iY:1YG*![N48`edSS##=(V&dsA<E,\X0M>DFaKXef8!^K"')2Y*gei4,V35RA/
KL'Kr;+I=o@?e[NF9J?tf[<EZ#/\<-Sqbp%2?[^=n-K=e+VIcmkA3c$i'=^V5%L_>
2-BA3NZEpqI"*<\nm%b(`8Q*<XcqBm-$,2i*<%>1=B6`,o,ia=^1`n1q0ZV=k5j\[
]f[AEcmnt&+i_JA[s?j)h>`#BRGJhSiqOuFMLB_]FGb*ahLCUMb8sHFX:ARHiU$D5
*`Q'bhV*\Fq)j8'Cn:Sj_=[\5?eP/OhgaV[]U\<Rq'J8U,Pusthtd9Oci*o0(^0oi
47n&!iW;B4'a!<(%=o^L#S1#_s59"3Jc^3AN2SQg@,qfM`Qeh,Ej-Ei+Cg)O#TCRB
2[\IW(P8eT>!in:%,h%@L="cq]8-=JSDtcAYi6c>R!;W!;_3God=T.NFQ24H6&EuQ
-pHj\rur@JJC-h;'1f-'+tKL?&L#%[V-`/U@OHX[Ai)uEeDpWuD&i)Zs,Mor$0.aK
&J<eca-bI"a8Bru&^V2VKe<r='SV'&C.&=&'`b"B.#m8Xa9@DG/``^TP1!Z18XVF_
jP_hNn,arYfgR=N,c-aRSlA=Fo-`GnTp8Ni=A'NC/EN\8LD$ll9'L1FjlF+AaTsOn
'WV1gFN"Wo*?r2U9IXRa^R13'A/0']1r>4%J4-IP#g'ISV?gLqDCe(K(cX9_FQK%@
`[S[4[Yn_8kC)s'VT%+j!+Q-5SLfq0:?hF8jM^eAe%ldEg%bEB!DB"]*J).r!C)t4
q4MgnLd^a]7-5ocJ+&nOL5IgM7:dJSFFK%[atZA<6!+KDS17F(":AjNO/:21M2%HK
j9/I?)787^e!X\0`phE%FSod2&ZRdF8G,d.lD.CGq`pe0%]NGlW)XIZ5=_*s(4jC:
OcV736o^VK+tu'3&6oK,^hab'M4P\1qE0M*XV=+oEn6\U>jJ*(WK6>B='G9'l?[Oc
+P6bsYgP6A\Iou5X;$1-/f=j&KfET/E=0M<(PFKc*gQ<?=d'.thmIa9<drCgn^o?Y
=:PBu>[*<nju7sT0E<4L.#U_u%7'<g<fd5MJ]i.tB*a)#2ZD(6)foo>\3[X?ro?<e
064ttc%&jE%bl1K'CMYN(7,6l5dB6#!oOdoJJ_?6ep9@\Y\=5*'Fk=%E,Nblp`'@n
8Y7^1)1jh.$6gU(SWjmO`e^Q)@DFjX@."tcpf\2[giPV.h0^l@oY/r8Yn&"^01?_1
$pc-]Ki'6Ua.VN1!\cQe^m5Kt#]COA@![e5$k\&@7hDFUEKMdgHpdSu^:2tsO-.R>
"[IqS+[@0'Yl$6]JEI_7pa-)nW[J)ME\DMhps;u=B.h@Ab!dY0cUnifBO#%fnWemA
]W7FCUW].2>qN,+8nl)68.G[q4pO?q'LCY/"p#u1$B_beLm[iR@Rr$QnGFq08GjPS
?poUN%_Pl2&K`6>;$Glm&OZ?/*CqT*N8X75_"$&$RK#P94U[tU:5`FOd<:.M$?qC>
pDj?H?&,(R7R6H_)$AEUMt$-B^n<t-_k`+Om/`le-AKnd.n20Xgap<m%fq5$:5_sp
*Wqd3"Meh&$L>W</m&o-)h&[m*Q>P_-KX%;T6+tAe[kKemG6O3G>9h@]_@0RhV6q4
#6"05\*!JCg])eC*X0@S-O&G`+,"U)&%oBL#6t)iQ3*2(`;$5FinRn"ELo&-pu`[X
gjbE+*_"/cD^>j_T7q<W<Qb(:($41tA9,t,bkG(j#Z.Tso1jGRq<'p(h#F$h*ehu;
-KH%m*("b/S'p(4cjQC.$bfV)4pI[3"TTMX#aOOaK,>F++Ri,9(M#phW6Z"4g_g?\
<^4X?h%YEN&-:^h.0fo4*ofdX"&Llg"R\uMA'f-&Z)0R;hdu0QVmZ6ThqWRNFWs2[
=G7;/"@AK_U;T`QNI;Fj65Zb+U\unS;$&6E(P_;tW7H3riS;&>5TYOl21`OU$j0U\
&gIOGR#Uk[Y(.VghZ)M]+,04`-cPl<+67gAQ1Foec1uQNH%Ab^o_tc=q91"8I;cOe
ro`,7hgb-E+3"$T-ft8U6[AYr*W!P^m/VXNpjXCIr;W\frnlW2J"QE5s6'@\ci3m9
!r=Rp!0@Qgca`g)HN<OO!KW7[?oJ,u)Zih`!g"o6cn>J41BUH4"-8b1!&Wc0)K-0V
,:O<;l7bc)Se@]0!<Z6e@K%<VJde;/!?cIt,g[`Dg_QQa!h^gWT_8iq`!X;[%7)*Q
jo-Gig_R]0!l-Q!iHR-[B*V7Y#Jf4&&;:CON<o\B(I5D1J/AQc:,G:&*T:fA?lT.l
0H4Hk*PmOE@4iEbV[@Bi#Om?OE/P"aGTPh:&#uo9TRIFQMHt&?&<R>3d16fqBH",k
P!H6[!'Lr$\eFT\ga,Q7U!=@FL&lfYe&!@O@>#'I2?<es'(5\M+d<J05QIH\&L!Yb
V<D0H:]pb,#%94P6=q:DAJK2h(#ip3+Nad/&-kK[(?.S#Tp?2(63(C]%fqJ(5suAP
LA*ED'esnId9n4cp)@E["onc,TUHSrcD^7H*0JDadE`g=4rdGNblj,0U&#cQ<XF9r
!J$CLY<F.=kSSiu"(2H?!>NqTrZ:$m&&:d;+=[bmAD:Pd*5R"9+YjlC&g$#'%qb52
i4p,%e1KYE)^/Gu_'g-$dN4PX+OUiF6H:74*?kn),(Ygc+?TXs>S,kI(dX*#Og+HY
\e5!L!+6oT@-A7IOM-5j+E@i4ne30e)^4br8O:E2^j#k[-jtTJ[W0bGd]Y/6ZR\la
(4dY;`pNg,#R1:g'S2E[EUrf'2?3^i#6<To@=B1^j;VM[#iHaK+<Uf[@KrK[$t1Pi
6J`dbYS*Uj!Wk+Xi(+%pC^7bK%`)6d`g._*o.G(L0(STeEr.NPQlP'O#=&In!(mZ.
//VgBahc=<5^3?\C_2/bZ-P-[EpNc=nLmf90@9tGiRATmPQAQD$@utBZF;e,K/ceb
3/kp#@GDe&NYk'H)hHr6@R-rE^):@2(kJ>"60T@u,<5:Y3HLZMk*R3@^o/Et*qQ]0
!Rr$]Y&FGV4*-ZIPFX\>j$$E)5*P:re*fL7o061J5Ekt/e,MZI"$ffj5a2XAe.4hZ
'1#S66'N<Se/q!k,=5?W6Biuee/iKna;UbDVt<&<e3"Wm\@-"<(r71%i?Z/p01AiA
7?h"F_poFYc6Zko%tQ&@Tg0;8/e,Tk,9STGTb8$T65.0d&7E9X!&+[e<$Gc3)?Dr4
+[R**01GN28sHAKe?1GJjr"1<&V5nU66[G$<!X.""T\lIZQV(IXqMrO(::>@eDF"8
j%_pm+/0/h1rE!p!DKlH3Y^pH@IbIJkcR5H*hhOTWsg%l$r>CZ*PpW0ibBR/n/^K9
*Na<VFY?Z.1K.2\:DCoEeBfH!p)O0g&n&-O1@Pc>P(H-H&"n^\+;tIc,Sjf*$G]mJ
J-#]N"9cNg(4i\+i<0H08cg+@5bM-f+atHLGd7?Z&"poO!:CAJe-KGC!s!3K+_M1*
2d9:k>Eue'<BEuV4sj_5)rW1L+:85$;I!Ym(gtVk+92Lo^_:.@*J*q3i@kMp%KIV>
$_\a]6-^Pqp`.+D[%J0?na<Wt\.YHj"sDd,L6ru)<!`cY!arSUE2-Xg1LjHE@uEcL
<BX-0B/IDC!;4f@9nF7&;E!Jr*5^PRiKt,U6ic.W'-Y;515Z4CAeN&/+(;Yki*ZPX
1'umq5N)#@T[F/iF9Wk*$R%\Qbai7PUM<i-C5DUh'_bQ.68d=e>tongJF3Ou=(S*P
%q,/8Q=jg-!ZqH?&-,B(i*m=M^-PP$%<;4K@4rJ+X)D&5DjL6W2Qp@PB5;Za>[cr6
p;.$b=_5FCCt@!Gb[kXWh/4"hm=D,G+A;b8'F>pV*7LK#iP.FM.rX$0FI,XBa4;7S
8-a9V"JGT0%/;/M7qA`=E4/XI")\dGb@SM^ENs:t+n-CNg&U&=&ja/uZ#U?&^]EAH
&4(U^616elPS0YC&7LPU[nh>eZ[5c^@c?Sl/9h]@K*51p"[LKL@<`^LiE8Io%D\\>
A-u4#?lC2_('*o4+92InU(Umh*9#fp_.jLrF9)F[$3;7d!R)TN^)#Z1#J_$L+H@$`
i(cT7*W_?6TS*AC8M+=V%Dcg+Qaqbd6\JQ2JV!Y=iQ<&>L)9rQ)e%Q;(eKH!@tn)u
L6ub2fPcN^F,*kALR<FDfRJ\oK8<WbLmX*VfT1k+PDND.M3schfUn$<UP`0OMO:H%
fWU2MZ\qqpMjV,7fY<@^_i.^<N0qeIf[#Nodu@J]NL8I[f\_]+j,R7)NgT-mf^Fk<
o8d#JO-og*f`.$N"-?XjOI6K<fQ\?\''B7MOasp'fahSl-l24p5(S?L_=<^,+d5g3
&Rh^&!1f>S+d>5*PaP-^$*`X(;jCKeQ'kjAfjC$_A!U81QC25+iA(C9EWDMN!L\66
\UF`#Jj+a0R$f[E3B*?60HGG)5PR+(fq&2sUBA')R[L4Ffrpk_Z^Y+,S!gmXfs^"X
.f_T%S:CSGH-YE;PFY@QOWh0r$`FBi,G%.8SsaU!5ZaQqf3<f5T8)k6?lb[Y$jKl?
P.<603VB'XbFPeTV847I2)a[WQ9JG&(cdSLqCeT^1S\,4URF9>g-;AO6_mmUUmarP
g/"O`;l*Z!V4(Vbg0^]qA#<FBVOD:tg2El-F/N2cVj_t1g4-%>K;_t/W1&XCg5i3O
P<O_K)*p.i^mYJ#9ETf%"(4Y(@$V7q2ApY#@`7IE!0dT$4phBZ4N#'LTe6VD3WpS*
(2kfRHG-Bu`N4[YXr>3ZE6"q]o<1[j*s&GT^j&WT%L'YX&)eiK!?_n\Xp&<M!8r)6
Trj^DG$4-7,<$9PA(:)n%L#)t!$HS&&b%2Q-3bD>EC0'">=l-spU+4+IaN0G@P@f_
L_M$?,N8D;JO3,i!?$JM.7*eP@I@*'mlTMQ++`o&\"OdgMB8JT*hi1.6/!8dO;FU*
(1D"r+efsVN)"_Z\XT*9>CF!^l*s[E[@9Vc(D7^]nf?\t(u]WRiHuMO_)h^5++']m
>H,3gZ+E=f+.L0\@JV%=`#4,R(?'ES!P:MsA06B`)o7aT_/pM[WZ?ZS)V[-URm"+l
ZlQuo).@t1!I,HtZ\?7`[/8,^gXEi_gV*LE^1EkLgS_WpYIcZW]Xq!!S!6l\l5p\S
38q3WTkkN2MAm.S[@E/r`\&?Ae/;\$'ELfC\3;.rg(lrK"@+jS@>d`EKcU7q$!8/L
T\^O`ZRD,I"B/b:TkgdT*#g%<"oC7`JL2>0n/UD%%R=kh!]*r?7KNR?&@5Kf+S5ee
!!$DE&qRWs64OaGSj7f[%"Wt&r(4o$!!Amc$%Par0Lu3E@LaQ'd%ojMI-])K_ZZM(
c`7GlTMc4Acj)lRK2GYYQoo=2nf-O]$uH`35R7M.OpI^8_YZOE_7C<<X97.s"(7i:
!O4C"9@A5=ddTcU4ZCj%M:;Ci"FZat4S^ju[F.,f-3<l^!H8N6?9,e4#/L"%A/%mL
M@e^/"'N\k!=TgNLWKGWhM*R&JY3RIC,s'\$mBj>*#9LpWZ#1Ki1:>7h?FmL[N-OX
*8sQsK^]+PoGRC3D.*JL#4M\E]a=fd=lCh7[;Z<N)LTAV+-OJF@/q/7#D.Mm&HHo2
THFU#E#o/3&B*9&!)a@oVbI3g*<B*^TE33jZ+QPS,9Rg/+UAo#!:>?O'`bTsTE#1)
,LF:P?(OXgSknGl@HDrBjo/^F*(r14N"I4e1mgrUThGhXSctf%)\rJp+[-0de,hn*
&tttA+m9jG6jnN)D]:die72eB)@9h=)uH-HTrJ_jJUh,T$c.-N5/HI>Om,1%l(4Ci
5,7ClX"@Y]jW7AB*a.URA*_H,gL32a+ikEaf!-G^#Jg`4-C>f>A.'M0!!"b]5pdHa
l6#![*MJ]1+IRj).LUfBpH@j;hi:]&l5JV>$6UrG+?BoS@<8.e*MH^D_eYdQS-4B;
)?K+CTg/kcS-:&A)MJG=4Os]:*X.(s#2gU+@*TU#Xri55'>SrsJ63BDiZEa.)^1.V
6$sdaLQhE2"b49n$r`gP!!45l?'"a7E?mCB!!B+l444K7F"%BFGeq4Xon,it&LR'>
?iU04%]m2tU#`j=KYRV0,6d66IQQ:8A^^DY"G9#a:rm`F<@jIB:=CXb_0/ufJ-)S_
qn:(A*<<kVe6?MU."8_V`)&]!!^0LNB!ZFV(i"J)3$,9TlcllQ>qqgdpZ*(`/!eB@
1H@V<EB9[UkO]Z5(/IJT_dW'T/N<_R.hkBli->nMb^nk\l7rV^$p[Y"B[V[Z@2(9n
!_Fl^<2Y#Thf&90*Z#?D`T(t6*1g4bREao9qAgWD:T;n1Fo*2Nf5J4Ums"[N*uC![
jn!cr*hQN;g$SN\rZ!<O]on6se`-gu$ZY^BEu:a)<<5@(,RXVfV9uAh+/e)79e5-%
?q2/K\\:]@^h@%C(e!;2"p<nBOEmr7#QPO"-CakK*<mZF4:C.^Hl.NeYRHjflY>:K
*(9:F!e:9D\m7![+[.#=l@Phj1Mf$a9q73#%!e4M3&1I86K*06,j3rc(If"$BcBP-
@bf3^a`)#Cas\g=.a%>(c=;jLhuF">V7GI>*p/"J&koRXrd(#DG`J:`i#"3f$:BXq
>FUDC@jWMMFJ+lCd^682+O]U\(WJ2"CGJ^"4#p/g!5Q6M*@r+(HC6">4]BpS3)Dp[
YDmU/=*<VO?WZq)K4.l*-&Z88p-k0V=a"AGB3F[Xno0kH5ZFrf_1:BF*/E:Q_NKJC
"9F8\\WBRA^i2t2)@)\DDuh+1p0X'dE#&EVK@uiCT]^<@1kZ0S()7,Wpu4OO,p@#)
NkmSDUR_QZPQ_$eBV&6BjN)KG!!+MEBO>Wt-3+7gn]`s6oYf]_T==4fJDbZ)%trnd
Ci`LYq'Jg/b*:,UEgYm33WK2tR;G)5-c)TCk-HheH(0NH1d2<,&5EI-!I48L.CmGk
PN=XN(REtZ"pKTdfL?U1@G)27,n\*uqACga^qNsB/W&\%%N5lc*>$2HH,4HI-O*oq
#5U>nEI;C<a)V$4,KXtRV^or2r5UV<F*t7hG*dhlrW!"/=X%Lcmb.;MOeI:,"UBZ6
H3aVJ=c/4]-F"$qh?''kX/6)!Ap>*n\0.<#Ab<Eq*TbYY6\e)\G*AJnR&f6J+dec5
!$D8='Lc.5d?3bJgu#?.rZ@'Yq'f+-k9\u;GEHN!rcsbLa!j@t7)Td;P`DG@',Ru5
++p@sM.$#u"L-6m6l:91@3Q1Yq(N\'E0idZb0Nu7l$1!Lj?0/3qjr/^K$TF?%oJuB
gR>'Yc/=57;*GL`!$;\<,fLWuj>DY$YSX'*FV\%=&7Q>@LliGt7!Oh,@T6!WOZ"RT
o6RITTHY\t#S[HXp)q:!>DnV_6O>J\3$JCMG7Njm!ALr7i;iTi_;rt<E&\emg/8b2
O:.C/F<ZHZ"!<0*BSmA>k_X77'-i?7OC@'#6P(#4@'i<2BZBg@j;90PJLmY&k8e'B
#*1M+#"RnY+FjTJOO)2B8QY929/s![:Da7fi<1h>0_ZVU?rI7R(e^:$r>e5?.0/i;
!eL-')$@7^O+G5#6T?.f!$!,=!QbXYTdQ#FC.uZ]nK+IdTTCUc;@glCcBK"lKj\FF
$V'VM#<8dlD\rM,Yh1H1g6!cC6r*upKY>:(_28p"Io#nA5\Ll7TTg4E:jN^?:,)>Y
J_jY47;2MBP=Z;cSUcC0>XV.CoGF:'%?fX))9*OW,idg!$#lFUeX.3[iS6\Oa,C-f
\?m9PUj<GWg7:fS0bL7Dj3AJ+q4tP)Usu-(.XG5jWIOuG<77F*Q;mF1i91sXg`8Lg
7KL>M<shY.Rh/Hf3!DQW"\F\PJ3ZX@"PD=:'g>Sr,r\\89!kQS^6mA(gKTIb-kJY^
YYJoZK*Pf#&7HcDX$@!u!iV>%1m3Ppq]TKdQ'8M><m+Wm0kP7Lm2k;XBoG?*0EtA/
*U@h,(f;Wi5Ti$!UNY*-><?Kb%AU;.G^b]nbV]SY_AP7p6_"2R4\$pKZi^#3%2$Zf
:<g&N(5gODo<^^eR,JqC$snk>Lbu8--aS#?mp5h,G]+>W]U+rU??Lc_8!(e&@%[LM
^m6G4($NAuf)&g$nU>E,qnJKks'KMY*._c6,3IZ&#f3CZ0E)?qQo>7Xr#p`4Q4q-&
<9+R@a>&C)Wtp=9EkVr6LiF1T`0cl)@XM%1EE4U/R(!l@r*bP(Q8?OJf,J4IEK5%i
43*`_+(P5"OE)+(aI*hh/:mp~>

n
Q
Q
q
8.33333 0.0 0.0 8.33333 0.0 0.0 cm
Q
Q
Q
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF
