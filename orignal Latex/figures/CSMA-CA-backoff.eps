%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Microsoft Word - CSMA-CA-backoff.doc)
%%Version: 1 4
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 17:48:10 01/20/16
%%For: (Dung.Ho)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%ADO_ContainsXMP: MainFirst
%%BoundingBox: 96 520 522 719
%%HiResBoundingBox: 96.0 519.5 521.5 719.0
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%+ procset (Adobe Acrobat - general image support) 1.2 0
%%+ procset (Adobe Acrobat - monochrome image support) 1.2 0
%%+ procset (Adobe Acrobat - color image support) 1.2 0
%%+ procset (Adobe Acrobat - indexed color image support) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W1 vm op crd OS scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt  0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
%%BeginResource: file Pscript_CFF PSVER
userdict /ct_CffDict 6 dict put     
ct_CffDict begin                    
/F0Subr     
{
    systemdict /internaldict known 
   {
      1183615869 systemdict /internaldict get exec 
       /FlxProc known {save true} {false} ifelse
    } 
   {
      userdict /internaldict known not 
        { 
          userdict /internaldict 
          {
               count 0 eq 
             {/internaldict errordict /invalidaccess get exec} if 
             dup type /integertype ne 
             {/internaldict errordict /invalidaccess get exec} if 
             dup 1183615869 eq
             {pop 0} 
             {/internaldict errordict /invalidaccess get exec} 
             ifelse 
          } 
          dup 14 get 1 25 dict put 
          bind executeonly put 
       } if 
       1183615869 userdict /internaldict get exec 
       /FlxProc known {save true} {false} ifelse
    } ifelse
    [ 
       systemdict /internaldict known not 
       { 100 dict /begin cvx /mtx matrix /def cvx } if 
       systemdict /currentpacking known {currentpacking true setpacking} if 
       { 
          systemdict /internaldict known { 
          1183615869 systemdict /internaldict get exec 
          dup /$FlxDict known not { 
          dup dup length exch maxlength eq 
          { pop userdict dup /$FlxDict known not
          { 100 dict begin /mtx matrix def 
          dup /$FlxDict currentdict put end } if } 
          { 100 dict begin /mtx matrix def 
          dup /$FlxDict currentdict put end } 
          ifelse 
          } if /$FlxDict get begin } if 
          grestore 
          /exdef {exch def} def 
          /dmin exch abs 100 div def 
          /epX exdef /epY exdef 
          /c4y2 exdef /c4x2 exdef /c4y1 exdef /c4x1 exdef /c4y0 exdef /c4x0 exdef 
          /c3y2 exdef /c3x2 exdef /c3y1 exdef /c3x1 exdef /c3y0 exdef /c3x0 exdef 
          /c1y2 exdef /c1x2 exdef /c2x2 c4x2 def /c2y2 c4y2 def 
          /yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def 
          /PickCoords {  
          {c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2} 
          {c3x0 c3y0 c3x1 c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2} 
          ifelse 
          /y5 exdef /x5 exdef /y4 exdef /x4 exdef /y3 exdef /x3 exdef 
          /y2 exdef /x2 exdef /y1 exdef /x1 exdef /y0 exdef /x0 exdef 
          } def 
          mtx currentmatrix pop  
          mtx 0 get abs .00001 lt mtx 3 get abs .00001 lt or 
          {/flipXY -1 def} 
          {mtx 1 get abs .00001 lt mtx 2 get abs .00001 lt or 
          {/flipXY 1 def} 
          {/flipXY 0 def} 
          ifelse } 
          ifelse 
          /erosion 1 def 
          systemdict /internaldict known { 
           1183615869 systemdict /internaldict get exec dup  
          /erosion known 
          {/erosion get /erosion exch def} 
          {pop} 
          ifelse 
          } if 
          yflag 
          {
              flipXY 0 eq c3y2 c4y2 eq or 
             {false PickCoords}
             {
                  /shrink c3y2 c4y2 eq 
                {0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs} ifelse def 
                /yshrink {c4y2 sub shrink mul c4y2 add} def 
                /c1y0 c3y0 yshrink def /c1y1 c3y1 yshrink def 
                /c2y0 c4y0 yshrink def /c2y1 c4y1 yshrink def 
                /c1x0 c3x0 def /c1x1 c3x1 def /c2x0 c4x0 def /c2x1 c4x1 def 
                /dY 0 c3y2 c1y2 sub round 
                dtransform flipXY 1 eq {exch} if pop abs def 
                dY dmin lt PickCoords 
                y2 c1y2 sub abs 0.001 gt {
                   c1x2 c1y2 transform flipXY 1 eq {exch} if  
                   /cx exch def /cy exch def 
                   /dY 0 y2 c1y2 sub round dtransform flipXY 1 eq {exch} 
                   if pop def 
                   dY round dup 0 ne 
                   {/dY exdef } 
                   {pop dY 0 lt {-1}{1} ifelse /dY exdef} 
                   ifelse 
                   /erode PaintType 2 ne erosion 0.5 ge and def  
                   erode {/cy cy 0.5 sub def} if 
                   /ey cy dY add def   
                   /ey ey ceiling ey sub ey floor add def   
                   erode {/ey ey 0.5 add def} if   
                   ey cx flipXY 1 eq {exch} if itransform exch pop  
                   y2 sub /eShift exch def  
                   /y1 y1 eShift add def /y2 y2 eShift add def /y3 y3  
                   eShift add def  
                } if  
             } ifelse  
          } 
          {
              flipXY 0 eq c3x2 c4x2 eq or  
             {false PickCoords }  
             { /shrink c3x2 c4x2 eq  
                {0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs} ifelse def  
                /xshrink {c4x2 sub shrink mul c4x2 add} def  
                /c1x0 c3x0 xshrink def /c1x1 c3x1 xshrink def  
                /c2x0 c4x0 xshrink def /c2x1 c4x1 xshrink def  
                /c1y0 c3y0 def /c1y1 c3y1 def /c2y0 c4y0 def /c2y1 c4y1 def  
                /dX c3x2 c1x2 sub round 0 dtransform  
                flipXY -1 eq {exch} if pop abs def 
                dX dmin lt PickCoords  
                x2 c1x2 sub abs 0.001 gt {  
                   c1x2 c1y2 transform flipXY -1 eq {exch} if  
                   /cy exch def /cx exch def   
                   /dX x2 c1x2 sub round 0 dtransform flipXY -1 eq {exch} if pop def  
                   dX round dup 0 ne  
                   {/dX exdef}  
                   {pop dX 0 lt {-1}{1} ifelse /dX exdef}  
                   ifelse  
                   /erode PaintType 2 ne erosion .5 ge and def 
                   erode {/cx cx .5 sub def} if  
                   /ex cx dX add def  
                   /ex ex ceiling ex sub ex floor add def  
                   erode {/ex ex .5 add def} if  
                   ex cy flipXY -1 eq {exch} if itransform pop  
                   x2 sub /eShift exch def  
                   /x1 x1 eShift add def /x2 x2 eShift add def /x3 x3 eShift add def  
                } if  
             } ifelse  
          } ifelse 
          x2 x5 eq y2 y5 eq or  
          {x5 y5 lineto }  
          {x0 y0 x1 y1 x2 y2 curveto  
          x3 y3 x4 y4 x5 y5 curveto}  
          ifelse  
          epY epX   
       }  
       systemdict /currentpacking known {exch setpacking} if   
       /exec cvx /end cvx 
    ] cvx  
    executeonly 
    exch  
    {pop true exch restore}   
    {   
       systemdict /internaldict known not  
       {1183615869 userdict /internaldict get exec  
       exch /FlxProc exch put true}  
       {1183615869 systemdict /internaldict get exec  
       dup length exch maxlength eq  
       {false}   
       {1183615869 systemdict /internaldict get exec 
       exch /FlxProc exch put true}  
       ifelse}  
       ifelse
    } ifelse  
    {
       systemdict /internaldict known  
       {1183615869 systemdict /internaldict get exec /FlxProc get exec}  
       {1183615869 userdict /internaldict get exec /FlxProc get exec}  
       ifelse   
    } if  
} executeonly def
/F1Subr
{gsave currentpoint newpath moveto} bind def 
/F2Subr
{currentpoint grestore gsave currentpoint newpath moveto} bind  def
/HSSubr 
{
   systemdict /internaldict known not
   {pop 3}
   {1183615869 systemdict /internaldict get exec
    dup /startlock known
    {/startlock get exec}
    {dup /strtlck known
    {/strtlck get exec}
    {pop 3}
    ifelse}
    ifelse}
    ifelse
} bind def
end                                 
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 3688 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-701">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:CreateDate>2016-01-20T17:48:10-05:00</xap:CreateDate>
         <xap:ModifyDate>2016-01-20T17:48:10-05:00</xap:ModifyDate>
         <xap:MetadataDate>2016-01-20T17:48:10-05:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:6F1A22F536BEE51181DCB7CA0E52C5A2</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:6F1A22F536BEE51181DCB7CA0E52C5A2</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:documentName>2ee9ac34-c223-11e5-0000-689b6c70f8af</stRef:documentName>
            <stRef:documentID>2ee9ac34-c223-11e5-0000-689b6c70f8af</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Microsoft Word - CSMA-CA-backoff.doc</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>Dung.Ho</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:format>application/eps</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
96.0 519.5 425.5 199.5 rectclip
%%BeginResource: font GZLAAA+Times-Roman
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /GZLAAA+Times-Roman def
/FontInfo 6 dict dup begin
/Notice (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development; Cyrillic glyphs added by Valek Filippov (C) 2001-2002; Numero, infinity and Omega made by Dmitry 40in (C) 2001) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
def
/UniqueID 5020931 def
/FontBBox {0 0 0 0} def
end
systemdict begin
dup /Private
11 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 0 450 470 662 682] def
/StdHW [30] def
/StdVW [85] def
/StemSnapH [30 38] def
/StemSnapV [85 103] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs [{ct_CffDict/F0Subr get exec} {ct_CffDict/F1Subr get exec}
{ct_CffDict/F2Subr get exec} {ct_CffDict/HSSubr get exec}] def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/.notdef <1C60D8A8C9B8707C25> |-
/space <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
end
%%EndResource
[/N10/GZLAAA+Times-Roman 1 TZG
q
96.0 519.5 m
521.5 519.5 l
521.5 719.0 l
96.0 719.0 l
h
W
n
q
0.12 0.0 0.0 0.12 0.0 0.0 cm
q
3597.0 0.0 0.0 1659.0 750.0 4341.0 cm
q
n
0.0 0.0 1.0 1.0 re
[/Indexed [/DeviceRGB] 255
<~!!!$!s8TI5[#9j#^qdbPm-JD!BN%i.f@SXIp%<WWHC:1hiSianVl)O83R#^kXf\_Y
g"GEGj6c7$p@e4+cd-`VF\be/`5KTXPERj]2.U6.\[f8ETqSp'[_9AfdaHRkdF$b)
g]5Ou!1a)i?2su.!!%lVVraiCq<WF^HIq`>RGsWmhMZ(!BN*AYbjWckm(i;losEqi
3RBeFp#,na!!#4`:f(!2b0'aP!5s$\X_7_.PQ5hq!82r(j+m^&NW>b\!&br"A39j/
D/E*'!,Y"%8h9ro/M/k=2?68J=uHA#EH-\dKpnI!:G;d;>QAn:!!%0B!4DmLaiOP%
!5ZLfEC9d,:]LK"zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzz~>]
cs 
<<
/ImageType 1
/Width 850
/Height 392
/ImageMatrix [850.0 0.0 0.0 -392.0 0.0 392.0] 
/BitsPerComponent 8
/Decode [0.0 255.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup /LZWDecode filter dup 
] >>
pdf_image J,itR3$]7K#D>EP:q1$o*=mro@So+\<\5,H7Uo<*jE<[.O@Wn[3@'nb-^757;Rp>H
>q_R=AlC^cenm@9:1mM9jS"!dTMT<$3[GQ$8#0$s<4ZX!SPQ1`C/m<k<ioH)<bk^H
j`\=EYZP^B4!g3;B=(iZ<kDqOh/Bf.DHAorf'R[o?>ioWjnAY&^gM+`4$X&PLB%>4
5X5;S%>Xub5bMpQ*!po2iUK/QAih/ualRR<82qh:"p0<?TE%HN+d^E'_)agk]+:jj
CGsgm\.9,Pg2LgM+B/^q$dN7,OAI#8PI%mlog!CaGGPE(ikQQE(=sK,"Te?YhY[d"
X8mi;^tklV#N>4MTR\.KU_jRHpO?,GJ,gdG5Hjntla4H#XQL^E>0R&_&+UM<4)d4g
"YUtu+G7PP>NGFk%9po*J`(TI\H4J-%20m=fFnb(:FZJOJC!"]SjA/`C4s1V9-W[W
%KI%F!!$5RYt!psMM&r(gQ`hgZ35im`<[``d`'!U#nJt4E"i:5J7@IM_XTb+'[!_o
>/WD&#R1IEOdt3oaP[KdK#o,d,_H,J=:>;VWpJb+^2QJ_4#p,(#s?OTlJX1b<+64E
J24L:(Hu5/!?nSO">MX)'SRhKT\r?W/^)Uk9UAQEF9_q:0Js2k!R2Ot<5;AM=9hjM
FUWn'/$0g^+H]T*8\f6Wh+^R>e&ra4(*XDLeFnbh#pAo8$j_Gu)l*[!N_OVI7oC02
#?7_:ZNf!d2,o//Ffi,jcKH"[j'7LM-jimsapJIWW#Oe#^(t_n#/7?h2R;35]mid"
5c(E1?hb'qJcO._%89r-auBb1i5,g0!n_f*OCUT^+q%[mb_#4dp'W8K=/s=bNoTpB
%?b"IbYaWc(A"_cAbh57#_PBrn:C_ondVCfJ=n"o!n[#d"Z87P#>6c/<>;\$RPG-T
Bpr@nL?\:LZ`<"u(^hq"mq+GdUNo**RN`V2&Tk0/mcUjK^n,YciJ\aK!,/r)*N'!5
5,,l4Hn$;XE#XQXRI3a4k_8HKL@D]k>djE\n'(e6`\JNS(W\<N>6D^GrA#,;E]ft)
P60RDD;+M2s"8p*I&fKhp^I#.g\0R?J)0"/s+BG.$[+hq!l3]Cf-%llF67fiMTcS,
*fm5&+W>j:nah1$b_:D:\$!XNi:%u/+EqK`j"oWNe,/f1a4'l?+)g$)!/MbAc<:'/
Q^meVOe6<[Kl`>P+pac;Lh[J9kW/4RpE"toFJ(Mr&9o9"?mHG2N0X"O;BYFrU=KDW
nTC0G3o8>M/KdS=be9cBlPq-U@:08c\sEQa=u+/AW+I*gBMB)[qf6`C[J1:]QpBV5
LO>r/]gT@/6"5*@F"WI&]%=a>TP4O5&&l;uP5aKK!#1B-?3\="\Ip-<(LrP/LdJVK
>?RJ<+mbdZ`cn@L>P)M\c#tFr#5oWRN/8`4OT!099Yt-nOHEF98kE/;-02m)B+3?\
(\ou1fs?iX,Sj7WB#,K6/=Dbk<GNFC>21:Td>1@d6qY"+6D\sZQRllRWd/2Aec`IL
6mc3,$&Z*dlDBp52Hn<bSIAcWJ1n5LBZu^u1;F=7RIb<29fQ]@*1YSSdpd/g\]m.t
7-U7@Y'*Rnh)jeQnX`\)H;@]24kkA?09bWZc6R$_->`I)npVuZ'*gf/'aS;)Uk)@\
B.:nb%\QcrMG[P/7Hh].UJu,k;;+0'a?U==&il.R3,_B]FXV,-61WICU]fq&!06]&
B[=Qg9p(tF7T9GX4">2U.J`k=8+)sIf-O6d[7EBe%/j./NBUtPd[tYODp3u,3DL;a
WU+5n(J;8XC15r!<GcEgQ.Znr*G0aXTsr%O*D$j5C9A;_Z<(5s?0fITY>t#)=5*U[
kIh4r;L3sl=ZWp'FV6o\6*XMo]3!s6<2Oa1X3_]%=DW,JZW:th=kc)Pm002j<fE0l
W1@-$%AnoHTo@Si#A]NGEeDoZdMH+1hJAG8ZE$U&gKKeYATbeS(@G=.MgZ<m'Y:h1
o&<=.NH*-Q[r[lfN84:`F)H]?\qU.J(d"g-/a]26GE26#>KqH^7HqKeY4c2Vh0\UE
irjmu7T_GE@&tjsYqbO_hn+;aE!??Y=:YI>la)0.[KXKL0*Yh=bCVF%:Vk[Z$=R/j
KQ+mQ_Urc:@*hRRkp7O^L%c02H<!.CD3HqY_\D#+4,`W_nHAT&^Ko:lGN&MQZrk?i
A)&_lEWmE&faf8.4G/d[`^S!Oa!>3L.?a7V*6Hl/HfZ6LK<^roWjpY!.XZ4"1"Du?
q2Y\jQ-a5"Z%:*gG;.l)2@9^L.0O%WK7^=-H%BB+"h0gZ&1mR#_/TP\!097(I0YII
1,d<sHS&^,F.6n#CTj+H3"TofT1Cpp]V*&kK+.N?_2[O(TEddH;@T>hVMQF\8A4/L
!MlJSYch5,!9YlYT6/Y7#!`;/hEYa>JVaF4Q]k)F/'&0A(518Ko2REF*DeNVVUek5
C"J>YXfjXm]V)>+l5Rd6!K\tdHD<[k^g%0<pbE"6P@\Ti?[V=Eq(NWE_lA(]Zts9K
^Qs(ZhMnpf_,fUKqfEG:&8SNV(3%W.[pEsc9="*U<8pj&=qGO.V?eS!fO0XSkNq=r
[m(r73X:<%^g"^b<gh*8:R4cD.RA<i"pVZ3&ag%K](PM9"FBDQF3[X^\VD]s]af/Q
h/5KbcnceLk4.lF%C*Iq9'JUB&bGuFMug.0OLD+&g9.t;X.CP#<m!=0ln+_dG6e10
k>#p18"`CBHdA@GL2``b]/.cI_j`P%kdm[eD:89kg-X,-D6qYD(c:&qKG!jZTm8NP
T'gq)OEZ-qhQYiY`&O=<q8u@_PC5/TgH<nn`N/5S#DU_+YI/*5,C-js!=#+=&adl;
e[)GGkaq3TqQAAOD]Z^p4kDpT:>cIBVJt;Hi.H/G2t&q`cHMnV!du/m/\\.9^)OnX
mje^WGH.OslCWI2NV@'LfBKu>no.hU!9CSfHb;7dom^2nq__qDg,;mG9X!Hl0C8`i
`r?PHeZ\[@ci,RNk4#SY!&+]O$afluLB"6V!@%_'-E(69#!XAP4bRnX_D4Xn5U::f
!RM<0/R0su/2$E-0#/b1iZJ8s5#6\12paNU!!$lQ1bjW."HZ7V0<YX*A43>W,(tJ+
"i^NB#WKXX1WH^$,;N=)?u"^i+@CMWUp`Jh%SLcO#LIr!Y_<K0>]l-c+s7?q!#/oS
Qn^:>0a*.a&>]MAfJ*JS1[mjVK2tB.J4+-M!YG;@nGs1U"V:Z0&?uZUnIZ?f'bPF'
&[<>gnKAN",nTSO'!X#$nM(\32%ssi'<s\6nNdjD720`5'X:@HnPL#U<>BLV'sV$Z
nQ:GUas#-d%1kN(`9@^54Tj'.1r\bb6c:q!$iqSX>bV?T_iQgs0O72h)6o_MnY$jU
V&F?Q)R6C_nZa#f[2X+r)mR'qn\H2"`>im>*3ma.nYQBP$Pnie#uG@:&3'Z_)J]G4
0[Y.K&We,GJ,qBh+@Lbt^]P#*nc@YK=N5*/814VH'd7T8+gN+3nf]24,pI@Y,-idE
ne;;d!.MtE#8/s=&j[cu73lnF,dJ",dPuF@;'aRm-*gf&nmI'"!!`b@-?<TCno6$4
FEXRY-AS9AdW[)pKdJ3)0`X!$!ZD&+-oeJN0n9r<K+'J3lod&#+#3[TEV]Yir`COu
!=*5nK1RU#7$S<k3%rDsCD8DBE@Bfr2:6=Y;/e:CJ4jpZ#;W7]&U[7!JK<g,.r_G2
k'IM8"J2Lr/V5Tdj'Nhe'-4?"1%=0b"$[:$q>_+d8.rQX;@*j)#;^)P!](60"[k'J
X<9mu0dB!bjF7:7eKD(\0Am?mo-R_;)'IA1<`;":o5L/e4N+;:2fCf^:IN`P+>?Sb
VGhLb:f8lDOtX%@/Q8,uib(8\d5jVg3TB9,Z_/_qW'PAt7T6B@F0ReNM*#1i4G*)b
j@MKJ`$LVk/9BMte'q%^j#pjM2i,F3km'/qO@F;C8CN=$1\uiIs#uYR5dUtcoFXAG
'gZT,/4pE/9C1N`aBDKeTsDj-Jo*[1_a?cT5%TdBe1j?J77;5h7'oZVoM@-b]X<d2
[>qtfcGEa[aK>)4-T!e`F1S;G#cY0rZc+=BZu.DDJhAm+BQT-<P^Y*HL+ALS/bG&T
1W&-nOt(RB.o`N#[%8i`U>f.M3>?MCn0DlCZ7PXVb*9Ie1[MO@nALO_Ec_@X<!MZq
hbEQ`9_<*ql8MJei3Ll&:SNhE6L(unrD6sh;MP*!AkiR^9g<)-:4g;V.()c\9hofi
0@PgNE.g?PHV0&->qballENpF^8Z3tX@\T`lmeF`)Mkd$.)70^5V,0"?6WAP/2UEK
DSW]&APc"`<=C<V83fDT,?T)F=LF,jooWB7Q!&6t=ga5;TE/(;4Y8Ms/iA$nBq0qj
d9C8(:P'Nb26&79Y//Y=GP.M3p!I&&eQGnG>#iF[<Q;k_</68S;hn79<B_SV_+N6I
3)mmKb-bP,).%!HDtWL'cMLMAof@6lX;+@.2,@UR'juj=,GnFJiX7V`Q6YGd",tMM
<GF&lJccb#8erI-2?RD^$Y"]S3^\oMj3DFL4U!_:AlNe^(&_\'Bk92%^iig*"<[^i
6S?7f!3hi+6VS!_A0OiK;:KSZ+r15\'hFX4]'oN/YH"#@=sCoM=o\pfj4u.OAcY.8
1t-7c'HA>5S1E1=+_S;E:W=T9@8VX.6D+CE[]sJrZm:=i8-=<(d+8^/9b2i,AtnI$
#qSKQVcq[B^c$Wdj/uCdZt`EQ#=H1DJq%;ghC\'qirTM89]?56bi>jl]YXm;NclO?
WH=2i^fMR%`SNTT'c:HK!VXB8K@Oe5+t.Wc0,G1_VSN*Rs)XnHF93%r9gg+B*kYqd
gC5l[@M&@Z!Hn)e1'W)=A(WtGNu44,,B[lKG77a+>t'>WD>$gr+t\$`o1!E3N&QRc
Mp<GHOPLA-i9ggE:Q!61#37FH!&pU#(+4$DD/'B:7lI2V0IWH7,/,Z/FMJ!-DJJJ)
huuibe'#jU:>LB.r8WhL_0;h-<?Unqj$Mb5KK):A2h'![=sDQ40/YCB64&)/JAM"%
]RX>A(bG3ZQI)cnIn\ecNID)6K7EZ/CFP$S@c^dFnRRJ0I7&^:iX:#5''(\5f<0Ge
fC[uSABk0fLj1m%p`R9f4tC#`N4@,kpsG'\eVp.&#=8ZT_?Gr:gPu!mN]??bGjUPO
nW.qVN^@TBGlS(WH&h[sOI6Q=6J[_@'oa>^MYRXB!qhEP$&V%V#!c#[%/T$;%>*L>
"\qbPfY)EpUNP2l/6NdRpsMR`+-2g#Q'h60H!i"F;2jF\0tCeZq-/oshj/O'#NPcK
iq&-HAA&f?m[$q/YCn%D66JNmiIGAA5\((e6\DlNLuPeG5^WhTH'I63!]bh$q/`&d
E$a2BRos>/!.UMA?(H7_/8?.0^iu8me-IO$Qkntl3TH(OLOM3uJfk/N/Tr9)F.&(<
TC*)>G=dV!opXM;6(i_!=VM,&c^YlnSXJ#nAPfCq+-q0UU=q,h_TZ*>H(l/'Sq&2a
'TB'g8"WHUJ[fECDVEESl\^3^duL,iJ4A3$fp[-dAU-ltj\qq#8X1DAU7+6DqMh&?
;lD^%QF\`Kim4E(LQ'o65[%#X>,A'_)4I"#f?JL!>&:jtM2OClh"l7<q+793Z)O1i
N>a+<qOsl+eY=\'W**c9>2bVGbH!\%Oe=/'oV&I=Fe<n!Jdi*Um<H;4?`+>7f%SCl
g<u?jO==AdXglWF\s'9Y1TsuKUKMgI5^ftBjt)u*Uk!u[3rr_."`_!lVrFha].=1i
<O>s$Y8I#:RN8a36aM*"W]F.cg8hV<agHIt^,X+^%_N&)HaYu7V#+l7gNY$6PIYtJ
\bh%1eH?-8K=2s1]&LbYMdO)B[CE:I[DK\hR:p;=H+ePpO868agY&<qiOPG1Q(mf9
>KFMTN[m3=N5R<^4/&f=h3XQl[_&7c]:$%g+1p;?N;N4]6?<537j!h18J1E,OR6lD
H*UnW^UVP"gd/Y@Dk:+Z^cQ>GH^Vh3n%Th`]n1;06QlYrE$5jk,:6AE&ca;,3%5eT
ZJ5Dt4AE;Z=3%idWS@ru>=l=#gT%ndYWS20]NW"C3!)Xb,4LUM7"GYS&MC;[$8Yj.
7^+YpXTpPd_Qe8IjY(S`Y<j,5^S$"g>_0[/PU0JUQ^g^o=RIa9hk)s-Utce<G3f:c
q657@a7_cR2/j`NcOD')%:BDVUk?k;V>rCi%\k1'>gG/Fc,W/m_n^Dh>k,o67DsJ\
^q><GilATurQ1es`LRC(Ji7b-rZX(3!E.h!_[RZmm5;3?!&F9c=1L)=k:crIH1H_9
[A2CQPpQKZftEs0rLqq.V3\E7#KL]8a(sE0/_aRAgAS_>4hoa"_qVkk,e^,2i.kK!
akU1<h7_LtrO(FojX<:<hS#WhOuM3Fj5,4[f_qKg*Wb1_"lOD?-M=(`@NGN3gCCLK
*bMb&o33]m[4<6Gic0stn9WJ^\`8-!j1[\:r^#U/7HAnhjM"@Lr_Rqa05d:o.<43/
17]ls'B0Y)ATFsrSguJAO"T:4='u-_h>?D"KS2TK#69X6+H-U)mHK%j#gt`j?,u4n
h<H&ZgcgMW^5dGg2sEMofq=E4IGsHt_s4skm&2<;&lNo2N!Q#egu+7WhPokujFfdV
m0C3-*nf6'$1E?=n%K/XL_\(,+"c9g.?WOd4OYpSBeK[!02`02P-<mEGW@$YVq)b0
(W3ZSDoZF;C8sW$Zp40!hpu-;+u9f@P8$$P5M&A5bP`s^*\H#WIq*(J"ZJ;0?S41#
r[bG"5$edE1I="[7l6kD2"OU.,:H?Y-3-0G2BO1;6QpKmO7tGh/F%kA,7*"JSHYX/
.NGG8.fEtF9Cl6k+ZIV'T="LEe+?^",IFYVGR\Y7Sc+N#JNqj6pe=XQ,Deats#0'B
_>jQ9^u1;V1`d58KgOa[fQ9;#&I8MJ&NG^l+omKhj,r!dIR+)C`Lucn%%^<FPtL/$
flXr:0pt[$_24]=E?5Mk-SsHJrY$L_cmY,^2'.lOV,HQBfQ]l@:8pbHFZQp4-kQed
l]p2sI_fHt;LfG(*J?!GZeFOrR,,(,EOf?BQQX(G,mV'=AMS&&VY>DL6ipEdrE<tB
`5jGd]KH6@Mh>QFq-:@7Oq<UEF)m_(@R6I#5kInRkZ^>IZGJJ>$5TLW)7)W:]+)4+
EF.AeB/Z=C>2?sPE;5r.5(AR6j`:0ehKM/MIcs=Hh)c*9q:=qVqj.kbC(K4B8iM.D
(Pfg;e+[q6(cNX'_=g3r53OZ;kP>'KoWW9"p5(T(/,k:-YQ?rXTQ!R7PI=1qB*L[V
Or"0VO:k=23KU0A%A?Ou-AOm+=sEc/0QI[9`">rZ%E#.:1?HKZ\eqHdBOjO;,Hes4
'=O%ID'2&?P=Hb5OdqCT+]("R#Ka&Wdh>4aA>]&kBiJ!ib/erp.R?r,""YVC//]M%
ZOFH&3.Qf-q]Krbg<dqo9\tEILjYOG\kOI2Lc+[b7jQDZ9FeI,C4+tZ7^OpX5>cND
o0Ujg<6kinP`n6Tde)"X8CMMtq+js<1E01jY"^tE:=$T*Pu(DM=SLAPF4W_)<HAG^
ch4\3;`StfXXuYuqibE][A;8#,SM..18'l.HK*QES'HXiM*pe(8dQ6??J?-9&P50b
`PH4hf.:>L;V*Jg>hsUF5u[o()kQDn(46W]?0HBSI:'((+pilYbE`M;l*^I9=-uGn
L+]N-!WZ[h;hWBtG`E4@@VBud'81W(5EKD9(.XNu\Md6JAN<:W,K7l,V'=SGNX#F7
ZM#3s!#UG8M)lKVGQ;.)E]=F0R9#BEBf]:]OQDWPL4`hgmUVAUZR2ZA2h7KNTEAT1
^T_N9(<<^s]/J!BD*(eJ)up%8\,Zh<U,WF5g1KfdD`Uphc=9*LV(-6dj[fbjdfkN.
[K)s#%;m*Xf>qtpQRBpl4)WrYD7f?XNc/1s5L<opj8HNoH%^gd,5,7B_d<78rX&]H
DL'L9)?+jg9mnK:'6HD3J#)^U+*N63'1YrVn</aFf6-EUe_'SDX)Hbe36G74p`A%r
P'BMETRthq5FKG5qR)aPH.RWUkk]/9^\8oln%&:DWC>@Uom^':Ut#I>o-RioTE$/K
!s!9?!<jWe4bi>%?ut%OO@BNoB222%<!31D+9qm5&-.5:e9A,\&NU`s"^"t+JoINY
6>-H*!"9p$+<1AIYRn`<3!B<+6jCO'AI$>Gem!(nO?Y]p&R2b'"ORQ!&BD_U<q$-H
k`OjF[D\VD>Uh@FYaIdt#Qqk%!J>?%!!&)`!e:OY!FQ$3J8cP0J,fa#$P\fCB^!nd
o@Hb+`;i)e*:$r_=>!HaR)QoI(P$"#!>1VO5VN?Xahk&#P!J:hB^6sI:aQ>0_FY<J
n<4U?+b*#H5S7,k+:@Ie-5$jiJC##S^e"]l5WB"l#om=+.s`?]YRuJm&.09d.3N$K
ONYEA0UVVh+H1VS&;NA?*!;%O&t3MIq+s`F+9[=),R6f##oM`"$37jg"%LsY?fl&.
QW"HJK,-][LaXld';u_Pi+NOr80aO5*cmJ\N:WW?e"?iHC6Ic``'AD]!>*C-aJa(g
U#Q)^XlP&VVF<-c@ikn#$lUkiB/)]N!=!V`JkP#k$V2hk!&RR16<GH\BFQU>Zjbq2
(8AE43"U`pieas%/B@ih".j=THNJ^o!'ukoQ[lo5;;+26BgjLmi/eST;?oo4gnd5.
Tl^k_c@?=]#;UFRQkpZOE9!,(J[F^,e%c&Sf_!7`m!=iq&7,ac(bK7gn.YsIAObn^
7B+bq[CR4COpH`e8WiLt<R^[aWuP8+Fe"N27d`Sk]]pWhO:fm.NDaQ5!<j,Z(=(iQ
$O@b$SSdN+^&eTg=c;@*&PZ6WWuc/[M_+o/r#K"RH#IQm^UN.lSCq+F0$$"."\aAk
g'0]SJ.3I-eImsC:hOjO5mFI=g>#\]Vel]Ms*Y["g6W/h`@]'?\/2%8>J#SA/0)R0
TSs[\!)l!4BaLT#kSaF4;_eARf!&.?cW[ql'3l"+,P+CoV!H$(mjZ"@=/,BH4*tNW
ANQWq`q^0";fj?P#d^uqVUTto0JF/d^lA3n?/,u]WH%O7fJa$W30jP0Qp1hc;]T)H
Ip-_:-b.^<^eu-GEu=k+Se^H$dEhtnYq>EcnKK82`D%$*MN<Xm^+84fXb4o243R^$
8li$E:Mfe,"kb&\A6M?`WVt&_j<E[4,VbXN/dfdijYJ(h_2e#k9>_R_m+5s00.&It
XqsR$=$T9G83V*s7#&W9N:ELGeoj&VpDq@m36I(GrR0DS$#,0oH1]YQch_ic!^'@K
/T[l0Uj!WHb[[TJ3V08h&.A[!JZ8*=@b#f/O4>_Yhs%F'O6`[J>2>K7/7JCUjst'0
@\p%62SQkLpL.pC7l.SH#eV*T#45oY[P([\gQGU'5L!iNN4a%;+=]>N&/#!)R0ipj
lib3]:Et(>%#&uuF'K+-\oh?/gcN$qJC_42j`gk-)r;'T#^/gbK3[=;qf3UC2?Z>(
6/Zq`K(*J+-7%$F=N7%<W#DqIcci.0[rH_21-GZr+9d;R'8qA@#7K5C$B0r5#B-gd
5lb.JK9;d`5Ug50J9V'ROfBD@DDc:bIC\Du<f$<</#uHI.Tm\/\m$D]X\i4=@g&A@
9!4Ds5TJTn!&&Ra5);Jf.m/HSmXl'gNsgJcXXF$_cs\!%D`63PlaL_T?0'JfO\m!*
r6U7D%HG.sLCt_L\hchCotMZK%cA<^0C]@d%6t.9+E6Mn&>JUS>?CmuhT+;r5@WAP
H^4X4&0H86H1-1U^\?[q-%]K\nU<F;q&_!GI(u*@IWs-6i7n<ZG/<R9K6$[XBC1,^
\6;29A,m^$fRR@o!P\$cr?#m7IO<&/Io#P4*mom&%amjt-[,P2kD53R$3PT6!'K"n
2ktgHE\rRj"1P3/+Mn5o>La!mbo;<A^m#/@U^FoE$c'[h^sih/j:8ut&&AA[_%[Kt
,SIpM'>['N_,M/cA/<"'(Vtb@!4j<Z\dq%.V'VRJJ5?:lF.U&*!P0f`La3*_KE]%K
JtN_m!(4ONX8'PR-bkT*)\KNle)3R"/%t!,6I[U(j=\=@j?Adm)Z2$':]j'!-ppBZ
RmZoh*&^/`2oC3f^K^1lA2qK5oY6fe!6ZsM6dn0))n`Z\TumEZ'H]RR]"Ipe\q?hG
1Y&AgW2OL3(NUM"Wl_^Eho)9>&G*_".7>r$Vn4)9ZH2p\i;GchLr7l,+j$lOe"/eB
)n1Hn\)78*Hi6?GK11(h2%$IJ;b<?lQT.g<]S'7@#R%p;!!"gNTJN/fBEOpVU4>iU
\9(l($ides7R0'\LbJiP49.NL@)_J*Qg9=F!2Y41@RhiX*bqdpiCC@nFN8pU29Mr-
3B3%PH+#M<Qq9Xpe&_lCEY$?,Lcf!6M1$q=(I]b/82u8W>/\#aMoGj&4Cj&Q*,uMl
=.!NBaJ=g#KS7G)a2eCEaUmm*\I_<K'?@2:a\]K8bSh$\M[dUjNAIdP6Rt^sN("$9
72e_=]Tn_'KooW5'\nP>FJ;A!T=e!ba<9J7&;&"a(!86laiNYXFJG*XVR:Mq8n=`R
FC,X`W/*6%`AFekYr#(h#tm5X[0%0u@#mkfM+E$"Pk;>QjHqeTX./aZO]8V3N2_hZ
WlpN#8&Tc\r2#Dn_9#6$b?6/^k`ElAm`6$FbR4Wnq$G46L!4qdbg>!4=T$@iI`U$`
bn/%>/CBA<\'6bZNJj#7FOishW_IM.LfB+l.Sl%Gf+6W'&+c2`:pLHC\e2Te%CELe
UKC0)=\J8HbQQd\4EcR7R1Eup:4[H-Yu8]sDpDh5%Xc/.XQL:&YtiJW:@dsN&GaU#
L/.sA[1r/O"NA\dpRXM)b2AK-kh&O%c]F[2'6N;qAED-i>DipJ,il'X2#4RG6Vl/M
9uO<[N;ndrp'G:2&)=P9]VnYCJ&KkA:-Ah6YulmfbrD]]c/HR.o`HK$#Sm"?P8+!+
>lRXYWK`2EMbKQHC^<8*_[GiDN'+JnFQ3s$nq\R@%cnL(Gc(pL)'-[,^S-:^@7/En
]F?P-]L=9<<>>dUb`:L';CJCJd'T8*#h&r2dhOUd,r3q,1Xe((`B2.tD#03#[*kd1
[.'F,%5"L](r;H.Lg8)aSN0X=PDOu:;mLq(!"8k<XoR97<)<jNW!H@F8(<5`e<NVT
R=Q:8lOW(t:=oPFrD&alQqpFBWIVBU2'e'H$%V!-*jeP]I-ED_<_-dN<:sCF*)BM[
qpAg5::_iR]ho*X8C]:1$=jE*J@Es@#g9&J<M_2[*A(:\UD6$&!9gH`L^\k`dERdi
clh:,m0/o+AQ88e/WEI7'\sK%B<p`_5Je3B1Umf,mLWb73o+aRPu(.KFAsQ/-pfVD
3!%D7>6'iFf;0rr%1Lk-44hi2+bGB@S/rN'"fQ5<!)a\9pncGYmaHl@f<%)6c%DJ.
#Gk<O,6A>uW!&jS1a>mV=IH`pNGf^]D2nL3aA%3;eN$\FgXYNZ9sp$a[=k>("/IrM
6<XF[l%l)c!tYni:5J)[V0UapY#\qad_a\kNLgHqO<JXF-$1D9,Kp-fU^2Y\#Yg59
`;A'D#IAZ-VjN,<9*$jnO;S=U.1)'5YQ05V&_hP_>IkDMW.`Wul.1!X>.pOT^]Gk2
DBg&P-N\96Q*6#*YpC\DS*5[%*OLV[[AD!,/-;SNM[gU&[+i:,Lb6<5ID1M+6!C)o
g^p2_"/.,0KcoA-=Ge-SE/WM(R,!hP0i_@!F#U*.cDaVY./QA_)NUi<!3<qsVg>1q
-.&Xn93j6(eHkTu%Fp<#'GYHu7((gt'e#ajh\d@uJJt868WTcg!.e%o?<+Tm2<!;t
]O#nVhMCpYki6!OlPHr6>cmeX!KVeXO/c4B?Rk4kK5RdppTN3fW6OK^@s).sQ/9K(
fms7Xc/,?aNsJY\//'3W*VFt]HNBl+?sWP8\e,7&^YjC-@#145.ggfW*=*u/#Tai`
%N71I5(VOf*p(QN,)QXc)$*1`Z[2L"jps$Vd:"'C@HnHV[!c@U;2_RmXmR%cVAYD@
9`bKL@GUo#!hHBZ(#U\(LcYD=(_nJR(ouR5@SSO"21iqn-_KN9WOl);BX6To46!3o
]H\GJos<Sb#2eh<L`QPI*P/C;$su@GZ>.YAHU;$73a\F_=!a6\:,ieMYtQ*C@ZVZK
5!3;YiFL,<Z/.%gr\e:RPq`'I/"R1N)arU>jJls%@pVDFUM8>1Kj'l09T5lWSkB^1
.,p=/$AM>bXut[T0O`7)je_Y,$@=Jp<uCeEX2ZpU'/X63"t!pq$%:<7nV-"bQt?UE
%;oW`YiW7C53>m9k$a?(Fu3ESOJfC\AtjKV/o0DmCnQ4jhl^j^/oQSqE/:*+Ah`;R
4f?bh2eV+VkOA8kMiZkZ*XLVR<p#.I"!)t.hIn^.=h'OSa_BGbK\jB;3kG\Zc9#O]
@NDm<1"LG[c)=oG.:eh&?bVUQSrjHDOuWdiMN3NIL6XLEQFo[XOq*oEU6t2MdV6UM
M6<F_/E,jb$0c&p2bp%P*U1un8s;WQ[uc0MX3:i2I)5lF3+8H[)HVpDKo#Fc]In3g
4Taje0PJ2"3&[d0<I;!*X:hD8RH'&g_gF]\P\\j`NTRSRm^5+$:Za:JC2Ec^HM-AH
\MiT]4$L;P<-/ESRj1k%\_KP2MkI")\qh>A3_P8T@N"J&L*4896lr[m'9;:"(?FVs
BGfNAG)GNj5AYs[kh?ndf]#sen*,Yf`Z:S*)n":0c+Km.]:<"b/6YJP[^m$&D*fkk
\D1mCQ0/XRlYaXQ4!!HYgpRp[fl_qr?HWW:jFC2olLW7\o?Oou7&=-W]c[Hk1Y(o\
JYY>Ia.tf3He<8sm)$dC_RZlOpB#:ls6rM[E"h)[?lQu_#OmKSn<XHq,P6S$%>&L$
nCJ-=k6+/oSo6<=^U^"%dsJjqs1f-=3VB17,R$Z_qf-fW7\T;"`u=KW)tCrgn^efO
k8s0f+7]XZneWI;j;Ed_)^@1)_:=</2\eXnCqr_KLaN"o'M0R08ohs'o%,Jak:Z?"
0CoE&e;,IP\0odf-N\fHJ`eo^B/]@*2tM8C!6n"7j[\pG3cc*"o@H.rf.qD+1%S1#
F:]jPQkT*N6hEl:oN+KRB1DN;8+_R-oTr/ATG)p"8V"QKo@VNBmlkjf:\=rV!e3o9
a%^[e;tWX[o$pBR/ma>b56r3aE_HAu>XImsYj[4l7`%UaJda&EFr)abZISA_UD6fD
[SctCD]S+ZV#L%#OMtQ>4(nZ6HiUdS=iIRM^gMc\$6*b:9@=!&DRg<e74l,A<sVK0
)<>>s_?5<.B#]1D7[DCjWZ+>*.0q#5J7!6$eNR^s-f]W9!1.e<[*k&#o>sHLGPoi`
SGIF8b]mkLFu^mEWF]r1iRQh8G[@:O;(?`*A.e?0l6hRM[u[t1@O&[D:Vd?6:NFYY
B)*RXGqkfBAaKat$Hq;;C:,VgLR<uaR?#f=D@#FP:2X;AT)&)ThWU3Y+NrLs"Dap%
:046;8?bcXKireMa/m-O=.tXr`nA07jkl9uW@E/?I!C&)=?!PA?`&k8Q'Z]oHY"f(
2n?*k[JR=n=d5B.CkVROT^CBlkj7PIs1F=eTG@d%)1ST!G_g^3(AarH$C?R30?SPT
>C0GqI$OVVJT^eGc2@Y!Hhi/=s3U]ufMV+drD;8F]d!r8ernp1NPD\8T<A^5Z%sH*
rETF$:nmoMrdF%0qagP0:Vk2OaSjbcr(!UmI0tE?p3JC)G%SjF9cF!=JC39?X`*+@
kG\0hDLP+@M>u[u-g(EZWr90aIP59t^Zp:[V10ceIlECu:W@QRYadB9s*3f-i26G9
!/LUZ"Ts?B@*j-d-5?oC6Xe@:KK(.U#fL3"Gf42O)idEudJ3p"73dseAC>`kV??ma
94cQIKZ6\"#_aU(H,Sif4.]5\e+s3)=To-8kV3u,CcW?,dqPKuYY(HbW`<faHGsJ3
':Qb<PA0t*";D+GJeb41E'OC3d@aM7I4iog!/,49>I82l,q92hfDGgX"bX[#E7fP-
-P_QSh;FWhVFMqrb!Uam82ad)@BnKN!"1s=/f`3l.+tPD9/i-9BH[08hD8`Lg22#c
XUH"SXPRl>eR42#*<P0gk?nZ?CJ2:HE(<%&@98-n$Wsn1!/@W_fo<qggOBH``T+`,
TRG,#Vq(,,7mJ&sLWANJqL*hMJ&af1@"sCp05K(NYHK2X!l3#*!<g58>Sr(n%]c61
K$^#:$Gt0&0atrrgc5apDhp"S+qO;ahh$D5XTQO>>KIMsd<o?DV1=LIcbJe7-ITg\
Z`=qKY4Pj>aA&1Q,08+20W:Ym8u0`lOG%MQaWe>]*IonT;Y*HD(bH=Bdcr^sK]0:n
1<drn]Rn??gt=Tcm6V1?-dK$_$VDnd7k5]\Or4m,aW$UucmZ9?1/.='%m/-Zr>A)&
'BJl28]i58!BFO+&-RO!!!JChi<qG5+gLDSO3r&Q+WsVs>_baCodsTSUpPXS=sm7C
495IR&./L?BK-h/!@\at>?4<Q:KO7[4B#9`d9U$fg/aY.@an!:E/rO@(_L1XXS<\6
[%JfOc[e>U\c^\8D65B5/![&kfdkMHBAUumUNkZtg)kL:(L8OsTKl$KE`_0I%L:a]
#Qt63?r.e[J;DJJLL(eV*I4D[<UYs\2pO.>j@ag1K!#fV6#GP)-lh?!=C'(tJQCtA
N9';"99H"9K(.eEf_0jbkLo!?U?K`0!0(PT#Ta3O+E/BRAetoeJu;TqNgF7;.M*?u
@9O-T0L8;6)R):'"1'Z>Jd/u+LcehAmTZ-@Un]qH).*@d<ZD<Y(g$nG!L2.[X!]^s
k`e>0<kGQ/!K-po+G"S7ZiD7qr#,cDBLfP)gQ*#poLY)0N)InPIK8-\"iH%E3K;@R
-V[Z3POodb"gE"TpgSdYMtgqlL7efbb+O(m7M_YdE!+lh]s"+oij5,&l(OQd'9+4t
g^&IVhD]Vm"\9F`^N3gK:]Q5V2S^._h@G>@q4@M<OEs.('eCKBf;RR+KFRsC[qOuh
>&$bW@7%KERUFt!J8L@K^HADH$cil20C=9("!D.ChAb^.:3Hf<BF[;c/,4eESCa\5
&IJftb^i.sh76u%nc9]CD,7SJJ.PQ3!Gdi&TWiu0_@6394=l<9*/$@OGRgHY9o77]
-3N8G%Yu*(+Al5@`JCb>U4cg1d52qq"2>FW)1I<.#T85groTp%IY[t-hmhjrnK1:X
NU[>m3XCihi]KgjOa\qd!.PbnXG)Q&)F?m7!@$N24[fo2qF4ioj8j=4"YN\3&;QAP
!MBGs/[,s[GX3Tbe9mM#nD]OD;T]UIdk:^j+NVWm&:sJ0Mc/5C*e`M`jck9$.?6qa
aX1AbPb*meY_0i<gAG;_U26!T's?eD.H[=)HGoA=-\\_!A`UO^;C6?UGn2mbP,APJ
p+OE&`ds`R_L+%_ilTj,?f:O?K)gnhJ/@#tTaG@[doLu5frf>OXP6dK!cH;?EB,BZ
d[\d\0=uMbnULltSu)R74B_+Ij)"W9nYm7!q?':1o`J7e'eL;L'-ek&%AhJr=O?mf
'ES@/N09>.QhVu_>6AVkc`/uhB.aJRnHPcp*g'>mPYPpI3L_J3K2S\r/LXl_VA#4`
:3pOdl)Fi!213DCR[7-uKhWp05&4.:&NV0P<hYdZR+7Y7'Is?0X<tVl<_E!V-!?:o
ch:=>ncf5.K]nou^;NbMO#50G/$<rn]3,dV1m`?3ZH4/p)(K5._<#R@e2<1d3k7td
Q)-/M?%t-^C&gLi")9),!A5,n".E*X=E^E>*kO@DCeZQq<f/7qjdTte-'nY15Qe)F
bA50[Q>2(me"$kbDAL(rVKB8HgZCkB,6VJcQ[[,`eN*_6BEVoi!DHc6cZE?0!4IOd
"e"ii`8,dA!EZkp&1a;Ri!NOW<ohB[cnGu^"`09Dp:)V$9*kXTg]paU6XBR^#fmbh
A0=DK+2TqIJ5Vp\GFS\a6_FMLA[<L\guYe&c=cTk"2At2ZP.[@<>N!&O;;l_h3o?h
Y3$;4<gp9HZ6i_Yd29eqb1GFS$Dj$Dqo$[#_#PF7!Um'!>G(s#&5/a3<5m@k#I`s;
4EWY0<SXksrlI6$EdR;t)ZZ7ucf1SuCVV>-^*!M)]$"6'X\5Vn/@O-/_?A&&c7V:@
FoA#i'r(>4NR?HE880(jV"CAr62FYVBp:Xh[-!q.g4)m!@!mYc)ACW3Mc+;\26-=]
X[?9E=DJp<(';Q\"M3JqCRoUNp#`s>gAbPs*JL`k-FhU\+(T2P0Sdq[7(N_B?0&(T
!e;J\]fGBl.;\sU(G6cUR;4qsZS$]N-KX%;T6+tAe[kKemG6O3G]+Va]_A;rhV6q8
Dk6R8pZDG2^g3QD]W[K>`V!sqD,/u:YACQ-:s1joqX*XS\1W%58NSG]ELo&-pu`[X
)Tu69J;:-^2QGi.T2Y:J<QFn?/^o7^!!SpObk\.ok1nj%o"K7ld%8H<]/Y_JZ_<nm
7W;V`VY=P3pX&\qKAq1opukk[N*-rrK[4BI&NkZZZX5sB!%0jY!"F>qp#oW<*!?9-
BVp:`aj6<jq/B(Te@IrmmZO'?0okjZELQF`"C-f:<KG_3_a_^m[kAMWp:gH0.rLpU
M\QAaOM$2__\j9/c)O].RQ$.TDMQBLIgC\-c^FFKp9f,l8)iCGO6^=8^p/qiDS7^$
p;AH^?hW[NI$kE7mO&AB++cl\SUt/o6OJ2oPO8?^boiT=b7dZ+o=h-QCHf2MHQTB`
ro6'6p0['4ho+>$m=Y2Y+7bptcF_5/U9TRDeI^Vr^fE\=ZCd3FppKe\46k>f+s-VW
./!&unKr,rE"$M9&-+BuLusMtDs2KKBP;?.!0A\!O0Gg+,m)FP",)VBlVRa\3s8AL
6#XL@OA?#br:`__"_P(7K;egHVYDg!H7t@&n7`%U`rAKenZQ\<DuP%nAfue)#;C8m
-PH`_7gKOR$#kctE-@R%NZlb'CG;3!:kVYAI0n#r$3d<ucf/S6XE6/#-#g7"Bho,5
V"&Cfp!3u$d)]Hgbma+(>*,]nORE\ko++[l&!6Z!d/OXY;#sK1BX%bS./<n]M#rH&
!^[D00`m0Xd]mbePgI?g0]<;"+GA(h0!Ei>YrNJRNrA'T$jT3"_@I?#2&/ti'p2]8
d9dXjF<D\~>

n
Q
Q
q
8.33333 0.0 0.0 8.33333 0.0 0.0 cm
Q
Q
Q
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF
